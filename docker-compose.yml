version: "3"

services:
  # PostgreSQL
  db:
    container_name: postgres_db
    image: postgres:15-alpine
    env_file: ./.env
    volumes:
      - postgres-data:/var/lib/postgresql/data

  # Django REST framework
  web:
    container_name: drf
    env_file: ./.env
    environment:
      - DJANGO_SETTINGS_MODULE=aw_project.settings.prod_docker_postgres
    build: .
    command: sh -c "python manage.py makemigrations &&
      python manage.py migrate &&
      python manage.py createsuperuser --noinput &&
      python manage.py runscript auto &&
      gunicorn aw_project.wsgi:application --bind 0.0.0.0:8000"
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    depends_on:
      - db

  # Nginx
  nginx:
    container_name: nginx
    build: ./nginx
    ports:
      - 80:80
    depends_on:
      - web

  # https-portal:
  #   image: steveltn/https-portal:1
  #   ports:
  #     - 80:80
  #     - 443:443
  #   links:
  #     - web
  #   restart: always
  #   environment:
  #     DOMAINS: "api.augmentedworld.dev -> http://web:8000"
  #     STAGE: "local" # Don't use production until staging works
  #     #FORCE_RENEW: 'true'
  #     CLIENT_MAX_BODY_SIZE: 10M
  #   container_name: https-portal
  #   volumes:
  #     - ./ssl_certs:/var/lib/https-portal
  #   depends_on:
  #     - web

volumes:
  postgres-data:
    driver: local
  # ssl_certs:
