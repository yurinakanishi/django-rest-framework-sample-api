name: Django CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest
    env:
      DJANGO_SECRET_KEY: ${{ secrets.DJANGO_SECRET_KEY }}
      DJANGO_SETTINGS_MODULE: ${{ secrets.DJANGO_SETTINGS_MODULE }}
      DJANGO_SUPERUSER_PASSWORD: ${{ secrets.DJANGO_SUPERUSER_PASSWORD}}
      DJANGO_SUPERUSER_EMAIL: ${{ secrets.DJANGO_SUPERUSER_EMAIL}}
      DJANGO_SUPERUSER_NAME: ${{ secrets.DJANGO_SUPERUSER_NAME}}
      POSTGRES_ENGIN: ${{ secrets. POSTGRES_ENGIN}}
      POSTGRES_NAME: ${{ secrets.POSTGRES_NAME}}
      POSTGRES_USER: ${{ secrets.POSTGRES_USER}}
      POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD}}
      POSTGRES_PORT: ${{ secrets.POSTGRES_PORT}}
      POSTGRES_DB: ${{ secrets.POSTGRES_DB}}
      
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.11]

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Run Tests
      run: |
        python manage.py test

    - name: Docker Compose Up
      run: |
       docker-compose up -d

    - name: Login to GitHub Container Registry
      run: echo "${{ secrets.GHCR_TOKEN }}" | docker login ghcr.io -u yurite6174 --password-stdin

    # Push to GHCR
    - name: Push to GitHub Container Registry
      run: |
        docker tag backend-nginx:latest ghcr.io/yurite6174/backend-nginx:latest
        docker tag backend-web:latest ghcr.io/yurite6174/backend-web:latest
        docker tag postgres:latest ghcr.io/yurite6174/postgres:latest
        docker push ghcr.io/yurite6174/backend-nginx:latest
        docker push ghcr.io/yurite6174/backend-web:latest
        docker push ghcr.io/yurite6174/postgres:latest
