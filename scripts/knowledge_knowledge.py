#!/usr/bin/env python


# This file has been automatically generated.
# Instead of changing it, create a file called import_helper.py
# and put there a class called ImportHelper(object) in it.
#
# This class will be specially casted so that instead of extending object,
# it will actually extend the class BasicImportHelper()
#
# That means you just have to overload the methods you want to
# change, leaving the other ones intact.
#
# Something that you might want to do is use transactions, for example.
#
# Also, don't forget to add the necessary Django imports.
#
# This file was generated with the following command:
# manage.py dumpscript knowledge.Knowledge
#
# to restore it, run
# manage.py runscript module_name.this_script_name
#
# example: if manage.py is at ./manage.py
# and the script is at ./some_folder/some_script.py
# you must make sure ./some_folder/__init__.py exists
# and run  ./manage.py runscript some_folder.some_script
import os, sys
from django.db import transaction

class BasicImportHelper:

    def pre_import(self):
        pass

    @transaction.atomic
    def run_import(self, import_data):
        import_data()

    def post_import(self):
        pass

    def locate_similar(self, current_object, search_data):
        # You will probably want to call this method from save_or_locate()
        # Example:
        #   new_obj = self.locate_similar(the_obj, {"national_id": the_obj.national_id } )

        the_obj = current_object.__class__.objects.get(**search_data)
        return the_obj

    def locate_object(self, original_class, original_pk_name, the_class, pk_name, pk_value, obj_content):
        # You may change this function to do specific lookup for specific objects
        #
        # original_class class of the django orm's object that needs to be located
        # original_pk_name the primary key of original_class
        # the_class      parent class of original_class which contains obj_content
        # pk_name        the primary key of original_class
        # pk_value       value of the primary_key
        # obj_content    content of the object which was not exported.
        #
        # You should use obj_content to locate the object on the target db
        #
        # An example where original_class and the_class are different is
        # when original_class is Farmer and the_class is Person. The table
        # may refer to a Farmer but you will actually need to locate Person
        # in order to instantiate that Farmer
        #
        # Example:
        #   if the_class == SurveyResultFormat or the_class == SurveyType or the_class == SurveyState:
        #       pk_name="name"
        #       pk_value=obj_content[pk_name]
        #   if the_class == StaffGroup:
        #       pk_value=8

        search_data = { pk_name: pk_value }
        the_obj = the_class.objects.get(**search_data)
        #print(the_obj)
        return the_obj


    def save_or_locate(self, the_obj):
        # Change this if you want to locate the object in the database
        try:
            the_obj.save()
        except:
            print("---------------")
            print("Error saving the following object:")
            print(the_obj.__class__)
            print(" ")
            print(the_obj.__dict__)
            print(" ")
            print(the_obj)
            print(" ")
            print("---------------")

            raise
        return the_obj


importer = None
try:
    import import_helper
    # We need this so ImportHelper can extend BasicImportHelper, although import_helper.py
    # has no knowlodge of this class
    importer = type("DynamicImportHelper", (import_helper.ImportHelper, BasicImportHelper ) , {} )()
except ImportError as e:
    # From Python 3.3 we can check e.name - string match is for backward compatibility.
    if 'import_helper' in str(e):
        importer = BasicImportHelper()
    else:
        raise

import datetime
from decimal import Decimal
from django.contrib.contenttypes.models import ContentType

try:
    import dateutil.parser
    from dateutil.tz import tzoffset
except ImportError:
    print("Please install python-dateutil")
    sys.exit(os.EX_USAGE)

def run():
    importer.pre_import()
    importer.run_import(import_data)
    importer.post_import()

def import_data():
    # Initial Imports
    from accounts.models import UserAccount
    from general.models import Article
    from general.models import GenreForURL
    from general.models import Language

    # Processing model: knowledge.models.Knowledge

    from knowledge.models import Knowledge

    knowledge_knowledge_1 = Knowledge()
    knowledge_knowledge_1.name = 'ドライクリーニングで汗の汚れは落ちない？'
    knowledge_knowledge_1.slug = 'will-dry-cleaning-remove-sweat-stains-jp'
    knowledge_knowledge_1.language =  importer.locate_object(Language, "id", Language, "id", 2, {'id': 2, 'name': 'jp'} ) 
    knowledge_knowledge_1.genre_for_url =  importer.locate_object(GenreForURL, "id", GenreForURL, "id", 1, {'id': 1, 'name': 'knowledge'} ) 
    knowledge_knowledge_1.type = 'knowledge'
    knowledge_knowledge_1.notesite_url = 'https://note.com/argumented_world/n/nc8130697e96a'
    knowledge_knowledge_1.article =  importer.locate_object(Article, "id", Article, "id", 6100, {'id': 6100, 'excerpt': 'ドライクリーニングで汗の汚れは落ちない？', 'kicker': 'ドライクリーニングで汗の汚れは落ちない？', 'content': '<p>ドライクリーニングの意味や石油系と呼ばれる理由は？匂いの解決法も | 家事 | オリーブオイルをひとまわし</p>\r\n\r\n<p>クリーニング店では、ワイシャツは水洗い仕上げ、スーツやコートなどのウール類はドライクリーニング仕上げなど、素材や汚れに適し</p>\r\n\r\n<p>www.olive-hitomawashi.com</p>\r\n\r\n<p>『ドライクリーニングの現状と展望』\u3000海野 信\u30001996</p>\r\n\r\n<p>Photo by Waldemar Brandt on Unsplash</p>', 'references': '', 'rating': 0.0, 'rating_count': None, 'published_date': dateutil.parser.parse("2023-07-03T02:53:18.366157+00:00"), 'updated_date': dateutil.parser.parse("2023-07-03T02:53:18.372662+00:00")} ) 
    knowledge_knowledge_1.author =  importer.locate_object(UserAccount, "id", UserAccount, "id", 1, {'id': 1, 'password': 'pbkdf2_sha256$600000$Q9AwSzFqEXF1ueS21sGGfz$rZo+NVruXU5Zf5vp00wtuwLn0Z333sn5NtvS8VWKqds=', 'last_login': dateutil.parser.parse("2023-06-30T06:03:10.086511+00:00"), 'is_superuser': True, 'email': 'yurinakanishi33@gmail.com', 'name': 'yuri', 'is_active': True, 'is_staff': True} ) 
    knowledge_knowledge_1 = importer.save_or_locate(knowledge_knowledge_1)

    knowledge_knowledge_2 = Knowledge()
    knowledge_knowledge_2.name = 'Will dry cleaning remove sweat stains ?'
    knowledge_knowledge_2.slug = 'will-dry-cleaning-remove-sweat-stains'
    knowledge_knowledge_2.language =  importer.locate_object(Language, "id", Language, "id", 1, {'id': 1, 'name': 'en'} ) 
    knowledge_knowledge_2.genre_for_url =  importer.locate_object(GenreForURL, "id", GenreForURL, "id", 1, {'id': 1, 'name': 'knowledge'} ) 
    knowledge_knowledge_2.type = 'knowledge'
    knowledge_knowledge_2.notesite_url = 'https://note.com/argumented_world/n/nc8130697e96a'
    knowledge_knowledge_2.article =  importer.locate_object(Article, "id", Article, "id", 6101, {'id': 6101, 'excerpt': 'Will dry cleaning remove sweat stains ?', 'kicker': 'Will dry cleaning remove sweat stains ?', 'content': '<p></p>', 'references': '', 'rating': 0.0, 'rating_count': None, 'published_date': dateutil.parser.parse("2023-07-03T02:53:18.366157+00:00"), 'updated_date': dateutil.parser.parse("2023-07-03T02:53:18.372662+00:00")} ) 
    knowledge_knowledge_2.author =  importer.locate_object(UserAccount, "id", UserAccount, "id", 1, {'id': 1, 'password': 'pbkdf2_sha256$600000$Q9AwSzFqEXF1ueS21sGGfz$rZo+NVruXU5Zf5vp00wtuwLn0Z333sn5NtvS8VWKqds=', 'last_login': dateutil.parser.parse("2023-06-30T06:03:10.086511+00:00"), 'is_superuser': True, 'email': 'yurinakanishi33@gmail.com', 'name': 'yuri', 'is_active': True, 'is_staff': True} ) 
    knowledge_knowledge_2 = importer.save_or_locate(knowledge_knowledge_2)

    knowledge_knowledge_3 = Knowledge()
    knowledge_knowledge_3.name = 'スペイン帝国はなぜ落ちぶれたのか'
    knowledge_knowledge_3.slug = 'why-the-spanish-empire-fell-jp'
    knowledge_knowledge_3.language =  importer.locate_object(Language, "id", Language, "id", 2, {'id': 2, 'name': 'jp'} ) 
    knowledge_knowledge_3.genre_for_url =  importer.locate_object(GenreForURL, "id", GenreForURL, "id", 1, {'id': 1, 'name': 'knowledge'} ) 
    knowledge_knowledge_3.type = 'knowledge'
    knowledge_knowledge_3.notesite_url = 'https://note.com/argumented_world/n/nc37293b90dbf'
    knowledge_knowledge_3.article =  importer.locate_object(Article, "id", Article, "id", 6102, {'id': 6102, 'excerpt': 'スペイン帝国はなぜ落ちぶれたのか', 'kicker': 'スペイン帝国はなぜ落ちぶれたのか', 'content': '<p>16世紀、「太陽の沈まない帝国」と呼ばれ世界で最も豊かな国であったスペイン帝国は、なぜ没落したのでしょうか。</p>\r\n\r\n<p>その理由と言われているものはいくつかありますが、今回はそのうちの一つを紹介します。</p>\r\n\r\n<p>新大陸からの金に頼り切りだった</p>\r\n\r\n<p>大航海時代、スペインはメキシコなどの南アメリカを占領し植民地とし、そこから金銀を奪いました。</p>\r\n\r\n<p>そして新大陸から運んでくる金や銀を資金にして、戦争をしていました。</p>\r\n\r\n<p>元々スペインは羊毛などを使った毛織物工業が盛んでしたが、南アメリカで金や銀が発見されて以後は、ほとんど金や銀に頼るようになってしまいました。</p>\r\n\r\n<p>当時のスペインは、王室の財政悪化や海軍への出費でかなり貧乏になっていましたが、「まあ、今は新大陸からお金が入ってくるからそっちに頼っておこう」という状況が続きました。</p>\r\n\r\n<p>そして、とうとう新大陸の金銀がそこを尽きた時には、手遅れでした。</p>\r\n\r\n<p>スペイン国内には強い産業が残っておらず、オランダやイングランド戦争や武力衝突にも敗れてしまい、国家は衰えていったということです。</p>\r\n\r\n<p>一方イギリス、フランス、オランダなどは、スペインのように有限の資源を略奪するのではなく、天然資源の活用、通称網を活用して貿易や商業で実力を付けていきました。</p>\r\n\r\n<p>「図説世界史を変えた50の鉱物』 エリック・シャリーン 63</p>\r\n\r\n<p>スペイン王国スペイン王国 | 世界の歴史まっぷ</p>\r\n\r\n<p>スペイン王国 （14701〜現在） スペイン・ハプスブルク朝（1516〜1700）, スペイン・ボルボン朝（1700〜18</p>\r\n\r\n<p>sekainorekisi.com</p>\r\n\r\n<p>Photo by Jingming Pan on Unsplash</p>', 'references': '', 'rating': 0.0, 'rating_count': None, 'published_date': dateutil.parser.parse("2023-07-03T02:53:18.366157+00:00"), 'updated_date': dateutil.parser.parse("2023-07-03T02:53:18.372662+00:00")} ) 
    knowledge_knowledge_3.author =  importer.locate_object(UserAccount, "id", UserAccount, "id", 1, {'id': 1, 'password': 'pbkdf2_sha256$600000$Q9AwSzFqEXF1ueS21sGGfz$rZo+NVruXU5Zf5vp00wtuwLn0Z333sn5NtvS8VWKqds=', 'last_login': dateutil.parser.parse("2023-06-30T06:03:10.086511+00:00"), 'is_superuser': True, 'email': 'yurinakanishi33@gmail.com', 'name': 'yuri', 'is_active': True, 'is_staff': True} ) 
    knowledge_knowledge_3 = importer.save_or_locate(knowledge_knowledge_3)

    knowledge_knowledge_4 = Knowledge()
    knowledge_knowledge_4.name = 'Why the Spanish Empire Fell'
    knowledge_knowledge_4.slug = 'why-the-spanish-empire-fell'
    knowledge_knowledge_4.language =  importer.locate_object(Language, "id", Language, "id", 1, {'id': 1, 'name': 'en'} ) 
    knowledge_knowledge_4.genre_for_url =  importer.locate_object(GenreForURL, "id", GenreForURL, "id", 1, {'id': 1, 'name': 'knowledge'} ) 
    knowledge_knowledge_4.type = 'knowledge'
    knowledge_knowledge_4.notesite_url = 'https://note.com/argumented_world/n/nc37293b90dbf'
    knowledge_knowledge_4.article =  importer.locate_object(Article, "id", Article, "id", 6103, {'id': 6103, 'excerpt': 'Why the Spanish Empire Fell', 'kicker': 'Why the Spanish Empire Fell', 'content': '<p>Why did the Spanish Empire, which in the 16th century was called "the empire on which the sun never set" and was the richest country in the world, fall?</p>\r\n\r\n<p>There are several reasons that are said to have contributed to its downfall.</p>\r\n\r\n<p>Dependence on gold from the New World</p>\r\n\r\n<p>During the Age of Discovery, Spain occupied and colonized South America, including Mexico, and took gold and silver from there.</p>\r\n\r\n<p>They used the gold and silver brought from the New World to finance their wars.</p>\r\n\r\n<p>Originally, Spain had a thriving woolen textile industry, but after the discovery of gold and silver in South America, it became almost entirely dependent on gold and silver.</p>\r\n\r\n<p>At the time, Spain was quite poor due to the deterioration of the royal finances and naval expenditures, but the situation continued to be "well, let\'s rely on the money coming in from the New Continent for now.</p>\r\n\r\n<p>When the gold and silver from the New World finally ran out, it was too late.</p>\r\n\r\n<p>There was no strong industry left in Spain, and the nation was defeated in the Dutch and English wars and armed conflicts, meaning that the nation was in decline.</p>\r\n\r\n<p>On the other hand, England, France, the Netherlands, and other countries did not plunder finite resources as Spain did, but instead used their natural resources, commonly known as nets, to build up their strength in trade and commerce.</p>\r\n\r\n<p>------------</p>\r\n\r\n<p>Thank you for reading to the end.</p>\r\n\r\n<p>References, images used, etc.</p>\r\n\r\n<p>The 50 Minerals that Changed the Course of World History, Eric Chaline, 63.</p>\r\n\r\n<p>Kingdom of Spain Kingdom of Spain | Sekai no Rekishi Mappu (World History Map)</p>\r\n\r\n<p>Kingdom of Spain (14701-present) Habsburg Spain (1516-1700), Borbone Spain (1700-18)</p>\r\n\r\n<p>sekainorekisi.com</p>\r\n\r\n<p>Photo by Jingming Pan on Unsplash</p>\r\n\r\n<p></p>', 'references': '', 'rating': 0.0, 'rating_count': None, 'published_date': dateutil.parser.parse("2023-07-03T02:53:18.366157+00:00"), 'updated_date': dateutil.parser.parse("2023-07-03T02:53:18.372662+00:00")} ) 
    knowledge_knowledge_4.author =  importer.locate_object(UserAccount, "id", UserAccount, "id", 1, {'id': 1, 'password': 'pbkdf2_sha256$600000$Q9AwSzFqEXF1ueS21sGGfz$rZo+NVruXU5Zf5vp00wtuwLn0Z333sn5NtvS8VWKqds=', 'last_login': dateutil.parser.parse("2023-06-30T06:03:10.086511+00:00"), 'is_superuser': True, 'email': 'yurinakanishi33@gmail.com', 'name': 'yuri', 'is_active': True, 'is_staff': True} ) 
    knowledge_knowledge_4 = importer.save_or_locate(knowledge_knowledge_4)

    knowledge_knowledge_5 = Knowledge()
    knowledge_knowledge_5.name = '給食にパンが出るのはなぜ？'
    knowledge_knowledge_5.slug = 'why-is-bread-served-at-school-lunch-jp'
    knowledge_knowledge_5.language =  importer.locate_object(Language, "id", Language, "id", 2, {'id': 2, 'name': 'jp'} ) 
    knowledge_knowledge_5.genre_for_url =  importer.locate_object(GenreForURL, "id", GenreForURL, "id", 1, {'id': 1, 'name': 'knowledge'} ) 
    knowledge_knowledge_5.type = 'knowledge'
    knowledge_knowledge_5.notesite_url = 'https://note.com/argumented_world/n/n11678c036826'
    knowledge_knowledge_5.article =  importer.locate_object(Article, "id", Article, "id", 6104, {'id': 6104, 'excerpt': '給食にパンが出るのはなぜ？', 'kicker': '給食にパンが出るのはなぜ？', 'content': '<p>第２次世界大戦後のアメリカでは、国内に大量の穀物が余り、深刻な食料余りが起りました。</p>\r\n\r\n<p>戦争中は兵士の食料として穀物が大量に作られ、海外の前線に送られていましたが、戦争が終わると作りすぎた穀物の行き場がなくなったのでした。</p>\r\n\r\n<p>アメリカ政府は1954年に「余剰農産物処理法」を制定しました。目的は、アメリカ国内で処理しきれなくなった大量の農産物を処理するため、そしてアメリカの農産物の輸入市場を拡大するためでした。</p>\r\n\r\n<p>これにより、穀物は戦後のヨーロッパやアジアの飢餓解消という名目で海外に売り払われていきました。穀物の代金は長期の低金利ローンで時間をかけて返して良いという好条件でした。</p>\r\n\r\n<p>海外に安く穀物を売り払った理由は、ソ連との冷戦下の同盟国の強化、途上国等に対する食糧援助をすることによって政治に干渉すること、などもありました。どちらの条件にも日本は含まれます。</p>\r\n\r\n<p>キッチンカーと学校給食</p>\r\n\r\n<p>戦後の復興途中で食糧不足だった日本も、アメリカから低金利のローンで小麦を輸入しました。</p>\r\n\r\n<p>もちろん、アメリカが日本の小麦の消費量を増やすため計画した事業を行なうことが前提でした。</p>\r\n\r\n<p>栄養指導車は、キッチンカーと呼ばれ「粉食による栄養改善運動」という名目で全国を回り、小麦を使った料理を主婦に普及させました。車の中にはキッチンの設備が整っており、指導員が乗りこんで料理の実演指導を行ないました。</p>\r\n\r\n<p>今では信じられませんが、当時は慶応大学の教授小麦が「米を食べると馬鹿になる」説を唱え、多くの人に影響を与えました。小麦を食べるアメリカや欧米に戦争で負けたことも、米食に反対する理由の一つでした。</p>\r\n\r\n<p>学校給食では、パン食が主流になりました。日本の子供達に小麦に慣れ親しでもらい、生涯を通して小麦を消費してもらうことが目的でした。</p>\r\n\r\n<p>他にも粉食の奨励運動は、新聞広告、テレビ、ラジオ、産業見本市への出展、「アメリカ小麦杯」というゴルフ大会など、多く行なわれました。</p>\r\n\r\n<p>winwinの関係？</p>\r\n\r\n<p>アメリカの戦略は成功し、今では日本は小麦の輸入大国となっています。そして、日本食を崩壊させた原因として当時の小麦の輸入、粉食の症例運動は非難されています。</p>\r\n\r\n<p>しかし、戦後の復興の途中の日本は、食糧不足から脱しきれずに、多くの人が栄養不足でした。小麦の輸入は当時の日本にはかなりのメリットがあったことも事実です。</p>\r\n\r\n<p>『図説 世界史を変えた50の植物 』\u3000ビル ローズ (著)、柴田 譲治 (翻訳)</p>\r\n\r\n<p>『キッチンカー栄養指導車──アメリカ農産物と戦後日本の食生活変遷』\u3000ネイスン・ホプソン</p>\r\n\r\n<p>『対日食糧援助の開始と継続』\u3000柴田、茂紀</p>\r\n\r\n<p>タイトル未設定</p>\r\n\r\n<p>www.junkan.org</p>\r\n\r\n<p>日本の主食がコメから小麦に変わった背景【連載・コメより小麦の時代へ 第1回】 | 農業とITの未来メディア「SMART AGRI（スマートアグリ）」</p>\r\n\r\n<p>1世帯当たりのパンへの支出額がの増額に伴い、国産小麦への需要も高まっている。日本人の小麦の関係を見る連載第1回目では、戦後</p>\r\n\r\n<p>smartagri-jp.com</p>\r\n\r\n<p>タイトル未設定</p>\r\n\r\n<p>www.maff.go.jp</p>\r\n\r\n<p>日本人の食生活を変えるアメリカの壮大な実験。 2007年3月1日記事</p>\r\n\r\n<p>戦後、学校給食がパンとミルクの献立になったのは、アメリカの余剰小麦と大きな関わりがありました。日本人の食生活が変わったのは</p>\r\n\r\n<p>www.ecome.jp</p>\r\n\r\n<p>1-17. 戦争で拡大したアメリカ農業と大豆 - 落照亭</p>\r\n\r\n<p>www7b.biglobe.ne.jp</p>\r\n\r\n<p>使用させて頂いた画像</p>\r\n\r\n<p>写真AC</p>', 'references': '', 'rating': 0.0, 'rating_count': None, 'published_date': dateutil.parser.parse("2023-07-03T02:53:18.366157+00:00"), 'updated_date': dateutil.parser.parse("2023-07-03T02:53:18.372662+00:00")} ) 
    knowledge_knowledge_5.author =  importer.locate_object(UserAccount, "id", UserAccount, "id", 1, {'id': 1, 'password': 'pbkdf2_sha256$600000$Q9AwSzFqEXF1ueS21sGGfz$rZo+NVruXU5Zf5vp00wtuwLn0Z333sn5NtvS8VWKqds=', 'last_login': dateutil.parser.parse("2023-06-30T06:03:10.086511+00:00"), 'is_superuser': True, 'email': 'yurinakanishi33@gmail.com', 'name': 'yuri', 'is_active': True, 'is_staff': True} ) 
    knowledge_knowledge_5 = importer.save_or_locate(knowledge_knowledge_5)

    knowledge_knowledge_6 = Knowledge()
    knowledge_knowledge_6.name = 'Why is bread served at school lunch'
    knowledge_knowledge_6.slug = 'why-is-bread-served-at-school-lunch'
    knowledge_knowledge_6.language =  importer.locate_object(Language, "id", Language, "id", 1, {'id': 1, 'name': 'en'} ) 
    knowledge_knowledge_6.genre_for_url =  importer.locate_object(GenreForURL, "id", GenreForURL, "id", 1, {'id': 1, 'name': 'knowledge'} ) 
    knowledge_knowledge_6.type = 'knowledge'
    knowledge_knowledge_6.notesite_url = 'https://note.com/argumented_world/n/n11678c036826'
    knowledge_knowledge_6.article =  importer.locate_object(Article, "id", Article, "id", 6105, {'id': 6105, 'excerpt': 'Why is bread served at school lunch', 'kicker': 'Why is bread served at school lunch', 'content': '<p>Excess Wheat</p>\r\n\r\n<p>After World War II, the U.S. had a huge surplus of grain, resulting in a serious food shortage.</p>\r\n\r\n<p>During the war, large amounts of grain were produced to feed soldiers and sent to the front lines overseas, but when the war ended, there was no place for the overproduced grain.</p>\r\n\r\n<p>In 1954, the U.S. government enacted the "Surplus Produce Disposal Act. The purpose was to process the large amount of agricultural products that could no longer be processed in the U.S. and to expand the import market for U.S. agricultural products.</p>\r\n\r\n<p>As a result, grain was sold off to foreign countries in the name of alleviating hunger in postwar Europe and Asia. The price for the grain was a long-term, low-interest loan that could be paid back over time on favorable terms.</p>\r\n\r\n<p>Reasons for selling off the grain cheaply overseas included strengthening allies in the Cold War with the Soviet Union and interfering in politics by providing food aid to developing countries and others. Japan is included in both conditions.</p>\r\n\r\n<p>Kitchen Cars and School Lunches</p>\r\n\r\n<p>Japan, which was in the middle of postwar reconstruction and had food shortages, also imported wheat from the U.S. on low-interest loans.</p>\r\n\r\n<p>Of course, this was contingent on the U.S. undertaking a program designed to increase Japan\'s wheat consumption.</p>\r\n\r\n<p>Nutritional guidance vehicles, called "kitchen cars," toured the country to promote wheat-based cooking among housewives under the guise of a "nutritional improvement campaign through powdered food. The cars were equipped with kitchen facilities, and instructors would board and give cooking demonstrations.</p>\r\n\r\n<p>It is hard to believe now, but at that time, Professor Wheat of Keio University advocated the theory that "eating rice makes you stupid," which influenced many people. The fact that we lost the war to wheat-eating America and the West was another reason to oppose eating rice.</p>\r\n\r\n<p>Bread became the mainstay of school lunches. The goal was to familiarize Japanese children with wheat and encourage them to consume it throughout their lives.</p>\r\n\r\n<p>Many other efforts were made to promote wheat products, including newspaper advertisements, television, radio, participation in industry trade fairs, and a golf tournament called the "American Wheat Cup.</p>\r\n\r\n<p>A win-win situation?</p>\r\n\r\n<p>The U.S. strategy succeeded, and Japan is now a major importer of wheat. The wheat importation and flour diet movement of the time is blamed for the collapse of the Japanese diet.</p>\r\n\r\n<p>However, Japan was in the middle of postwar reconstruction, and many people were undernourished, unable to escape food shortages. It is also true that wheat imports were quite beneficial to Japan at the time.</p>\r\n\r\n<p>References, other articles</p>\r\n\r\n<p>Thank you for reading to the end.</p>\r\n\r\n<p>I have written many other articles.</p>\r\n\r\n<p>Reference materials</p>\r\n\r\n<p>The 50 Plants That Changed World History" by Bill Rose (Author), translated by Joji Shibata (Translator)</p>\r\n\r\n<p>The Kitchen Car Nutritional Guidance Car: American Agricultural Products and Japan\'s Postwar Dietary Transition, Nathan Hopson</p>\r\n\r\n<p>The Beginning and Continuation of Food Aid to Japan" SHIBATA, Shigeki</p>\r\n\r\n<p>Title not yet set</p>\r\n\r\n<p>www.junkan.org</p>\r\n\r\n<p>Background of the Change from Rice to Wheat as Japan\'s Staple Food [Serialization: From Rice to Wheat, Part 1] | SMART AGRI, the Future Media of Agriculture and IT</p>\r\n\r\n<p>Demand for domestically produced wheat has been increasing along with the rise in per-household spending on bread. In the first of a series of articles looking at the relationship between the Japanese people and wheat, we discuss the postwar</p>\r\n\r\n<p>smartagri-jp.com</p>\r\n\r\n<p>Title not yet set</p>\r\n\r\n<p>www.maff.go.jp</p>\r\n\r\n<p>America\'s grand experiment in changing the Japanese diet. March 1, 2007 article</p>\r\n\r\n<p>After the war, school lunches became a bread-and-milk offering, which had a lot to do with surplus wheat in the United States. The change in the Japanese diet was ...</p>\r\n\r\n<p>www.ecome.jp</p>\r\n\r\n<p>1-17. American Agriculture and Soybeans Expanded by War - Rakushotei</p>\r\n\r\n<p>www7b.biglobe.ne.jp</p>\r\n\r\n<p>Images used</p>\r\n\r\n<p>Photo AC</p>\r\n\r\n<p></p>', 'references': '', 'rating': 0.0, 'rating_count': None, 'published_date': dateutil.parser.parse("2023-07-03T02:53:18.366157+00:00"), 'updated_date': dateutil.parser.parse("2023-07-03T02:53:18.372662+00:00")} ) 
    knowledge_knowledge_6.author =  importer.locate_object(UserAccount, "id", UserAccount, "id", 1, {'id': 1, 'password': 'pbkdf2_sha256$600000$Q9AwSzFqEXF1ueS21sGGfz$rZo+NVruXU5Zf5vp00wtuwLn0Z333sn5NtvS8VWKqds=', 'last_login': dateutil.parser.parse("2023-06-30T06:03:10.086511+00:00"), 'is_superuser': True, 'email': 'yurinakanishi33@gmail.com', 'name': 'yuri', 'is_active': True, 'is_staff': True} ) 
    knowledge_knowledge_6 = importer.save_or_locate(knowledge_knowledge_6)

    knowledge_knowledge_7 = Knowledge()
    knowledge_knowledge_7.name = '橋にはなぜ三角形があるのか'
    knowledge_knowledge_7.slug = 'why-do-bridges-have-triangles-jp'
    knowledge_knowledge_7.language =  importer.locate_object(Language, "id", Language, "id", 2, {'id': 2, 'name': 'jp'} ) 
    knowledge_knowledge_7.genre_for_url =  importer.locate_object(GenreForURL, "id", GenreForURL, "id", 1, {'id': 1, 'name': 'knowledge'} ) 
    knowledge_knowledge_7.type = 'knowledge'
    knowledge_knowledge_7.notesite_url = 'https://note.com/argumented_world/n/n37a1e1446720'
    knowledge_knowledge_7.article =  importer.locate_object(Article, "id", Article, "id", 6106, {'id': 6106, 'excerpt': '橋にはなぜ三角形があるのか', 'kicker': '橋にはなぜ三角形があるのか', 'content': '<p>それは、三角形はどの方向からの力にも強く、変形しにくいからです。</p>\r\n\r\n<p>例えば四角形だと、</p>\r\n\r\n<p>画像2</p>\r\n\r\n<p>このように変形しやすいです。</p>\r\n\r\n<p>しかし、この四角形に斜めの棒を加えてあげると、変形しにくくなります。</p>\r\n\r\n<p>画像3</p>\r\n\r\n<p>そして、この図形は三角形を２つ合わせた形になっていますね。</p>\r\n\r\n<p>三角形は、どの方向からの力にも強いんです。</p>\r\n\r\n<p>画像4</p>\r\n\r\n<p>なので、川幅の広い川や海峡とかに渡してある大きな橋には、三角形の形が見られます。</p>\r\n\r\n<p>皆さんも探してみてください。</p>\r\n\r\n<p>画像4</p>\r\n\r\n<p>Pexels Sami Anas</p>', 'references': '', 'rating': 0.0, 'rating_count': None, 'published_date': dateutil.parser.parse("2023-07-03T02:53:18.366157+00:00"), 'updated_date': dateutil.parser.parse("2023-07-03T02:53:18.372662+00:00")} ) 
    knowledge_knowledge_7.author =  importer.locate_object(UserAccount, "id", UserAccount, "id", 1, {'id': 1, 'password': 'pbkdf2_sha256$600000$Q9AwSzFqEXF1ueS21sGGfz$rZo+NVruXU5Zf5vp00wtuwLn0Z333sn5NtvS8VWKqds=', 'last_login': dateutil.parser.parse("2023-06-30T06:03:10.086511+00:00"), 'is_superuser': True, 'email': 'yurinakanishi33@gmail.com', 'name': 'yuri', 'is_active': True, 'is_staff': True} ) 
    knowledge_knowledge_7 = importer.save_or_locate(knowledge_knowledge_7)

    knowledge_knowledge_8 = Knowledge()
    knowledge_knowledge_8.name = 'Why do bridges have triangles?'
    knowledge_knowledge_8.slug = 'why-do-bridges-have-triangles'
    knowledge_knowledge_8.language =  importer.locate_object(Language, "id", Language, "id", 1, {'id': 1, 'name': 'en'} ) 
    knowledge_knowledge_8.genre_for_url =  importer.locate_object(GenreForURL, "id", GenreForURL, "id", 1, {'id': 1, 'name': 'knowledge'} ) 
    knowledge_knowledge_8.type = 'knowledge'
    knowledge_knowledge_8.notesite_url = 'https://note.com/argumented_world/n/n37a1e1446720'
    knowledge_knowledge_8.article =  importer.locate_object(Article, "id", Article, "id", 6107, {'id': 6107, 'excerpt': 'Why do bridges have triangles?', 'kicker': 'Why do bridges have triangles?', 'content': '<p>This is because triangles are resistant to forces from any direction and are not easily deformed.</p>\r\n\r\n<p>A square, for example, would</p>\r\n\r\n<p>Image 2</p>\r\n\r\n<p>It is easy to deform like this.</p>\r\n\r\n<p>However, if we add a diagonal bar to this rectangle, it becomes less deformable.</p>\r\n\r\n<p>Image 3</p>\r\n\r\n<p>And this figure is a combination of two triangles, right?</p>\r\n\r\n<p>Triangles are strong against forces from any direction.</p>\r\n\r\n<p>Image 4</p>\r\n\r\n<p>Therefore, triangular shapes can be found on large bridges across wide rivers and straits.</p>\r\n\r\n<p>Please look for them.</p>\r\n\r\n<p></p>', 'references': '', 'rating': 0.0, 'rating_count': None, 'published_date': dateutil.parser.parse("2023-07-03T02:53:18.366157+00:00"), 'updated_date': dateutil.parser.parse("2023-07-03T02:53:18.372662+00:00")} ) 
    knowledge_knowledge_8.author =  importer.locate_object(UserAccount, "id", UserAccount, "id", 1, {'id': 1, 'password': 'pbkdf2_sha256$600000$Q9AwSzFqEXF1ueS21sGGfz$rZo+NVruXU5Zf5vp00wtuwLn0Z333sn5NtvS8VWKqds=', 'last_login': dateutil.parser.parse("2023-06-30T06:03:10.086511+00:00"), 'is_superuser': True, 'email': 'yurinakanishi33@gmail.com', 'name': 'yuri', 'is_active': True, 'is_staff': True} ) 
    knowledge_knowledge_8 = importer.save_or_locate(knowledge_knowledge_8)

    knowledge_knowledge_9 = Knowledge()
    knowledge_knowledge_9.name = 'なぜ産業革命はイギリスでおこったのか？'
    knowledge_knowledge_9.slug = 'why-did-the-industrial-revolution-take-place-in-england-jp'
    knowledge_knowledge_9.language =  importer.locate_object(Language, "id", Language, "id", 2, {'id': 2, 'name': 'jp'} ) 
    knowledge_knowledge_9.genre_for_url =  importer.locate_object(GenreForURL, "id", GenreForURL, "id", 1, {'id': 1, 'name': 'knowledge'} ) 
    knowledge_knowledge_9.type = 'knowledge'
    knowledge_knowledge_9.notesite_url = 'https://note.com/argumented_world/n/n25974f3c22f2'
    knowledge_knowledge_9.article =  importer.locate_object(Article, "id", Article, "id", 6108, {'id': 6108, 'excerpt': 'なぜ産業革命はイギリスでおこったのか？', 'kicker': 'なぜ産業革命はイギリスでおこったのか？', 'content': "<p>なぜ産業革命はイギリスで最初に起ったのでしょうか？</p>\r\n\r\n<p>決定的な一つの理由はありませんし、歴史家の中でも明らかになっていません。今回は、主な理由といわれているものを紹介します。</p>\r\n\r\n<p>1，石炭がたくさんあった</p>\r\n\r\n<p>イギリスのブリテン島には、他の国よりも多くの石炭がありました。至る所に石炭が見つかり、どんどん採掘されていました。</p>\r\n\r\n<p>ご存じの通り、石炭は、産業革命と切り離すことはできません。石炭が、蒸気機関のエネルギーを生み出し、様々な機械を動かします。</p>\r\n\r\n<p>2，木が少なかった</p>\r\n\r\n<p>産業革命以前では、木を燃やしてエネルギーを得ていました。しかし、山が少ないイギリスでは森林が枯渇して深刻なエネルギー不足におちいりました。これによって燃料が石炭に移る時期が早かったといわれています。</p>\r\n\r\n<p>当時のイギリスでは、同じエネルギーを生み出すのに、木材は石炭の２倍の値段がかかったそうです。</p>\r\n\r\n<p>3，植民地からの利益で儲かった</p>\r\n\r\n<p>18世紀、イギリスはフランスなどとの植民地戦争に次々と勝利し、植民地を広げていきました。また、本国とアフリカ、アメリカ大陸の三角貿易によっても、かなりの利益をあげました。</p>\r\n\r\n<p>こういった植民地との貿易による多大な利益が、産業革命を起こした資金の一つとなりました。</p>\r\n\r\n<p>4，賃金が高かった</p>\r\n\r\n<p>イギリスでは植民地との交易を通じて都市と製造業が成長しました。都市の労働者が足りなくなったことにより、賃金と生活水準は世界で最も高かったそうです。</p>\r\n\r\n<p>また、識字、計算、経済的な知識を持った人が増えたことも、賃金が高くなった理由の一つです。</p>\r\n\r\n<p>賃金が高いと人を雇いづらくなります。人が行なっていた仕事を機械にやらせれば、人件費が削減できるので、積極的に機械化を導入する企業が多かったといえます。</p>\r\n\r\n<p>4，知的財産権が確立していた</p>\r\n\r\n<p>イギリスでは、他の国よりも早く特許制度が制定されました。これにより特許を獲得して一家宇千金を狙う発明家が、最新技術を発展させていきました。</p>\r\n\r\n<p>蒸気機関の発明に関わったジェームズ・ワットは、特許で多額の利益を得たと言われています。</p>\r\n\r\n<p>画像1</p>\r\n\r\n<p>ジェームズ・ワット（1736-1819）</p>\r\n\r\n<p>◇</p>\r\n\r\n<p>このように、産業革命がイギリスでおこった理由としては様々なものが挙げられます。</p>\r\n\r\n<p>これらの理由をまとめてみると、イギリスでは、当時の最新技術が発展しやすく、技術開発によって利益が生まれる形になっていた。ということだと思います。</p>\r\n\r\n<p>「図説世界史を変えた50の鉱物』 エリック・シャリーン 66</p>\r\n\r\n<p>『朝日百科\u3000世界の歴史10\u3000ー19世紀ー』1991年\u3000朝日新聞社 E656</p>\r\n\r\n<p>3．産業革命はエネルギー革命であった【第4章「農」と国土の変貌】</p>\r\n\r\n<p>https://www.maff.go.jp/kanto/nouson/sekkei/kagaku/henbo/03.html'</p>\r\n\r\n<p>科学の歩みところどころ 第29回 物質文明の歩み―含炭素物質を中心にしてhttps://www.shinko-keirin.co.jp/keirinkan/kori/science/ayumi/ayumi29.html'</p>\r\n\r\n<p>続・なぜ産業革命はイギリスから始まったのか？簿記の歴史物語 第35回https://media.moneyforward.com/articles/2497?page=2'</p>\r\n\r\n<p>特許から見た産業発展史に関する調査研究https://www.iip.or.jp/summary/pdf/detail99j/11_05.pdf’</p>\r\n\r\n<p>重悟のブログ\u3000なぜイギリスで最初に産業革命がおこったのか？本当の理由を簡単に解説する https://jugo-blog.com/industrial-revolution2’</p>\r\n\r\n<p>Why was the Industrial Revolution British?</p>\r\n\r\n<p>https://voxeu.org/article/why-was-industrial-revolution-british#:~:text=Success%20in%20international%20trade%20created,incentives%20operated%20in%20many%20industries.'</p>\r\n\r\n<p>Watt James von Breda.jpg</p>\r\n\r\n<p>PexelsのFrans Van Heerden</p>", 'references': '', 'rating': 0.0, 'rating_count': None, 'published_date': dateutil.parser.parse("2023-07-03T02:53:18.366157+00:00"), 'updated_date': dateutil.parser.parse("2023-07-03T02:53:18.372662+00:00")} ) 
    knowledge_knowledge_9.author =  importer.locate_object(UserAccount, "id", UserAccount, "id", 1, {'id': 1, 'password': 'pbkdf2_sha256$600000$Q9AwSzFqEXF1ueS21sGGfz$rZo+NVruXU5Zf5vp00wtuwLn0Z333sn5NtvS8VWKqds=', 'last_login': dateutil.parser.parse("2023-06-30T06:03:10.086511+00:00"), 'is_superuser': True, 'email': 'yurinakanishi33@gmail.com', 'name': 'yuri', 'is_active': True, 'is_staff': True} ) 
    knowledge_knowledge_9 = importer.save_or_locate(knowledge_knowledge_9)

    knowledge_knowledge_10 = Knowledge()
    knowledge_knowledge_10.name = 'Why did the Industrial Revolution take place in England?'
    knowledge_knowledge_10.slug = 'why-did-the-industrial-revolution-take-place-in-england'
    knowledge_knowledge_10.language =  importer.locate_object(Language, "id", Language, "id", 1, {'id': 1, 'name': 'en'} ) 
    knowledge_knowledge_10.genre_for_url =  importer.locate_object(GenreForURL, "id", GenreForURL, "id", 1, {'id': 1, 'name': 'knowledge'} ) 
    knowledge_knowledge_10.type = 'knowledge'
    knowledge_knowledge_10.notesite_url = 'https://note.com/argumented_world/n/n25974f3c22f2'
    knowledge_knowledge_10.article =  importer.locate_object(Article, "id", Article, "id", 6109, {'id': 6109, 'excerpt': 'Why did the Industrial Revolution take place in England?', 'kicker': 'Why did the Industrial Revolution take place in England?', 'content': '<p>Why did the Industrial Revolution first occur in England?</p>\r\n\r\n<p>There is no single definitive reason, nor is it clear even to historians. In this article, we will introduce what are said to be the main reasons.</p>\r\n\r\n<p>1，There was plenty of coal</p>\r\n\r\n<p>The British island of Britain had more coal than any other country. Coal was found everywhere and was being mined more and more.</p>\r\n\r\n<p>As you know, coal is inseparable from the Industrial Revolution. Coal generates energy for steam engines and drives various machines.</p>\r\n\r\n<p>2、Trees were scarce.</p>\r\n\r\n<p>Before the Industrial Revolution, energy was obtained by burning trees. However, in England, where there were few mountains, forests were depleted and there was a serious energy shortage. This is said to have hastened the shift to coal as a fuel.</p>\r\n\r\n<p>At that time, wood cost twice as much as coal to produce the same amount of energy in England.</p>\r\n\r\n<p>3, Profits from the colonies were lucrative.</p>\r\n\r\n<p>In the 18th century, Britain won a series of colonial wars against France and other countries and expanded its colonies. It also made considerable profits from the triangular trade between its home country, Africa, and the Americas.</p>\r\n\r\n<p>These large profits from trade with the colonies were one of the factors that helped to finance the Industrial Revolution.</p>\r\n\r\n<p>4、High wages</p>\r\n\r\n<p>Cities and manufacturing grew in England through trade with the colonies. Wages and living standards were among the highest in the world due to the shortage of workers in the cities.</p>\r\n\r\n<p>Wages were also higher because more people had literacy, numeracy, and economic knowledge.</p>\r\n\r\n<p>Higher wages make it harder to hire people. Many companies actively introduced mechanization because they could reduce labor costs by having machines do the work that used to be done by people.</p>\r\n\r\n<p>4、Intellectual property rights were well established.</p>\r\n\r\n<p>In the UK, the patent system was established earlier than in other countries. This led to the development of the latest technologies by inventors who were aiming for a family fortune by obtaining patents.</p>\r\n\r\n<p>James Watt, who was involved in the invention of the steam engine, is said to have made a large profit from his patents.</p>\r\n\r\n<p>Image 1</p>\r\n\r\n<p>James Watt (1736-1819)</p>\r\n\r\n<p>◇ ◇Patent</p>\r\n\r\n<p>As you can see, there are many reasons why the Industrial Revolution took place in England.</p>\r\n\r\n<p>In summary, the latest technology of the time could be easily developed in England, and profits could be generated through technological development. This was the reason for the Industrial Revolution in the United Kingdom.</p>\r\n\r\n<p></p>', 'references': '', 'rating': 0.0, 'rating_count': None, 'published_date': dateutil.parser.parse("2023-07-03T02:53:18.366157+00:00"), 'updated_date': dateutil.parser.parse("2023-07-03T02:53:18.372662+00:00")} ) 
    knowledge_knowledge_10.author =  importer.locate_object(UserAccount, "id", UserAccount, "id", 1, {'id': 1, 'password': 'pbkdf2_sha256$600000$Q9AwSzFqEXF1ueS21sGGfz$rZo+NVruXU5Zf5vp00wtuwLn0Z333sn5NtvS8VWKqds=', 'last_login': dateutil.parser.parse("2023-06-30T06:03:10.086511+00:00"), 'is_superuser': True, 'email': 'yurinakanishi33@gmail.com', 'name': 'yuri', 'is_active': True, 'is_staff': True} ) 
    knowledge_knowledge_10 = importer.save_or_locate(knowledge_knowledge_10)

    knowledge_knowledge_11 = Knowledge()
    knowledge_knowledge_11.name = '家事使用人にはなぜ女性が多いのか。'
    knowledge_knowledge_11.slug = 'why-are-there-so-many-women-as-domestic-servants-jp'
    knowledge_knowledge_11.language =  importer.locate_object(Language, "id", Language, "id", 2, {'id': 2, 'name': 'jp'} ) 
    knowledge_knowledge_11.genre_for_url =  importer.locate_object(GenreForURL, "id", GenreForURL, "id", 1, {'id': 1, 'name': 'knowledge'} ) 
    knowledge_knowledge_11.type = 'knowledge'
    knowledge_knowledge_11.notesite_url = 'https://note.com/argumented_world/n/na91a96e7e073'
    knowledge_knowledge_11.article =  importer.locate_object(Article, "id", Article, "id", 6110, {'id': 6110, 'excerpt': '家事使用人にはなぜ女性が多いのか。', 'kicker': '家事使用人にはなぜ女性が多いのか。', 'content': '<p>家事使用人といえば、制服姿の女性（メイド）を思い浮かべる方が多いと思います。</p>\r\n\r\n<p>しかし、イギリスにおいて元々は、家事使用人は女性であったわけではありませんでした。 女性が圧倒的に多くなったのは、19世紀の現象なのです。</p>\r\n\r\n<p>なぜ家事使用人は女性化したのでしょうか？</p>\r\n\r\n<p>・・・</p>\r\n\r\n<p>とくに上流家庭では、工業化以前の時代は台所を中心とした家事においても男性の家事使用人の方が多かったそうです。男性の家事使用人はボーイと呼ばれます。</p>\r\n\r\n<p>男子の使用人が減少した理由はいくつかありますが、大きな理由は工業化の発展にしたがって都市部での産業で男子労働者が必要になったからです。男子使用人の雇用に対してのみ税金がかけられたり、男子使用人の賃金が上昇したため、19世紀より、安く雇えてしかも従順な女子労働者が家事奉公をほぼ独占するようになりました。</p>\r\n\r\n<p>「階段の下」の労働生活は決して楽なもので なく、とくに1人で何でもやる雑働き女中な どは、1日17時間も牛馬のように働かされた。 しかし、家事奉公は労働者階級の女性にとって「リスペクタブル」 な(上品な) 働き口とみなされた。主家の家庭のなかで監督されて働くからである。</p>\r\n\r\n<p>それに、農村出身の少女には、将来の結婚に向けての良い訓練になると考えられたようである。</p>\r\n\r\n<p>ー朝日百科世界の歴史\u300019世紀よりー</p>\r\n\r\n<p>・・・</p>\r\n\r\n<p>ところが、第一次世界大戦の影響で、女性のメイドは減少しました。男子が戦争に行ってしまったため工場での人手が足りなくなり、女性が工場の仕事についたからです。工業化の時の男子と同じことが女子にも起こりました。</p>\r\n\r\n<p>この流れから女子労働者にとっても、産業労働者が「一人前の」 労働者であり、家事奉公は劣ったものと考えられるようになりました。価値観の転換が起こったのです。</p>\r\n\r\n<p>そして終戦後も、多くの女性が家事奉公を離れて他の職業に移っていき、その結果、 家事使用人の数が急速に減少しました。家事使用人の質金を上げても、家事使用人の減少に歯止めはかかりませんでした。</p>\r\n\r\n<p>家事使用人という職業はもはや、都市の産業において女性に新しく開かれた職種（事務員､店員などのホワイトカラー的な職種）には勝てませんでした。</p>\r\n\r\n<p>ちなみに、家事使用人の数が減ったしまったため、それまで遅れていた 「家事の機械化」が進むことになります。</p>\r\n\r\n<p>Pexels cottonbro</p>\r\n\r\n<p>朝日百科世界の歴史\u300019世紀\u3000B648\u3000(河村貞枝)</p>', 'references': '', 'rating': 0.0, 'rating_count': None, 'published_date': dateutil.parser.parse("2023-07-03T02:53:18.366157+00:00"), 'updated_date': dateutil.parser.parse("2023-07-03T02:53:18.372662+00:00")} ) 
    knowledge_knowledge_11.author =  importer.locate_object(UserAccount, "id", UserAccount, "id", 1, {'id': 1, 'password': 'pbkdf2_sha256$600000$Q9AwSzFqEXF1ueS21sGGfz$rZo+NVruXU5Zf5vp00wtuwLn0Z333sn5NtvS8VWKqds=', 'last_login': dateutil.parser.parse("2023-06-30T06:03:10.086511+00:00"), 'is_superuser': True, 'email': 'yurinakanishi33@gmail.com', 'name': 'yuri', 'is_active': True, 'is_staff': True} ) 
    knowledge_knowledge_11 = importer.save_or_locate(knowledge_knowledge_11)

    knowledge_knowledge_12 = Knowledge()
    knowledge_knowledge_12.name = 'Why are there so many women as domestic servants?'
    knowledge_knowledge_12.slug = 'why-are-there-so-many-women-as-domestic-servants'
    knowledge_knowledge_12.language =  importer.locate_object(Language, "id", Language, "id", 1, {'id': 1, 'name': 'en'} ) 
    knowledge_knowledge_12.genre_for_url =  importer.locate_object(GenreForURL, "id", GenreForURL, "id", 1, {'id': 1, 'name': 'knowledge'} ) 
    knowledge_knowledge_12.type = 'knowledge'
    knowledge_knowledge_12.notesite_url = 'https://note.com/argumented_world/n/na91a96e7e073'
    knowledge_knowledge_12.article =  importer.locate_object(Article, "id", Article, "id", 6111, {'id': 6111, 'excerpt': 'Why are there so many women as domestic servants?', 'kicker': 'Why are there so many women as domestic servants?', 'content': '<p>When most people think of domestic servants, they think of women (maids) in uniform.</p>\r\n\r\n<p>However, originally in England, domestic servants were not always women. It was only in the 19th century that women became overwhelmingly dominant.</p>\r\n\r\n<p>Why were domestic servants feminized?</p>\r\n\r\n<p>...</p>\r\n\r\n<p>In the pre-industrial era, male domestic servants were more common in the kitchen and other household chores, especially in upper-class families. Male domestic servants are called boys.</p>\r\n\r\n<p>There are several reasons for the decline in the number of male servants, but the main reason is that with the development of industrialization, male workers were needed in urban industries. Taxes were imposed only on the employment of male servants and the wages of male servants rose, so that from the 19th century, female workers, who could be hired cheaply and were also obedient, came to have a near monopoly on domestic servitude.</p>\r\n\r\n<p>The working life "under the stairs" was not an easy one, especially for the housemaids who did everything by themselves and were forced to work like oxen and horses for 17 hours a day. However, domestic service was seen as a "respectable" (elegant) way of working for working-class women. They worked under the supervision of the head of the family.</p>\r\n\r\n<p>It was also considered good training for future marriages for girls from rural areas.</p>\r\n\r\n<p>From Asahi Encyclopedia of World History, 19th century</p>\r\n\r\n<p>The First World War</p>\r\n\r\n<p>However, due to World War I, the number of female maids decreased. This was because men went off to war and there was a shortage of manpower in factories, so women took up factory jobs. The same thing happened to girls as it did to boys during industrialization.</p>\r\n\r\n<p>This trend also led women workers to believe that industrial workers were "full-fledged" workers and that domestic servitude was inferior. A shift in values occurred.</p>\r\n\r\n<p>Even after the war ended, many women left the domestic service for other occupations, resulting in a rapid decline in the number of domestic servants. The decline in the number of domestic servants was not halted by raising pledges for domestic servants.</p>\r\n\r\n<p>The domestic servant profession could no longer compete with the newly opened positions for women in urban industries (clerks, clerks, and other white-collar jobs).</p>\r\n\r\n<p>Incidentally, the decrease in the number of domestic servants led to the "mechanization" of housework, which had been delayed until then.</p>\r\n\r\n<p></p>', 'references': '', 'rating': 0.0, 'rating_count': None, 'published_date': dateutil.parser.parse("2023-07-03T02:53:18.366157+00:00"), 'updated_date': dateutil.parser.parse("2023-07-03T02:53:18.372662+00:00")} ) 
    knowledge_knowledge_12.author =  importer.locate_object(UserAccount, "id", UserAccount, "id", 1, {'id': 1, 'password': 'pbkdf2_sha256$600000$Q9AwSzFqEXF1ueS21sGGfz$rZo+NVruXU5Zf5vp00wtuwLn0Z333sn5NtvS8VWKqds=', 'last_login': dateutil.parser.parse("2023-06-30T06:03:10.086511+00:00"), 'is_superuser': True, 'email': 'yurinakanishi33@gmail.com', 'name': 'yuri', 'is_active': True, 'is_staff': True} ) 
    knowledge_knowledge_12 = importer.save_or_locate(knowledge_knowledge_12)

    knowledge_knowledge_13 = Knowledge()
    knowledge_knowledge_13.name = 'チリワインは、なぜ有名なのか？'
    knowledge_knowledge_13.slug = 'why-are-chilean-wines-so-famous-jp'
    knowledge_knowledge_13.language =  importer.locate_object(Language, "id", Language, "id", 2, {'id': 2, 'name': 'jp'} ) 
    knowledge_knowledge_13.genre_for_url =  importer.locate_object(GenreForURL, "id", GenreForURL, "id", 1, {'id': 1, 'name': 'knowledge'} ) 
    knowledge_knowledge_13.type = 'knowledge'
    knowledge_knowledge_13.notesite_url = 'https://note.com/argumented_world/n/n32bbba1c9720'
    knowledge_knowledge_13.article =  importer.locate_object(Article, "id", Article, "id", 6112, {'id': 6112, 'excerpt': 'チリワインは、なぜ有名なのか？', 'kicker': 'チリワインは、なぜ有名なのか？', 'content': '<p>Iアメリカ原産のぶどうの害虫フィロキセラは、１９世紀、船によってヨーロッパに運ばれてきてヨーロッパのワイン産業に壊滅的な被害を与えました。</p>\r\n\r\n<p>詳しくは、こちらの記事をご覧ください。</p>\r\n\r\n<p>ヨーロッパのぶどう農家の人々はフィロキセラへの対抗策として、薬剤を使ったり様々な方法を試しました。</p>\r\n\r\n<p>ほとんどの方法で効果は出ませんでしたが、唯一とても効果があった方法があります。それは接ぎ木です。</p>\r\n\r\n<p>接ぎ木とは、２つの違う種類の木をそれぞれ切断して、その切断面で木の上半分と下半分を無理矢理くっつけるというものです。</p>\r\n\r\n<p>接ぎ木をすると、上につないだ木が枯れてしまうこともありますが、多くは枯れずにちゃんと成長します。</p>\r\n\r\n<p>フィロキセラ対策の接ぎ木の方法は、フィロキセラに耐性のある北アメリカ原産のぶどうの木の根にヨーロッパのぶどうの木を接ぎ木する、というものでした。</p>\r\n\r\n<p>フィロキセラはぶどうの木の根に寄生するため、根の部分をフィロキセラ耐性のある北アメリカ原産のブドウにすることで、被害を抑える作戦です。</p>\r\n\r\n<p>この方法が功を奏し、ぶどう畑はなんとか復興しました。</p>\r\n\r\n<p>しかし、接ぎ木をしたために、ヨーロッパにはフィロキセラ以前にあったブドウの品種は、ほとんど残っていません。</p>\r\n\r\n<p>そして驚くことに、現在もヨーロッパのワインぶどうの木のほとんどは、フィロキセラ対策のために接ぎ木をしてつくられています。</p>\r\n\r\n<p>「接ぎ木をするとワインの味が落ちる！」といった意見はもちろんありました。けどしょうがなかったのです。フィロキセラがいなかったら、ヨーロッパのワインの味は今とは少し違っていたかもしれません。</p>\r\n\r\n<p>ということは、「フィロキセラ以前のヨーロッパ系のぶどうから作られたワインは、もう飲めないのでしょうか？</p>\r\n\r\n<p>飲めます。しかも、ほとんどのコンビニやスーパーで買えます。</p>\r\n\r\n<p>チリは、フィロキセラの被害がヨーロッパに及ぶ前にぶどうの苗木が持ち込まれ、ヨーロッパ系のぶどうの木でワインを作っていました。そして奇跡的にフィロキセラの被害を受けませんでした。</p>\r\n\r\n<p>西は太平洋、東はアンデス山脈に囲まれていて孤立した土地であるために、フィロキセラが飛んで来にくいからです（乾燥した気候なので他のぶどうの病気も発生しにくいという、めちゃ恵まれた土地です）。</p>\r\n\r\n<p>チリでは、ヨーロッパでは失われてしまったヨーロッパ原産のぶどうからワインを作ることができています。しかも接ぎ木をしなくて良いので、手間がかからず、コストも抑えられます。</p>\r\n\r\n<p>チリの他にも、アルゼンチンやオーストラリアのバロッサ・ヴァレーなどが、フィロキセラの被害を受けずにヨーロッパ原産のぶどうからワインをつくっています。</p>\r\n\r\n<p>私は、「安くておいしい」という理由でチリワインを飲んでいましたが、</p>\r\n\r\n<p>この事実を知ってから、チリワインがさらに好きになりました。</p>\r\n\r\n<p>皆さんも是非、チリワインを楽しんでみて下さい！</p>\r\n\r\n<p>As in basketball, in soccer, you might play more aggressively, or in baseball, you might try for more home runs at the end of the season, and so on.</p>\r\n\r\n<p>ワインの歴史---自然の恵みと人間の知恵の歩み---\u3000山本 博 (著)</p>\r\n\r\n<p>Jeff Siepman on unsplash</p>\r\n\r\n<p>写真AC</p>', 'references': '', 'rating': 0.0, 'rating_count': None, 'published_date': dateutil.parser.parse("2023-07-03T02:53:18.366157+00:00"), 'updated_date': dateutil.parser.parse("2023-07-03T02:53:18.372662+00:00")} ) 
    knowledge_knowledge_13.author =  importer.locate_object(UserAccount, "id", UserAccount, "id", 1, {'id': 1, 'password': 'pbkdf2_sha256$600000$Q9AwSzFqEXF1ueS21sGGfz$rZo+NVruXU5Zf5vp00wtuwLn0Z333sn5NtvS8VWKqds=', 'last_login': dateutil.parser.parse("2023-06-30T06:03:10.086511+00:00"), 'is_superuser': True, 'email': 'yurinakanishi33@gmail.com', 'name': 'yuri', 'is_active': True, 'is_staff': True} ) 
    knowledge_knowledge_13 = importer.save_or_locate(knowledge_knowledge_13)

    knowledge_knowledge_14 = Knowledge()
    knowledge_knowledge_14.name = 'why-are-chilean-wines-so-famous'
    knowledge_knowledge_14.slug = 'why-are-chilean-wines-so-famous'
    knowledge_knowledge_14.language =  importer.locate_object(Language, "id", Language, "id", 1, {'id': 1, 'name': 'en'} ) 
    knowledge_knowledge_14.genre_for_url =  importer.locate_object(GenreForURL, "id", GenreForURL, "id", 1, {'id': 1, 'name': 'knowledge'} ) 
    knowledge_knowledge_14.type = 'knowledge'
    knowledge_knowledge_14.notesite_url = 'https://note.com/argumented_world/n/n32bbba1c9720'
    knowledge_knowledge_14.article =  importer.locate_object(Article, "id", Article, "id", 6113, {'id': 6113, 'excerpt': 'why-are-chilean-wines-so-famous', 'kicker': 'why-are-chilean-wines-so-famous', 'content': '<p>IPhylloxera, a grape pest native to the United States, was brought to Europe by ship in the 19th century and devastated the European wine industry. For more information, please see this article.</p>\r\n\r\n<p>European grape growers tried various methods, including the use of chemicals, to combat phylloxera.</p>\r\n\r\n<p>Most methods were ineffective, but there was only one that worked very well. That is grafting.</p>\r\n\r\n<p>Grafting is the process of cutting two different types of trees and forcing the top and bottom halves of the tree to fit together at the cut surface.</p>\r\n\r\n<p>Image 2</p>\r\n\r\n<p>When grafting, the tree connected to the upper half of the tree may die, but most trees grow properly without dying.</p>\r\n\r\n<p>The method of grafting for phylloxera control was to graft European grapevines to the roots of grapevines of North American origin that are resistant to phylloxera.</p>\r\n\r\n<p>Since phylloxera is a parasite of the vine\'s roots, the strategy was to limit damage to the roots by using grapes of North American origin that were resistant to phylloxera.</p>\r\n\r\n<p>This method worked, and the vineyards managed to recover.</p>\r\n\r\n<p>However, because of grafting, few of the grape varieties that existed before phylloxera remain in Europe.</p>\r\n\r\n<p>And surprisingly, most of the wine grape vines in Europe today are still grafted to protect against phylloxera.</p>\r\n\r\n<p>Of course, there were those who said, "Grafting makes the wine taste bad!" Of course, there were opinions such as, "Grafting ruins the taste of the wine! But we had no choice. Without phylloxera, the taste of European wines might have been slightly different from what it is today.</p>\r\n\r\n<p>So, you may ask, "Can we no longer drink wine made from European grapes before phylloxera?</p>\r\n\r\n<p>You can drink them. And you can buy them at most convenience stores and supermarkets.</p>\r\n\r\n<p>Chilean Wine</p>\r\n\r\n<p>Image 1</p>\r\n\r\n<p>Chile brought in grape seedlings and made wine from European grapevines before phylloxera hit Europe. Miraculously, it was not affected by phylloxera.</p>\r\n\r\n<p>This is because it is an isolated land surrounded by the Pacific Ocean to the west and the Andes Mountains to the east, which makes it difficult for phylloxera to fly in (it is a very blessed land with a dry climate, which also makes it difficult for other grape diseases to occur).</p>\r\n\r\n<p>In Chile, we are able to make wine from grapes of European origin, which have been lost in Europe. Moreover, since grafting is not required, it is less labor intensive and less expensive.</p>\r\n\r\n<p>Besides Chile, Argentina and Australia\'s Barossa Valley are also making wine from grapes of European origin that have not been damaged by phylloxera.</p>\r\n\r\n<p>I used to drink Chilean wine because it was "cheap and tasty.</p>\r\n\r\n<p>I used to drink Chilean wine because it was cheap and tasty, but after learning this fact, I have come to like Chilean wine even more.</p>\r\n\r\n<p>I hope you will enjoy Chilean wine, too!</p>\r\n\r\n<p>The History of Wine --- A History of Nature\'s Blessings and Human Wisdom --- Hiroshi Yamamoto</p>\r\n\r\n<p>Jeff Siepman on unsplash</p>\r\n\r\n<p>写真AC</p>', 'references': '', 'rating': 0.0, 'rating_count': None, 'published_date': dateutil.parser.parse("2023-07-03T02:53:18.366157+00:00"), 'updated_date': dateutil.parser.parse("2023-07-03T02:53:18.372662+00:00")} ) 
    knowledge_knowledge_14.author =  importer.locate_object(UserAccount, "id", UserAccount, "id", 1, {'id': 1, 'password': 'pbkdf2_sha256$600000$Q9AwSzFqEXF1ueS21sGGfz$rZo+NVruXU5Zf5vp00wtuwLn0Z333sn5NtvS8VWKqds=', 'last_login': dateutil.parser.parse("2023-06-30T06:03:10.086511+00:00"), 'is_superuser': True, 'email': 'yurinakanishi33@gmail.com', 'name': 'yuri', 'is_active': True, 'is_staff': True} ) 
    knowledge_knowledge_14 = importer.save_or_locate(knowledge_knowledge_14)

    knowledge_knowledge_15 = Knowledge()
    knowledge_knowledge_15.name = 'トニックウォーターとは？'
    knowledge_knowledge_15.slug = 'what-is-tonic-water-jp'
    knowledge_knowledge_15.language =  importer.locate_object(Language, "id", Language, "id", 2, {'id': 2, 'name': 'jp'} ) 
    knowledge_knowledge_15.genre_for_url =  importer.locate_object(GenreForURL, "id", GenreForURL, "id", 1, {'id': 1, 'name': 'knowledge'} ) 
    knowledge_knowledge_15.type = 'knowledge'
    knowledge_knowledge_15.notesite_url = 'https://note.com/argumented_world/n/n9673f6527eef'
    knowledge_knowledge_15.article =  importer.locate_object(Article, "id", Article, "id", 6114, {'id': 6114, 'excerpt': 'トニックウォーターとは？', 'kicker': 'トニックウォーターとは？', 'content': '<p>トニックウォーターって、お酒を割るときによく使いますよね。</p>\r\n\r\n<p>日本では、ウィルキンソンのトニックウォーターなどが有名です。検索すると、こんなのとかが出てきます。</p>\r\n\r\n<p>ダウンロード</p>\r\n\r\n<p>そんなトニックウォーターについて見ていきましょう。</p>\r\n\r\n<p>＊</p>\r\n\r\n<p>トニックウォーターは熱帯地方でマラリアの薬として飲まれるようになったのが始まりです。トニックウォーターに入っているキニーネという物質が、マラリアに対して良く効いたのです。</p>\r\n\r\n<p>キニーネには独特の苦みがあるため、その味が人気があったことも、トニックウォーターがよく飲まれるようになった理由の一つです。</p>\r\n\r\n<p>キニーネはキナ族の植物からとれます。野生のキナの木はこんな感じです。</p>\r\n\r\n<p>画像1</p>\r\n\r\n<p>キナの仲間の植物は、元々南米のアンデス山脈に生えている植物で、原住民の人々はキナの樹皮を解熱剤として用いていました。そんな中、偶然にキナの樹皮にマラリアを治療する効果があることが分かって、マラリアの薬として飲まれるようになりました。</p>\r\n\r\n<p>そしてキニーネは、マラリアの特効薬として、第二次世界大戦やベトナム戦争などでとても重宝されたそうです。</p>\r\n\r\n<p>その後は、人工的なマラリアの薬が開発され、副作用やアレルギーを引き起こす可能性のあるキニーネはあまり用いられなくなっていきました。</p>\r\n\r\n<p>現在売られているのトニックウオーターは、少量のキニーネと香料を使用したものがほとんどです。日本で売られているトニックウォーターには、輸入のものを除くとキニーネは含まれていないそうです。</p>\r\n\r\n<p>調べてみると、元々は薬だった食べ物や飲み物ってけっこうたくさんあります。今後も紹介していきますね！</p>\r\n\r\n<p>トニックウォーター - Wikipedia</p>\r\n\r\n<p>ja.wikipedia.org</p>\r\n\r\n<p>キニーネ - Wikipedia</p>\r\n\r\n<p>ja.wikipedia.org</p>\r\n\r\n<p>Photo by Aleksey Oryshchenko on Unsplash</p>\r\n\r\n<p>flicer lauragayle wild quinine</p>', 'references': '', 'rating': 0.0, 'rating_count': None, 'published_date': dateutil.parser.parse("2023-07-03T02:53:18.366157+00:00"), 'updated_date': dateutil.parser.parse("2023-07-03T02:53:18.372662+00:00")} ) 
    knowledge_knowledge_15.author =  importer.locate_object(UserAccount, "id", UserAccount, "id", 1, {'id': 1, 'password': 'pbkdf2_sha256$600000$Q9AwSzFqEXF1ueS21sGGfz$rZo+NVruXU5Zf5vp00wtuwLn0Z333sn5NtvS8VWKqds=', 'last_login': dateutil.parser.parse("2023-06-30T06:03:10.086511+00:00"), 'is_superuser': True, 'email': 'yurinakanishi33@gmail.com', 'name': 'yuri', 'is_active': True, 'is_staff': True} ) 
    knowledge_knowledge_15 = importer.save_or_locate(knowledge_knowledge_15)

    knowledge_knowledge_16 = Knowledge()
    knowledge_knowledge_16.name = 'What is tonic water?'
    knowledge_knowledge_16.slug = 'what-is-tonic-water'
    knowledge_knowledge_16.language =  importer.locate_object(Language, "id", Language, "id", 1, {'id': 1, 'name': 'en'} ) 
    knowledge_knowledge_16.genre_for_url =  importer.locate_object(GenreForURL, "id", GenreForURL, "id", 1, {'id': 1, 'name': 'knowledge'} ) 
    knowledge_knowledge_16.type = 'knowledge'
    knowledge_knowledge_16.notesite_url = 'https://note.com/argumented_world/n/n9673f6527eef'
    knowledge_knowledge_16.article =  importer.locate_object(Article, "id", Article, "id", 6115, {'id': 6115, 'excerpt': 'What is tonic water?', 'kicker': 'What is tonic water?', 'content': "<p>Tonic water is often used to mix alcoholic beverages.</p>\r\n\r\n<p>In Japan, Wilkinson's tonic water is well known. If you search for tonic water, you can find something like this.</p>\r\n\r\n<p>Download</p>\r\n\r\n<p>Let's take a look at tonic water.</p>\r\n\r\n<p>Tonic water is used in the tropics.</p>\r\n\r\n<p>Tonic water was first drunk in tropical regions as a medicine for malaria. The substance called quinine contained in tonic water was effective against malaria.</p>\r\n\r\n<p>Quinine has a distinctive bitter taste, which is one of the reasons why tonic water became so popular.</p>\r\n\r\n<p>Quinine comes from the quinina plant. This is what a wild quinina tree looks like.</p>\r\n\r\n<p>Image 1</p>\r\n\r\n<p>The quinina family of plants originally grew in the Andes Mountains of South America, where the indigenous people used the bark of the quinina tree as an antipyretic. Then, by chance, it was discovered that quinina bark was effective in treating malaria, and it was taken as a malaria medicine.</p>\r\n\r\n<p>And quinine was very useful in World War II and the Vietnam War as a special remedy for malaria.</p>\r\n\r\n<p>Later, artificial malaria drugs were developed, and quinine, which could cause side effects and allergies, was used less and less.</p>\r\n\r\n<p>Most tonic water sold today is made with a small amount of quinine and fragrance. Tonic waters sold in Japan do not contain quinine, except for imported ones.</p>\r\n\r\n<p>If you look into it, you will find that there are quite a lot of foods and drinks that were originally medicines. I'll keep you posted!</p>\r\n\r\n<p>------------</p>\r\n\r\n<p>Thank you for reading to the end.</p>\r\n\r\n<p>I have written many other articles.</p>\r\n\r\n<p>References, images we have used, etc.</p>\r\n\r\n<p>Tonic water - Wikipedia</p>\r\n\r\n<p>en.wikipedia.org</p>\r\n\r\n<p>Quinine - Wikipedia</p>\r\n\r\n<p>en.wikipedia.org</p>\r\n\r\n<p>Photo by Aleksey Oryshchenko on Unsplash</p>\r\n\r\n<p>flicer lauragayle wild quinine</p>\r\n\r\n<p></p>", 'references': '', 'rating': 0.0, 'rating_count': None, 'published_date': dateutil.parser.parse("2023-07-03T02:53:18.366157+00:00"), 'updated_date': dateutil.parser.parse("2023-07-03T02:53:18.372662+00:00")} ) 
    knowledge_knowledge_16.author =  importer.locate_object(UserAccount, "id", UserAccount, "id", 1, {'id': 1, 'password': 'pbkdf2_sha256$600000$Q9AwSzFqEXF1ueS21sGGfz$rZo+NVruXU5Zf5vp00wtuwLn0Z333sn5NtvS8VWKqds=', 'last_login': dateutil.parser.parse("2023-06-30T06:03:10.086511+00:00"), 'is_superuser': True, 'email': 'yurinakanishi33@gmail.com', 'name': 'yuri', 'is_active': True, 'is_staff': True} ) 
    knowledge_knowledge_16 = importer.save_or_locate(knowledge_knowledge_16)

    knowledge_knowledge_17 = Knowledge()
    knowledge_knowledge_17.name = '呪術師の魔法を科学的に説明すると？'
    knowledge_knowledge_17.slug = 'what-is-the-scientific-explanation-for-the-sorcerers-magic-jp'
    knowledge_knowledge_17.language =  importer.locate_object(Language, "id", Language, "id", 2, {'id': 2, 'name': 'jp'} ) 
    knowledge_knowledge_17.genre_for_url =  importer.locate_object(GenreForURL, "id", GenreForURL, "id", 1, {'id': 1, 'name': 'knowledge'} ) 
    knowledge_knowledge_17.type = 'knowledge'
    knowledge_knowledge_17.notesite_url = 'https://note.com/argumented_world/n/n13a0f4b1c479'
    knowledge_knowledge_17.article =  importer.locate_object(Article, "id", Article, "id", 6116, {'id': 6116, 'excerpt': '呪術師の魔法を科学的に説明すると？', 'kicker': '呪術師の魔法を科学的に説明すると？', 'content': '<p>昔は、どのような方法で霊や未知なるものと交信していたのでしょうか。</p>\r\n\r\n<p>初期のアンデス族の呪術師は、いろいろな動物や植物の神経毒を使って、霊と交信しているような感覚を起こしていたことが分かっています。</p>\r\n\r\n<p>動物では、貝に含まれる神経毒があります。</p>\r\n\r\n<p>地域によっては、毎年決まった時期に、毒素を含む藻類が繁殖し海を真っ赤に染めることがあります。皆さんご存じかと思います、赤潮です。</p>\r\n\r\n<p>画像1</p>\r\n\r\n<p>その毒素は、藻類を食べる貝に溜まるので、赤潮が発生すると貝はしばらくの間、毒化します。その貝を人が食べると中毒症状によって、痺れ、めまい、空を飛んでいるような気分、などが引き起こされ、多量に摂ると死んでしまいます。</p>\r\n\r\n<p>また、ヒキガエルの頭の後ろから分泌される液体を食べてしまうと、幻覚、嘔吐や下痢、心臓発作などが引き起こされ、最悪の場合は死にいたります。</p>\r\n\r\n<p>植物では、コカの木が有名です。葉には麻薬成分のコカインを含んでおり、います。コカの木は怪我をしたときにに唾液と混ぜて局所麻酔薬として使っていた可能性もあります。</p>\r\n\r\n<p>「幻覚」とか、「空を飛んでいるような気分」って、どんな感じでしょうか。あきらかに精神の錯乱の症状ですが、ちょっと体験してみたい気もします。</p>\r\n\r\n<p>古代の、科学が発展していない時代に呪術師の儀式の中で精神が錯乱したら、本当に霊と交信している、と思ってしまいますよね。</p>\r\n\r\n<p>古代アンデスの呪術師はこのような自然界にある毒素の性質、適量などを感覚的に理解し、使いこなしていたのでしょうか。</p>\r\n\r\n<p>Pexels Erik Mclean</p>\r\n\r\n<p>King Tide 4TH January 2014 Red Cliffs Scarborough QLD-20 (11827723894).jpg</p>\r\n\r\n<p>『貝と文明』\u3000ヘレン スケールズ (著)\u3000\u3000林 裕美子 (訳) 107</p>', 'references': '', 'rating': 0.0, 'rating_count': None, 'published_date': dateutil.parser.parse("2023-07-03T02:53:18.366157+00:00"), 'updated_date': dateutil.parser.parse("2023-07-03T02:53:18.372662+00:00")} ) 
    knowledge_knowledge_17.author =  importer.locate_object(UserAccount, "id", UserAccount, "id", 1, {'id': 1, 'password': 'pbkdf2_sha256$600000$Q9AwSzFqEXF1ueS21sGGfz$rZo+NVruXU5Zf5vp00wtuwLn0Z333sn5NtvS8VWKqds=', 'last_login': dateutil.parser.parse("2023-06-30T06:03:10.086511+00:00"), 'is_superuser': True, 'email': 'yurinakanishi33@gmail.com', 'name': 'yuri', 'is_active': True, 'is_staff': True} ) 
    knowledge_knowledge_17 = importer.save_or_locate(knowledge_knowledge_17)

    knowledge_knowledge_18 = Knowledge()
    knowledge_knowledge_18.name = 'AAA'
    knowledge_knowledge_18.slug = 'what-is-the-scientific-explanation-for-the-sorcerers-magic'
    knowledge_knowledge_18.language =  importer.locate_object(Language, "id", Language, "id", 1, {'id': 1, 'name': 'en'} ) 
    knowledge_knowledge_18.genre_for_url =  importer.locate_object(GenreForURL, "id", GenreForURL, "id", 1, {'id': 1, 'name': 'knowledge'} ) 
    knowledge_knowledge_18.type = 'knowledge'
    knowledge_knowledge_18.notesite_url = 'https://note.com/argumented_world/n/n13a0f4b1c479'
    knowledge_knowledge_18.article =  importer.locate_object(Article, "id", Article, "id", 6117, {'id': 6117, 'excerpt': 'AAA', 'kicker': 'AAA', 'content': '<p>What methods were used in the past to communicate with spirits and the unknown?</p>\r\n\r\n<p>We know that early Andean sorcerers used neurotoxins from various animals and plants to create the sensation of communicating with spirits.</p>\r\n\r\n<p>Among animals, neurotoxins are found in shellfish.</p>\r\n\r\n<p>In some areas, at a certain time each year, algae containing the toxin may grow and turn the sea red. This is the red tide, which I am sure you are all familiar with.</p>\r\n\r\n<p>Image 1</p>\r\n\r\n<p>The toxins accumulate in the shellfish that eat the algae, so when a red tide occurs, the shellfish become poisoned for a while. When people eat those shellfish, poisoning symptoms can cause numbness, dizziness, feeling like flying, etc., and in large doses can kill you.</p>\r\n\r\n<p>In addition, eating the liquid secreted from the back of the toad\'s head can cause hallucinations, vomiting, diarrhea, heart attacks, and in the worst cases, death.</p>\r\n\r\n<p>The most famous plant is the coca tree. Its leaves contain the narcotic cocaine. The coca tree may have been used as a local anesthetic when mixed with saliva to treat injuries.</p>\r\n\r\n<p>What do "hallucinations" or "feeling like you\'re flying" feel like? Obviously, these are symptoms of mental derangement, but I would like to experience them for a while.</p>\r\n\r\n<p>In ancient times, when science had not yet developed, if you had a mental derangement during a sorcerer\'s ritual, you would think that you were really communicating with spirits, wouldn\'t you?</p>\r\n\r\n<p>I wonder if the ancient Andean sorcerers had a sensory understanding and mastery of the nature and proper amount of such toxins in nature.</p>\r\n\r\n<p></p>', 'references': '', 'rating': 0.0, 'rating_count': None, 'published_date': dateutil.parser.parse("2023-07-03T02:53:18.366157+00:00"), 'updated_date': dateutil.parser.parse("2023-07-03T02:53:18.372662+00:00")} ) 
    knowledge_knowledge_18.author =  importer.locate_object(UserAccount, "id", UserAccount, "id", 1, {'id': 1, 'password': 'pbkdf2_sha256$600000$Q9AwSzFqEXF1ueS21sGGfz$rZo+NVruXU5Zf5vp00wtuwLn0Z333sn5NtvS8VWKqds=', 'last_login': dateutil.parser.parse("2023-06-30T06:03:10.086511+00:00"), 'is_superuser': True, 'email': 'yurinakanishi33@gmail.com', 'name': 'yuri', 'is_active': True, 'is_staff': True} ) 
    knowledge_knowledge_18 = importer.save_or_locate(knowledge_knowledge_18)

    knowledge_knowledge_19 = Knowledge()
    knowledge_knowledge_19.name = '日焼け止めはどのような原理？'
    knowledge_knowledge_19.slug = 'what-is-the-principle-of-sunscreen-jp'
    knowledge_knowledge_19.language =  importer.locate_object(Language, "id", Language, "id", 2, {'id': 2, 'name': 'jp'} ) 
    knowledge_knowledge_19.genre_for_url =  importer.locate_object(GenreForURL, "id", GenreForURL, "id", 1, {'id': 1, 'name': 'knowledge'} ) 
    knowledge_knowledge_19.type = 'knowledge'
    knowledge_knowledge_19.notesite_url = 'https://note.com/argumented_world/n/n26b7e11b90ab'
    knowledge_knowledge_19.article =  importer.locate_object(Article, "id", Article, "id", 6118, {'id': 6118, 'excerpt': '日焼け止めはどのような原理？', 'kicker': '日焼け止めはどのような原理？', 'content': '<p>紫外線から肌を守る日焼け止めは、どのように作用しているのでしょうか。</p>\r\n\r\n<p>日焼け止めは大きく分けて2種類あります。</p>\r\n\r\n<p>吸収剤と散乱剤です。</p>\r\n\r\n<p>吸収剤</p>\r\n\r\n<p>紫外線を吸収し、化学変化を起こして熱などのエネルギーに変化し放出します。化学的な方法ですね。</p>\r\n\r\n<p>吸収剤に使われる物質は、肌から人体に吸収されるという報告もあり、評判はあまり良くありません。</p>\r\n\r\n<p>散乱剤</p>\r\n\r\n<p>紫外線を反射させて肌に届かないようにします。物理的な方法です。</p>\r\n\r\n<p>二酸化チタンや酸化亜鉛が使われます。この2つの物質は、肌から体内に取り込まれないため、人体に影響はないそうです。</p>\r\n\r\n<p>ダイヤモンドは屈折率が高いことで有名（キラキラ輝いて見えるのは、光の屈折のおかげ）ですが、二酸化チタンはダイヤモンドより高い屈折率を持っています。</p>\r\n\r\n<p>「図説世界史を変えた50の鉱物』 エリック・シャリーン</p>\r\n\r\n<p>Photo by BATCH by Wisconsin Hemp Scientific on Unsplash</p>\r\n\r\n<p>https://www.kodomonokagaku.com/read/hatena/5236/</p>\r\n\r\n<p>https://ameblo.jp/rik01194/entry-12335296709.html</p>', 'references': '', 'rating': 0.0, 'rating_count': None, 'published_date': dateutil.parser.parse("2023-07-03T02:53:18.366157+00:00"), 'updated_date': dateutil.parser.parse("2023-07-03T02:53:18.372662+00:00")} ) 
    knowledge_knowledge_19.author =  importer.locate_object(UserAccount, "id", UserAccount, "id", 1, {'id': 1, 'password': 'pbkdf2_sha256$600000$Q9AwSzFqEXF1ueS21sGGfz$rZo+NVruXU5Zf5vp00wtuwLn0Z333sn5NtvS8VWKqds=', 'last_login': dateutil.parser.parse("2023-06-30T06:03:10.086511+00:00"), 'is_superuser': True, 'email': 'yurinakanishi33@gmail.com', 'name': 'yuri', 'is_active': True, 'is_staff': True} ) 
    knowledge_knowledge_19 = importer.save_or_locate(knowledge_knowledge_19)

    knowledge_knowledge_20 = Knowledge()
    knowledge_knowledge_20.name = 'What is the principle of sunscreen?'
    knowledge_knowledge_20.slug = 'what-is-the-principle-of-sunscreen'
    knowledge_knowledge_20.language =  importer.locate_object(Language, "id", Language, "id", 1, {'id': 1, 'name': 'en'} ) 
    knowledge_knowledge_20.genre_for_url =  importer.locate_object(GenreForURL, "id", GenreForURL, "id", 1, {'id': 1, 'name': 'knowledge'} ) 
    knowledge_knowledge_20.type = 'knowledge'
    knowledge_knowledge_20.notesite_url = 'https://note.com/argumented_world/n/n26b7e11b90ab'
    knowledge_knowledge_20.article =  importer.locate_object(Article, "id", Article, "id", 6119, {'id': 6119, 'excerpt': 'What is the principle of sunscreen?', 'kicker': 'What is the principle of sunscreen?', 'content': '<p>How do sunscreens work to protect the skin from UV rays?</p>\r\n\r\n<p>There are two main types of sunscreens.</p>\r\n\r\n<p>They are absorbers and scatterers.</p>\r\n\r\n<p>Absorbers</p>\r\n\r\n<p>Absorb ultraviolet rays and undergo a chemical change that transforms them into heat and other forms of energy and releases them. This is a chemical method.</p>\r\n\r\n<p>Substances used in absorbers have a poor reputation, with some reports of absorption into the human body through the skin.</p>\r\n\r\n<p>Scattering agents.</p>\r\n\r\n<p>Reflects UV rays so that they do not reach the skin. Physical method.</p>\r\n\r\n<p>Titanium dioxide and zinc oxide are used. These two substances do not affect the human body because they are not taken into the body through the skin.</p>\r\n\r\n<p>Diamonds are famous for their high refractive index (it is the refraction of light that makes them appear to sparkle), but titanium dioxide has a higher refractive index than diamonds.</p>\r\n\r\n<p>------------</p>\r\n\r\n<p>Thank you for reading to the end.</p>\r\n\r\n<p>Reference materials, images used, etc.</p>\r\n\r\n<p>The 50 Minerals That Changed World History, Eric Chaline.</p>\r\n\r\n<p>Photo by BATCH by Wisconsin Hemp Scientific on Unsplash</p>\r\n\r\n<p>https://www.kodomonokagaku.com/read/hatena/5236/</p>\r\n\r\n<p>https://ameblo.jp/rik01194/entry-12335296709.html</p>\r\n\r\n<p></p>', 'references': '', 'rating': 0.0, 'rating_count': None, 'published_date': dateutil.parser.parse("2023-07-03T02:53:18.366157+00:00"), 'updated_date': dateutil.parser.parse("2023-07-03T02:53:18.372662+00:00")} ) 
    knowledge_knowledge_20.author =  importer.locate_object(UserAccount, "id", UserAccount, "id", 1, {'id': 1, 'password': 'pbkdf2_sha256$600000$Q9AwSzFqEXF1ueS21sGGfz$rZo+NVruXU5Zf5vp00wtuwLn0Z333sn5NtvS8VWKqds=', 'last_login': dateutil.parser.parse("2023-06-30T06:03:10.086511+00:00"), 'is_superuser': True, 'email': 'yurinakanishi33@gmail.com', 'name': 'yuri', 'is_active': True, 'is_staff': True} ) 
    knowledge_knowledge_20 = importer.save_or_locate(knowledge_knowledge_20)

    knowledge_knowledge_21 = Knowledge()
    knowledge_knowledge_21.name = '最初に引いた手札がで驚くなら、最初に引いた手札がでも驚こう。'
    knowledge_knowledge_21.slug = 'what-is-coincidence-jp'
    knowledge_knowledge_21.language =  importer.locate_object(Language, "id", Language, "id", 2, {'id': 2, 'name': 'jp'} ) 
    knowledge_knowledge_21.genre_for_url =  importer.locate_object(GenreForURL, "id", GenreForURL, "id", 1, {'id': 1, 'name': 'knowledge'} ) 
    knowledge_knowledge_21.type = 'knowledge'
    knowledge_knowledge_21.notesite_url = 'https://note.com/argumented_world/n/nf4c6558e99b7'
    knowledge_knowledge_21.article =  importer.locate_object(Article, "id", Article, "id", 6120, {'id': 6120, 'excerpt': '最初に引いた手札がで驚くなら、最初に引いた手札がでも驚こう。', 'kicker': '最初に引いた手札がで驚くなら、最初に引いた手札がでも驚こう。', 'content': '<p>ポーカーとかのカードゲームをやっていて、最初に配られた5枚のカードをめくってみると、なんと</p>\r\n\r\n<p>♠1-♠2-♠3-♠4-♠5</p>\r\n\r\n<p></p>\r\n\r\n<p>「やったー！なんかいいこと起こるかも！」と楽観的になるか、「運使っちゃったから帰り道気を付けないとな」と悲観的になるのかは自由ですが、</p>\r\n\r\n<p>♠1-♠2-♠3-♠4-♠5がそろう確率と比べて、何の規則性もない♥2-♠J-♣5-♦9-♣7とか♦9-♦A-♣8-♣7-♠10とかがそろう確率は同じです。</p>\r\n\r\n<p>トランプのカードが54枚だとすると、引く順番を考えないで5枚のトランプをランダムに配った時、ある5枚のカードを引く確率は</p>\r\n\r\n<p>（54×53×52×51×50）÷（5×4×3×2×1）=\u30003162510通り</p>\r\n\r\n<p>なので</p>\r\n\r\n<p>♠1-♠2-♠3-♠4-♠5が出る確率が\u30001 / 3162510通り\u3000ならば、</p>\r\n\r\n<p>♥2-♠J-♣5-♦9-♣7が出る確率も同じく\u30001 / 3162510通り\u3000です。</p>\r\n\r\n<p>私たちは、ランダムな出来事が組み合わさった時に、♠1-♠2-♠3-♠4-♠5のように、はっきりと規則性があるものだけがめったに出ないように感じてしまいますが、規則性がないものも、同じようにめったに出ないということです。</p>\r\n\r\n<p>もちろん、確率のことなんか忘れて、すげえ！って素直に喜んだ方がカードゲームは楽しいと思いますが！</p>\r\n\r\n<p>Photo by Jack Hamilton on Unsplash</p>', 'references': '', 'rating': 0.0, 'rating_count': None, 'published_date': dateutil.parser.parse("2023-07-03T02:53:18.366157+00:00"), 'updated_date': dateutil.parser.parse("2023-07-03T02:53:18.372662+00:00")} ) 
    knowledge_knowledge_21.author =  importer.locate_object(UserAccount, "id", UserAccount, "id", 1, {'id': 1, 'password': 'pbkdf2_sha256$600000$Q9AwSzFqEXF1ueS21sGGfz$rZo+NVruXU5Zf5vp00wtuwLn0Z333sn5NtvS8VWKqds=', 'last_login': dateutil.parser.parse("2023-06-30T06:03:10.086511+00:00"), 'is_superuser': True, 'email': 'yurinakanishi33@gmail.com', 'name': 'yuri', 'is_active': True, 'is_staff': True} ) 
    knowledge_knowledge_21 = importer.save_or_locate(knowledge_knowledge_21)

    knowledge_knowledge_22 = Knowledge()
    knowledge_knowledge_22.name = 'What is coincidence?'
    knowledge_knowledge_22.slug = 'what-is-coincidence'
    knowledge_knowledge_22.language =  importer.locate_object(Language, "id", Language, "id", 1, {'id': 1, 'name': 'en'} ) 
    knowledge_knowledge_22.genre_for_url =  importer.locate_object(GenreForURL, "id", GenreForURL, "id", 1, {'id': 1, 'name': 'knowledge'} ) 
    knowledge_knowledge_22.type = 'knowledge'
    knowledge_knowledge_22.notesite_url = 'https://note.com/argumented_world/n/nf4c6558e99b7'
    knowledge_knowledge_22.article =  importer.locate_object(Article, "id", Article, "id", 6121, {'id': 6121, 'excerpt': 'What is coincidence?', 'kicker': 'What is coincidence?', 'content': '<p>If you are surprised by the first hand you draw, be surprised by the first hand you draw.</p>\r\n\r\n<p>I was playing poker or some other card game, and I turned over the first five cards I was dealt, and lo and behold!</p>\r\n\r\n<p>♠1-♠2-♠3-♠4-♠5</p>\r\n\r\n<p>I thought to myself, "Yay! Something good might happen!" or "I used my luck, I\'ll have to be careful on the way home," you can be as optimistic or pessimistic as you want.</p>\r\n\r\n<p>The probability of getting ♠1-♠2-♠3-♠4-♠5 together is the same as the probability of getting ♥2-♠J-♣5-♦9-♣7 or ♦9-♦A-♣8-♣7-♠10, which have no regularity whatsoever.</p>\r\n\r\n<p>If there are 54 cards in a deck of cards, the probability of drawing a certain 5 cards when dealt 5 cards at random without considering the order of drawing is</p>\r\n\r\n<p>(54 x 53 x 52 x 51 x 50) / (5 x 4 x 3 x 2 x 1) = 3162510 ways</p>\r\n\r\n<p>Therefore</p>\r\n\r\n<p>If the probability of getting ♠1-♠2-♠3-♠4-♠5 is 1 / 3162510 possible outcomes, then</p>\r\n\r\n<p>If ♥2-♠J-♣5-♦9-♣7, then there are 1 / 3162510 probabilities that ♥2-♠J-♣5-♦9-♣7 will also occur.</p>\r\n\r\n<p>We tend to feel that when random events are combined, only those that are clearly regular, such as ♠1-♠2-♠3-♠4-♠5, are seldom encountered, but those that are not regular are just as seldom encountered.</p>\r\n\r\n<p>Of course, it is better to forget about the probabilities and just be happy with the card, "Wow! I think card games are more fun when you can honestly say, "Wow!</p>\r\n\r\n<p></p>', 'references': '', 'rating': 0.0, 'rating_count': None, 'published_date': dateutil.parser.parse("2023-07-03T02:53:18.366157+00:00"), 'updated_date': dateutil.parser.parse("2023-07-03T02:53:18.372662+00:00")} ) 
    knowledge_knowledge_22.author =  importer.locate_object(UserAccount, "id", UserAccount, "id", 1, {'id': 1, 'password': 'pbkdf2_sha256$600000$Q9AwSzFqEXF1ueS21sGGfz$rZo+NVruXU5Zf5vp00wtuwLn0Z333sn5NtvS8VWKqds=', 'last_login': dateutil.parser.parse("2023-06-30T06:03:10.086511+00:00"), 'is_superuser': True, 'email': 'yurinakanishi33@gmail.com', 'name': 'yuri', 'is_active': True, 'is_staff': True} ) 
    knowledge_knowledge_22 = importer.save_or_locate(knowledge_knowledge_22)

    knowledge_knowledge_23 = Knowledge()
    knowledge_knowledge_23.name = '５分５分の予想をすると起ること'
    knowledge_knowledge_23.slug = 'what-happens-when-you-predict-5-minutes-5-minutes-jp'
    knowledge_knowledge_23.language =  importer.locate_object(Language, "id", Language, "id", 2, {'id': 2, 'name': 'jp'} ) 
    knowledge_knowledge_23.genre_for_url =  importer.locate_object(GenreForURL, "id", GenreForURL, "id", 1, {'id': 1, 'name': 'knowledge'} ) 
    knowledge_knowledge_23.type = 'knowledge'
    knowledge_knowledge_23.notesite_url = 'https://note.com/argumented_world/n/n00ca844fce85'
    knowledge_knowledge_23.article =  importer.locate_object(Article, "id", Article, "id", 6122, {'id': 6122, 'excerpt': '５分５分の予想をすると起ること', 'kicker': '５分５分の予想をすると起ること', 'content': '<p>「今日の夜ごはんはなに？」</p>\r\n\r\n<p>「50％の確率でハンバーグ、50％の確率で唐揚げよ～」</p>\r\n\r\n<p>「いや、どっちやねん！」ってなりますよね。</p>\r\n\r\n<p>「60％の確率でハンバーグ、40％の確率で唐揚げよ～」っていわれた方が、まあ、ハンバーグと思っておくか、的な心理になりますよね（なりません）</p>\r\n\r\n<p>＊</p>\r\n\r\n<p>そういった「どっちかはっきりしろや！」を避けるために、予測の世界では５分５分の予想を避けることがあるようです。</p>\r\n\r\n<p>例えば、アメリカの民間企業の天気予報では、降水確率50％という言い方はめったにしません。視聴者の目には優柔不断にうつるからです。なので多少の正確さを犠牲にしても、切り上げて60％か、切り下げて40％と伝えています。</p>\r\n\r\n<p>また、『シグナル&ノイズ』の著者のネイト・シルバー氏が2012年のアメリカ大統領選挙前に、企業の幹部などが集まる会で講演をした際のエピソードがあります。</p>\r\n\r\n<p>彼がオバマ氏とロムニー氏の勝率はそれぞれ50％だと予測すると、彼の講演を聴いていた人たちは「どっち付かずな予想はやめて、本当のことを教えてくれ！」といったそうです。</p>\r\n\r\n<p>皆さんは正直さか、キャッチーさ、どっちを取りますか？</p>\r\n\r\n<p>シグナル&ノイズ 天才データアナリストの「予測学」</p>\r\n\r\n<p>ネイト・シルバー (著)、西内啓、川添節子 (翻訳)</p>\r\n\r\n<p>Pexels Vera Arsic</p>', 'references': '', 'rating': 0.0, 'rating_count': None, 'published_date': dateutil.parser.parse("2023-07-03T02:53:18.366157+00:00"), 'updated_date': dateutil.parser.parse("2023-07-03T02:53:18.372662+00:00")} ) 
    knowledge_knowledge_23.author =  importer.locate_object(UserAccount, "id", UserAccount, "id", 1, {'id': 1, 'password': 'pbkdf2_sha256$600000$Q9AwSzFqEXF1ueS21sGGfz$rZo+NVruXU5Zf5vp00wtuwLn0Z333sn5NtvS8VWKqds=', 'last_login': dateutil.parser.parse("2023-06-30T06:03:10.086511+00:00"), 'is_superuser': True, 'email': 'yurinakanishi33@gmail.com', 'name': 'yuri', 'is_active': True, 'is_staff': True} ) 
    knowledge_knowledge_23 = importer.save_or_locate(knowledge_knowledge_23)

    knowledge_knowledge_24 = Knowledge()
    knowledge_knowledge_24.name = 'What happens when you predict 5 minutes 5 minutes'
    knowledge_knowledge_24.slug = 'what-happens-when-you-predict-5-minutes-5-minutes'
    knowledge_knowledge_24.language =  importer.locate_object(Language, "id", Language, "id", 1, {'id': 1, 'name': 'en'} ) 
    knowledge_knowledge_24.genre_for_url =  importer.locate_object(GenreForURL, "id", GenreForURL, "id", 1, {'id': 1, 'name': 'knowledge'} ) 
    knowledge_knowledge_24.type = 'knowledge'
    knowledge_knowledge_24.notesite_url = 'https://note.com/argumented_world/n/n00ca844fce85'
    knowledge_knowledge_24.article =  importer.locate_object(Article, "id", Article, "id", 6123, {'id': 6123, 'excerpt': 'What happens when you predict 5 minutes 5 minutes', 'kicker': 'What happens when you predict 5 minutes 5 minutes', 'content': '<p>What\'s for dinner tonight?</p>\r\n\r\n<p>"50% chance it\'s a hamburger steak, 50% chance it\'s fried chicken.</p>\r\n\r\n<p>"No, which is it? I\'m sure you\'ll say, "No, it\'s either one!</p>\r\n\r\n<p>If someone says, "There\'s a 60% chance it\'s a hamburger steak and a 40% chance it\'s fried chicken," you\'re more likely to think, "Well, I\'ll just have a hamburger steak.</p>\r\n\r\n<p>I don\'t think so.</p>\r\n\r\n<p>In order to avoid such a "Which is it? In the world of forecasting, it seems that people sometimes avoid 5-minute forecasts in order to avoid "Which is it?</p>\r\n\r\n<p>For example, in the U.S. private sector weather forecasting, they seldom say there is a 50% chance of precipitation. This is because it appears indecisive in the eyes of the viewer. So, even at the expense of some accuracy, they round up to 60% or down to 40%.</p>\r\n\r\n<p>There is also a story about Nate Silver, author of "Signal & Noise," who spoke to a gathering of business executives and others before the 2012 U.S. presidential election.</p>\r\n\r\n<p>When he predicted that Obama and Romney each had a 50% chance of winning, the people listening to his talk said, "Cut the BS and tell us the truth! They said, "Stop giving us one-sided predictions and tell us the truth!</p>\r\n\r\n<p>Which do you prefer, honesty or catchiness?</p>\r\n\r\n<p></p>', 'references': '', 'rating': 0.0, 'rating_count': None, 'published_date': dateutil.parser.parse("2023-07-03T02:53:18.366157+00:00"), 'updated_date': dateutil.parser.parse("2023-07-03T02:53:18.372662+00:00")} ) 
    knowledge_knowledge_24.author =  importer.locate_object(UserAccount, "id", UserAccount, "id", 1, {'id': 1, 'password': 'pbkdf2_sha256$600000$Q9AwSzFqEXF1ueS21sGGfz$rZo+NVruXU5Zf5vp00wtuwLn0Z333sn5NtvS8VWKqds=', 'last_login': dateutil.parser.parse("2023-06-30T06:03:10.086511+00:00"), 'is_superuser': True, 'email': 'yurinakanishi33@gmail.com', 'name': 'yuri', 'is_active': True, 'is_staff': True} ) 
    knowledge_knowledge_24 = importer.save_or_locate(knowledge_knowledge_24)

    knowledge_knowledge_25 = Knowledge()
    knowledge_knowledge_25.name = '「植物油脂」って何から取ってるの？'
    knowledge_knowledge_25.slug = 'what-do-you-get-vegetable-fats-from-jp'
    knowledge_knowledge_25.language =  importer.locate_object(Language, "id", Language, "id", 2, {'id': 2, 'name': 'jp'} ) 
    knowledge_knowledge_25.genre_for_url =  importer.locate_object(GenreForURL, "id", GenreForURL, "id", 1, {'id': 1, 'name': 'knowledge'} ) 
    knowledge_knowledge_25.type = 'knowledge'
    knowledge_knowledge_25.notesite_url = 'https://note.com/argumented_world/n/n39f48148aca2'
    knowledge_knowledge_25.article =  importer.locate_object(Article, "id", Article, "id", 6124, {'id': 6124, 'excerpt': '「植物油脂」って何から取ってるの？', 'kicker': '「植物油脂」って何から取ってるの？', 'content': '<p>植物油脂</p>\r\n\r\n<p>ポテトチップス、チョコレート、アイスクリーム、カップ麺、カレールウなどなど、多くの加工食品の原材料に「植物油脂」が使われています。</p>\r\n\r\n<p>植物油脂表示</p>\r\n\r\n<p>この「植物油脂」はほとんどは「パーム油」です。パーム油とは、アブラヤシの果実の果肉部分から採油した油脂のことです。</p>\r\n\r\n<p>大豆油や菜種油を使用していれば、パーム油に比べて格段に高価であるため、その旨を堂々と表示するはずです。なので「植物油脂」のほとんどはパーム油と考えられます。</p>\r\n\r\n<p>画像2</p>\r\n\r\n<p>画像4</p>\r\n\r\n<p>画像5</p>\r\n\r\n<p>パーム油は健康か？</p>\r\n\r\n<p>豚や牛の動物性油脂と違って、パーム油は植物油脂と表記されており健康に良さそうな気がしますが、そうとも言えません。</p>\r\n\r\n<p>パーム油は他の植物油脂と異なり、血中のコレステロールを増加させると言われる飽和脂肪酸がラードや牛脂以上に高い割合を占める、変わった植物油脂です。</p>\r\n\r\n<p>しかし、こういったのパーム油の悪いイメージは、パーム油と競合する大豆油の地位を守るためにアメリカの大豆協会が 1980 年代後半以降に仕掛けたネガティブキャンペーンの影響もあるようです。</p>\r\n\r\n<p>パーム油の用途</p>\r\n\r\n<p>パーム油の主な用途は、先ほど述べた食品用、石けん洗剤、そしてディーゼル燃料の3つです。</p>\r\n\r\n<p>パーム油のディーゼル燃料は、石油に変わる植物由来の燃料として注目を集めています。また石鹸はかつて動物の脂肪から作られましたが、いまではココナッツやアブラヤシ油が原料になっています。</p>\r\n\r\n<p>そして、一番使われているのは、食品用です。パーム油は世界で最も生産されている植物油です。</p>\r\n\r\n<p>パーム油の利点</p>\r\n\r\n<p>パーム油がこれほどまでに増えた理由は主に2つあります。</p>\r\n\r\n<p>1つめは、安さです。アブラヤシは1年を通して実をつけるので、大豆油やなたね油と比べて8～10倍もの生産が可能です。他の油と比べて同じ作付け面積でも生産量が多いので、価格も安くなります。</p>\r\n\r\n<p>2つめは、パーム油の使い勝手の良さです。パーム油は飽和脂肪酸と不飽和脂肪酸の含む割合が近いために、液体の油、固体の油のどちらにも加工しやすいのです。</p>\r\n\r\n<p>動物性油脂には飽和脂肪酸が多く含まれ、常温で固体になります。植物油脂には不飽和脂肪酸が多く含まれ、常温で液体になります。</p>\r\n\r\n<p>環境問題</p>\r\n\r\n<p>アブラヤシは熱帯地方でしか栽培できないので、主にマレーシアやインドネシア、パプアニューギニアなどで栽培されます。</p>\r\n\r\n<p>画像6</p>\r\n\r\n<p>パーム油の世界的な需要により、これらの地域の熱帯雨林が膨大な規模で開発され、アブラヤシのプランテーションに変わっています。</p>\r\n\r\n<p>画像3</p>\r\n\r\n<p>今後も、パーム油の需要は年々増えていくとされています。</p>\r\n\r\n<p>森林伐採、現地の人の労働問題、熱帯雨林に生息する動物の減少など、課題は山積みです。</p>\r\n\r\n<p>『図説 世界史を変えた50の植物 』\u3000ビル ローズ (著)、柴田 譲治 (翻訳)</p>\r\n\r\n<p>3分でわかるパーム油</p>\r\n\r\n<p>www.bctj.jp</p>\r\n\r\n<p>タイトル未設定</p>\r\n\r\n<p>www.kyokyo-u.ac.jp</p>\r\n\r\n<p>パーム油\u3000私たちの暮らしと熱帯林の破壊をつなぐもの</p>\r\n\r\n<p>パーム油の生産は、熱帯林減少の最大の要因の一つとされています。ポテトチップスやパンなどの加工食品、洗剤、せっけん、化粧品…</p>\r\n\r\n<p>www.wwf.or.jp</p>\r\n\r\n<p>使用させて頂いた画像</p>\r\n\r\n<p>10015389 on Pixabay</p>\r\n\r\n<p>wikimedia commons</p>', 'references': '', 'rating': 0.0, 'rating_count': None, 'published_date': dateutil.parser.parse("2023-07-03T02:53:18.366157+00:00"), 'updated_date': dateutil.parser.parse("2023-07-03T02:53:18.372662+00:00")} ) 
    knowledge_knowledge_25.author =  importer.locate_object(UserAccount, "id", UserAccount, "id", 1, {'id': 1, 'password': 'pbkdf2_sha256$600000$Q9AwSzFqEXF1ueS21sGGfz$rZo+NVruXU5Zf5vp00wtuwLn0Z333sn5NtvS8VWKqds=', 'last_login': dateutil.parser.parse("2023-06-30T06:03:10.086511+00:00"), 'is_superuser': True, 'email': 'yurinakanishi33@gmail.com', 'name': 'yuri', 'is_active': True, 'is_staff': True} ) 
    knowledge_knowledge_25 = importer.save_or_locate(knowledge_knowledge_25)

    knowledge_knowledge_26 = Knowledge()
    knowledge_knowledge_26.name = ' What do you get "vegetable fats" from?'
    knowledge_knowledge_26.slug = 'what-do-you-get-vegetable-fats-from'
    knowledge_knowledge_26.language =  importer.locate_object(Language, "id", Language, "id", 1, {'id': 1, 'name': 'en'} ) 
    knowledge_knowledge_26.genre_for_url =  importer.locate_object(GenreForURL, "id", GenreForURL, "id", 1, {'id': 1, 'name': 'knowledge'} ) 
    knowledge_knowledge_26.type = 'knowledge'
    knowledge_knowledge_26.notesite_url = 'https://note.com/argumented_world/n/n39f48148aca2'
    knowledge_knowledge_26.article =  importer.locate_object(Article, "id", Article, "id", 6125, {'id': 6125, 'excerpt': ' What do you get "vegetable fats" from?', 'kicker': ' What do you get "vegetable fats" from?', 'content': '<p>Vegetable oils and fats</p>\r\n\r\n<p>Vegetable oils and fats" are used as ingredients in many processed foods such as potato chips, chocolate, ice cream, cup noodles, curry roux, etc.</p>\r\n\r\n<p>Vegetable Oil and Fat Labeling</p>\r\n\r\n<p>Most of these "vegetable oils and fats" are palm oil. Palm oil is oil extracted from the pulpy part of the fruit of the oil palm.</p>\r\n\r\n<p>If soybean oil or rapeseed oil were used, they would be proudly labeled as such because they are much more expensive than palm oil. Therefore, most "vegetable oils and fats" are considered to be palm oil.</p>\r\n\r\n<p>Image 2</p>\r\n\r\n<p>Image 4</p>\r\n\r\n<p>Image 5</p>\r\n\r\n<p>Is Palm Oil Healthy?</p>\r\n\r\n<p>Unlike animal fats from pigs and cows, palm oil is labeled as a vegetable oil and fat, which sounds healthy, but it is not.</p>\r\n\r\n<p>Unlike other vegetable fats, palm oil is an unusual vegetable oil that contains a higher percentage of saturated fatty acids than lard or beef tallow, which are known to increase cholesterol in the blood.</p>\r\n\r\n<p>However, the negative image of palm oil is partly due to a negative campaign launched by the American Soybean Association since the late 1980s to protect the position of soybean oil, which competes with palm oil.</p>\r\n\r\n<p>Uses of Palm Oil</p>\r\n\r\n<p>The three main uses of palm oil are for food, as mentioned earlier, soap detergent, and diesel fuel.</p>\r\n\r\n<p>Palm oil diesel fuel is gaining attention as a plant-based alternative to petroleum. Also, soap was once made from animal fat, but is now made from coconut and oil palm oil.</p>\r\n\r\n<p>And the most common use is for food products. Palm oil is the most produced vegetable oil in the world.</p>\r\n\r\n<p>Advantages of Palm Oil</p>\r\n\r\n<p>There are two main reasons why palm oil has increased so much.</p>\r\n\r\n<p>The first is its low cost. The oil palm bears fruit throughout the year, making it possible to produce 8 to 10 times as much oil as soybean oil or rape oil. Compared to other oils, the same planted area produces more oil, and thus the price is lower.</p>\r\n\r\n<p>Second, palm oil is easy to use. Because palm oil contains a close ratio of saturated and unsaturated fatty acids, it can be easily processed into both liquid and solid oils.</p>\r\n\r\n<p>Animal fats and oils are high in saturated fatty acids and become solid at room temperature. Vegetable fats and oils are high in unsaturated fatty acids and become liquid at room temperature.</p>\r\n\r\n<p>Environmental Issues</p>\r\n\r\n<p>Oil palm can only be grown in tropical regions, mainly in Malaysia, Indonesia, and Papua New Guinea.</p>\r\n\r\n<p>Image 6</p>\r\n\r\n<p>Due to the global demand for palm oil, tropical rainforests in these regions are being developed on an enormous scale and turned into oil palm plantations.</p>\r\n\r\n<p>Image 3</p>\r\n\r\n<p>It is estimated that the demand for palm oil will continue to increase year by year.</p>\r\n\r\n<p>Deforestation, labor problems for local people, and the decrease in the number of animals living in the rainforests are just a few of the issues that need to be addressed.</p>\r\n\r\n<p></p>', 'references': '', 'rating': 0.0, 'rating_count': None, 'published_date': dateutil.parser.parse("2023-07-03T02:53:18.366157+00:00"), 'updated_date': dateutil.parser.parse("2023-07-03T02:53:18.372662+00:00")} ) 
    knowledge_knowledge_26.author =  importer.locate_object(UserAccount, "id", UserAccount, "id", 1, {'id': 1, 'password': 'pbkdf2_sha256$600000$Q9AwSzFqEXF1ueS21sGGfz$rZo+NVruXU5Zf5vp00wtuwLn0Z333sn5NtvS8VWKqds=', 'last_login': dateutil.parser.parse("2023-06-30T06:03:10.086511+00:00"), 'is_superuser': True, 'email': 'yurinakanishi33@gmail.com', 'name': 'yuri', 'is_active': True, 'is_staff': True} ) 
    knowledge_knowledge_26 = importer.save_or_locate(knowledge_knowledge_26)

    knowledge_knowledge_27 = Knowledge()
    knowledge_knowledge_27.name = '三種の神器が表すものとは？'
    knowledge_knowledge_27.slug = 'what-do-the-three-sacred-objects-represent-jp'
    knowledge_knowledge_27.language =  importer.locate_object(Language, "id", Language, "id", 2, {'id': 2, 'name': 'jp'} ) 
    knowledge_knowledge_27.genre_for_url =  importer.locate_object(GenreForURL, "id", GenreForURL, "id", 1, {'id': 1, 'name': 'knowledge'} ) 
    knowledge_knowledge_27.type = 'knowledge'
    knowledge_knowledge_27.notesite_url = 'https://note.com/argumented_world/n/neccb0f809abf'
    knowledge_knowledge_27.article =  importer.locate_object(Article, "id", Article, "id", 6126, {'id': 6126, 'excerpt': '三種の神器が表すものとは？', 'kicker': '三種の神器が表すものとは？', 'content': '<p>中国の有名な古典『論語』の中に、このような話があります。</p>\r\n\r\n<p>子貢という人が先生に、政治とは何かを聞きました。先生は言いました。『食物を十分にし、軍事を十分にし、人民に信用してもらうことだ』</p>\r\n\r\n<p>子貢が聞きました。『もし、やむを得ない理由で、この３つのうちのどれかを諦めなければならないとしたら、どれを先に諦めましょうか』先生は言いました。『まずは、軍事を諦めなさい』。</p>\r\n\r\n<p>さらに子貢が聞きました。『もし、やむを得ない理由で、残りの２つのうちのどちらかを諦めなければならないとしたら、どちらを先に諦めましょうか。』先生は言いました。『食物を諦めなさい。古来から人はみな死ぬ定めにあるが、人民に信頼がなければ国家は成立しないのだから』</p>\r\n\r\n<p>今話題の渋谷栄一は、この言葉に影響を受けて、経営や政治の活動を行ったと言われています。</p>\r\n\r\n<p>現代語訳 論語と算盤 (ちくま新書)</p>\r\n\r\n<p>www.amazon.co.jp</p>\r\n\r\n<p>886円</p>\r\n\r\n<p>(2021年04月24日 17:05時点 詳しくはこちら)</p>\r\n\r\n<p>Amazon.co.jpで購入する</p>\r\n\r\n<p>この話に登場する信頼、軍事、食物ですが、今も天皇家に代々受け継がれている三種の神器が表すものと、めっちゃ似ているんです。</p>\r\n\r\n<p>＊</p>\r\n\r\n<p>古事記によれば、アマテラスはホノニニギが地上を支配するにあたって、鏡と剣と勾玉を授けたとされています。これが三種の神器です。</p>\r\n\r\n<p>鏡と剣と勾玉は、それぞれ宗教、戦争、農業の象徴とされています。</p>\r\n\r\n<p>剣は、もちろん戦争の象徴です。</p>\r\n\r\n<p>鏡は、古事記によればアマテラスが「この鏡は我が御霊（みたま）として私の前で拝むように大切に扱いなさい」 と言って、ホノニニギに授けました。 つまり、鏡はアマテラス自身のたまし霊代（たましろ）であり、直接的に宗教にかかわるものとされています。</p>\r\n\r\n<p>玉についても、アマテラスがイザナギに高見原の支配を命じられた時に授けられたとあり、その玉の名前は御蔵板挙（ミクラタナ）です。タナとは、稲の種を指す言葉で、農業の象徴といえます。</p>\r\n\r\n<p>三種の神器のそれぞれの象徴である、宗教、戦争、農業は、論語に出てくる信頼、軍事、食物と、ほぼ同じものを表していますね。</p>\r\n\r\n<p>＊</p>\r\n\r\n<p>三種の神器のような言い伝えはスキタイ人の言い伝えにも見られます。</p>\r\n\r\n<p>スキタイ人の三点の聖器とは、杯・斧・耕具で、それぞれ宗教（＝王権）・軍事・食料生産の象徴です。</p>\r\n\r\n<p>このように、政治の基礎は、宗教、戦争、農業であるという考え方は、様々な神話や逸話に登場します。</p>\r\n\r\n<p>ということは、政治において大切なのはやはりこの３つなのではないか、という気がしてきますね。</p>\r\n\r\n<p>朝日百科 世界の歴史(1)紀元前の世界</p>\r\n\r\n<p>論語</p>\r\n\r\n<p>Pexels on zhang kaiyv</p>', 'references': '', 'rating': 0.0, 'rating_count': None, 'published_date': dateutil.parser.parse("2023-07-03T02:53:18.366157+00:00"), 'updated_date': dateutil.parser.parse("2023-07-03T02:53:18.372662+00:00")} ) 
    knowledge_knowledge_27.author =  importer.locate_object(UserAccount, "id", UserAccount, "id", 1, {'id': 1, 'password': 'pbkdf2_sha256$600000$Q9AwSzFqEXF1ueS21sGGfz$rZo+NVruXU5Zf5vp00wtuwLn0Z333sn5NtvS8VWKqds=', 'last_login': dateutil.parser.parse("2023-06-30T06:03:10.086511+00:00"), 'is_superuser': True, 'email': 'yurinakanishi33@gmail.com', 'name': 'yuri', 'is_active': True, 'is_staff': True} ) 
    knowledge_knowledge_27 = importer.save_or_locate(knowledge_knowledge_27)

    knowledge_knowledge_28 = Knowledge()
    knowledge_knowledge_28.name = 'What do the three sacred objects represent?'
    knowledge_knowledge_28.slug = 'what-do-the-three-sacred-objects-represent'
    knowledge_knowledge_28.language =  importer.locate_object(Language, "id", Language, "id", 1, {'id': 1, 'name': 'en'} ) 
    knowledge_knowledge_28.genre_for_url =  importer.locate_object(GenreForURL, "id", GenreForURL, "id", 1, {'id': 1, 'name': 'knowledge'} ) 
    knowledge_knowledge_28.type = 'knowledge'
    knowledge_knowledge_28.notesite_url = 'https://note.com/argumented_world/n/neccb0f809abf'
    knowledge_knowledge_28.article =  importer.locate_object(Article, "id", Article, "id", 6127, {'id': 6127, 'excerpt': 'What do the three sacred objects represent?', 'kicker': 'What do the three sacred objects represent?', 'content': '<p>In the famous Chinese classic "The Analects," there is a story like this.</p>\r\n\r\n<p>A man named Zigong asked his teacher what politics was. The teacher said, "It is to have enough food, enough military power, and enough credit to the people. To have enough food, to have enough military power, and to have the people trust you.</p>\r\n\r\n<p>The Tzu-kung asked, "What is politics? If you have to give up any of these three for unavoidable reasons, which one should you give up first? If you have to give up any of the three for unavoidable reasons, which one should you give up first?</p>\r\n\r\n<p>The teacher said, "First of all, give up the military. If, for some unavoidable reason, we must give up one of the other two, which shall we give up first? The teacher said. The teacher said, "Give up food. From ancient times, all men are destined to die, but if the people do not have faith in the nation, the nation will not be established.</p>\r\n\r\n<p>It is said that Eiichi Shibuya, who is now a popular figure in Japan, was influenced by these words in his management and political activities.</p>\r\n\r\n<p>Gendai Goto Translation: Argument and Arithmetic (Chikuma Shinsho)</p>\r\n\r\n<p>www.amazon.co.jp</p>\r\n\r\n<p>886 yen</p>\r\n\r\n<p>(As of April 24, 2021, 17:05, click here for details)</p>\r\n\r\n<p>Buy at Amazon.co.jp</p>\r\n\r\n<p>The trust, military, and food in this story are very similar to what the three sacred treasures that have been handed down from generation to generation in the Emperor\'s family still represent.</p>\r\n\r\n<p>* The three sacred objects are</p>\r\n\r\n<p>According to the Kojiki, Amaterasu gave Hononinigi a mirror, a sword, and a jeweled object when he took control of the earth. These are the three sacred objects.</p>\r\n\r\n<p>The mirror, sword, and amulet are symbols of religion, war, and agriculture, respectively.</p>\r\n\r\n<p>The sword, of course, is a symbol of war.</p>\r\n\r\n<p>According to the Kojiki, Amaterasu gave the mirror to Hononinigi, saying, "Treat this mirror with great care, as if you were worshipping it in my presence as my spirit (mittama). In other words, the mirror was Amaterasu\'s own tamashiro, and was directly related to religion.</p>\r\n\r\n<p>The balls were also given to Amaterasu when she was ordered by Izanagi to rule Takamihara, and their name is Mikuratana. The word "tana" refers to the seed of rice, and is a symbol of agriculture.</p>\r\n\r\n<p>The symbols of each of the three sacred objects-religion, war, and agriculture-represent almost the same things as trust, military affairs, and food in the Analects.</p>\r\n\r\n<p>*</p>\r\n\r\n<p>A similar lore of the three sacred vessels is also found in Scythian lore.</p>\r\n\r\n<p>The three sacred vessels of the Scythians are the cup, the axe, and the plow, symbols of religion (i.e., kingship), military affairs, and food production, respectively.</p>\r\n\r\n<p>Thus, the idea that the basis of politics is religion, war, and agriculture appears in various myths and anecdotes.</p>\r\n\r\n<p>So, it seems to me that these three are still important in politics.</p>\r\n\r\n<p></p>', 'references': '', 'rating': 0.0, 'rating_count': None, 'published_date': dateutil.parser.parse("2023-07-03T02:53:18.366157+00:00"), 'updated_date': dateutil.parser.parse("2023-07-03T02:53:18.372662+00:00")} ) 
    knowledge_knowledge_28.author =  importer.locate_object(UserAccount, "id", UserAccount, "id", 1, {'id': 1, 'password': 'pbkdf2_sha256$600000$Q9AwSzFqEXF1ueS21sGGfz$rZo+NVruXU5Zf5vp00wtuwLn0Z333sn5NtvS8VWKqds=', 'last_login': dateutil.parser.parse("2023-06-30T06:03:10.086511+00:00"), 'is_superuser': True, 'email': 'yurinakanishi33@gmail.com', 'name': 'yuri', 'is_active': True, 'is_staff': True} ) 
    knowledge_knowledge_28 = importer.save_or_locate(knowledge_knowledge_28)

    knowledge_knowledge_29 = Knowledge()
    knowledge_knowledge_29.name = 'シャトルって何？'
    knowledge_knowledge_29.slug = 'whats-a-shuttle-jp'
    knowledge_knowledge_29.language =  importer.locate_object(Language, "id", Language, "id", 2, {'id': 2, 'name': 'jp'} ) 
    knowledge_knowledge_29.genre_for_url =  importer.locate_object(GenreForURL, "id", GenreForURL, "id", 1, {'id': 1, 'name': 'knowledge'} ) 
    knowledge_knowledge_29.type = 'knowledge'
    knowledge_knowledge_29.notesite_url = 'https://note.com/argumented_world/n/n459e6626bbb3'
    knowledge_knowledge_29.article =  importer.locate_object(Article, "id", Article, "id", 6128, {'id': 6128, 'excerpt': 'シャトルって何？', 'kicker': 'シャトルって何？', 'content': '<p>世の中には「シャトル」と付く単語がいくつもあります。</p>\r\n\r\n<p>スペースシャトル、バドミントンのシャトルコック、体力測定でおなじみのシャトルラン、観光地やイベントでよくあるシャトルバスなどです。</p>\r\n\r\n<p>この「シャトル（shuttle）」という言葉は、機織りに使われる道具のことです。機織りでは、たて糸とよこ糸を交互に織り込んで布地を作りますが、そのときのよこ糸を通すのに使われるのがシャトルです。日本語では、「杼（ひ）」とか「かい」とも言われるそうです。</p>\r\n\r\n<p>シャトルによこ糸を巻き付けて往復させることで、糸を編んでいきます。</p>\r\n\r\n<p>シャトル説明</p>\r\n\r\n<p>シャトルの往復</p>\r\n\r\n<p>この動画を見て頂くとわかりやすいかと思います。</p>\r\n\r\n<p></p>\r\n\r\n<p>シャトルが行ったり来たり往復しています。この動きからシャトルという言葉は、「往復するもの」という意味で使われるようになりました。</p>\r\n\r\n<p>＊</p>\r\n\r\n<p>スペースシャトルは、宇宙と地球を往復するもの。</p>\r\n\r\n<p>シャトルバスは、短い周期で往復するバスのこと。</p>\r\n\r\n<p>シャトルコックは、バドミントンにおいてネットを挟んで往復させるもの。</p>\r\n\r\n<p>シャトルランは、往復しながらタイムを計る競技。</p>\r\n\r\n<p>ということです。</p>\r\n\r\n<p>＊</p>\r\n\r\n<p>今では機織りをすることは滅多にないです。しかし、織物の道具の名前が色んな単語に引用されていることから、昔において織物は日々の生活と密接に関わっていたことがわかります。</p>\r\n\r\n<p>シャトル (織物) - Wikipedia</p>\r\n\r\n<p>ja.wikipedia.org</p>\r\n\r\n<p>使用させて頂いた画像</p>\r\n\r\n<p>WikiImages on Pixabay</p>\r\n\r\n<p>Kelly Lacy on Pexels</p>', 'references': '', 'rating': 0.0, 'rating_count': None, 'published_date': dateutil.parser.parse("2023-07-03T02:53:18.366157+00:00"), 'updated_date': dateutil.parser.parse("2023-07-03T02:53:18.372662+00:00")} ) 
    knowledge_knowledge_29.author =  importer.locate_object(UserAccount, "id", UserAccount, "id", 1, {'id': 1, 'password': 'pbkdf2_sha256$600000$Q9AwSzFqEXF1ueS21sGGfz$rZo+NVruXU5Zf5vp00wtuwLn0Z333sn5NtvS8VWKqds=', 'last_login': dateutil.parser.parse("2023-06-30T06:03:10.086511+00:00"), 'is_superuser': True, 'email': 'yurinakanishi33@gmail.com', 'name': 'yuri', 'is_active': True, 'is_staff': True} ) 
    knowledge_knowledge_29 = importer.save_or_locate(knowledge_knowledge_29)

    knowledge_knowledge_30 = Knowledge()
    knowledge_knowledge_30.name = ' Whats a shuttle?'
    knowledge_knowledge_30.slug = 'whats-a-shuttle'
    knowledge_knowledge_30.language =  importer.locate_object(Language, "id", Language, "id", 1, {'id': 1, 'name': 'en'} ) 
    knowledge_knowledge_30.genre_for_url =  importer.locate_object(GenreForURL, "id", GenreForURL, "id", 1, {'id': 1, 'name': 'knowledge'} ) 
    knowledge_knowledge_30.type = 'knowledge'
    knowledge_knowledge_30.notesite_url = 'https://note.com/argumented_world/n/n9673f6527eef'
    knowledge_knowledge_30.article =  importer.locate_object(Article, "id", Article, "id", 6129, {'id': 6129, 'excerpt': ' Whats a shuttle?', 'kicker': ' Whats a shuttle?', 'content': '<p>There are a number of words in the world with the word "shuttle" attached to them.</p>\r\n\r\n<p>These include the space shuttle, the badminton shuttlecock, the familiar shuttle run for physical fitness, and the shuttle buses often seen at tourist attractions and events.</p>\r\n\r\n<p>The word "shuttle" refers to a tool used in weaving. In weaving, the warp and weft yarns are woven alternately to make fabric, and the shuttle is used to thread the weft yarns. In Japanese, it is also called a "杼 (杼)" or "かい (かい).</p>\r\n\r\n<p>The weft is wound around the shuttle and passed back and forth to weave the threads.</p>\r\n\r\n<p>Explanation of the shuttle</p>\r\n\r\n<p>The shuttle shuttles back and forth</p>\r\n\r\n<p>This video will make it easier to understand.</p>\r\n\r\n<p>The shuttle is moving back and forth, back and forth. The word "shuttle" comes to mean "something that goes back and forth" because of this movement.</p>\r\n\r\n<p>The space shuttle is a shuttle that travels back and forth between space and Earth.</p>\r\n\r\n<p>The space shuttle shuttles back and forth between space and earth.</p>\r\n\r\n<p>A shuttle bus is a bus that travels back and forth in a short cycle.</p>\r\n\r\n<p>A shuttlecock is a badminton ball played back and forth across a net.</p>\r\n\r\n<p>Shuttle run is a competition in which the time is measured while running back and forth.</p>\r\n\r\n<p>This is the same as "shuttlecock" in badminton.</p>\r\n\r\n<p>Nowadays, weaving is seldom done. However, the names of weaving tools are quoted in many words, indicating that weaving was closely related to daily life in the past.</p>\r\n\r\n<p>References and other articles</p>\r\n\r\n<p></p>', 'references': '', 'rating': 0.0, 'rating_count': None, 'published_date': dateutil.parser.parse("2023-07-03T02:53:18.366157+00:00"), 'updated_date': dateutil.parser.parse("2023-07-03T02:53:18.372662+00:00")} ) 
    knowledge_knowledge_30.author =  importer.locate_object(UserAccount, "id", UserAccount, "id", 1, {'id': 1, 'password': 'pbkdf2_sha256$600000$Q9AwSzFqEXF1ueS21sGGfz$rZo+NVruXU5Zf5vp00wtuwLn0Z333sn5NtvS8VWKqds=', 'last_login': dateutil.parser.parse("2023-06-30T06:03:10.086511+00:00"), 'is_superuser': True, 'email': 'yurinakanishi33@gmail.com', 'name': 'yuri', 'is_active': True, 'is_staff': True} ) 
    knowledge_knowledge_30 = importer.save_or_locate(knowledge_knowledge_30)

    knowledge_knowledge_31 = Knowledge()
    knowledge_knowledge_31.name = 'ウイルスが全く検出できない【増殖過程の暗黒期】'
    knowledge_knowledge_31.slug = 'virus-not-detectable-at-all-dark-period-of-the-multiplication-process-jp'
    knowledge_knowledge_31.language =  importer.locate_object(Language, "id", Language, "id", 2, {'id': 2, 'name': 'jp'} ) 
    knowledge_knowledge_31.genre_for_url =  importer.locate_object(GenreForURL, "id", GenreForURL, "id", 1, {'id': 1, 'name': 'knowledge'} ) 
    knowledge_knowledge_31.type = 'knowledge'
    knowledge_knowledge_31.notesite_url = 'https://note.com/argumented_world/n/nb7728fc11af5'
    knowledge_knowledge_31.article =  importer.locate_object(Article, "id", Article, "id", 6130, {'id': 6130, 'excerpt': 'ウイルスが全く検出できない【増殖過程の暗黒期】', 'kicker': 'ウイルスが全く検出できない【増殖過程の暗黒期】', 'content': '<p>細菌とウイルスの一番の違いは、その増殖方法です。 細菌は細胞を持つので、自身のみで増殖できます。一方、ウイルスは細胞ではないため、自力では増殖できず、他の細胞に入り込むことにより、はじめて増殖できます。ウイルスが細胞の中に入ってから増殖して細胞の外に出てくるまでの間には、まるでウイルスが存在しないように見える時期があります。この時期は暗黒期（eclipse：エクリプス）や潜伏期とよばれ、期間はウイルスや宿主細胞の種類にもよりますが、数時間から十数時間です。</p>\r\n\r\n<p>この時に何が起っているかというと、細胞の中で親のウイルス粒子がいったんバラバラになっており、子供のウイルス粒子を組み立てています。 なのでウイルスに暴露したり感染した場合、翌日にどんなに感度の高い遺伝子増幅検査（PCR法やLAMP法など）をしてもウイルス遺伝子を検出できる可能性は極めて低いです。その後、増殖した子供のウイルスが細胞から放出されてから、ウイルスは検出できるようになります。ここからウイルスは爆発的に増えていきます。まさに、嵐の前の静けさですね。</p>\r\n\r\n<p>『ウイルスの意味論――生命の定義を超えた存在』山内 一也 (著)</p>\r\n\r\n<p>(1)ウイルスの生態｜ウイルス学エピソード｜神奈川県衛生研究所</p>\r\n\r\n<p>www.eiken.pref.kanagawa.jp</p>\r\n\r\n<p>「コロナ禍」： 収束しても油断は禁物 --- そもそもウイルスとは？</p>\r\n\r\n<p>www.toho-u.ac.jp</p>\r\n\r\n<p>使用させて頂いた画像</p>\r\n\r\n<p>vaddi77 on Fricker</p>', 'references': '', 'rating': 0.0, 'rating_count': None, 'published_date': dateutil.parser.parse("2023-07-03T02:53:18.366157+00:00"), 'updated_date': dateutil.parser.parse("2023-07-03T02:53:18.372662+00:00")} ) 
    knowledge_knowledge_31.author =  importer.locate_object(UserAccount, "id", UserAccount, "id", 1, {'id': 1, 'password': 'pbkdf2_sha256$600000$Q9AwSzFqEXF1ueS21sGGfz$rZo+NVruXU5Zf5vp00wtuwLn0Z333sn5NtvS8VWKqds=', 'last_login': dateutil.parser.parse("2023-06-30T06:03:10.086511+00:00"), 'is_superuser': True, 'email': 'yurinakanishi33@gmail.com', 'name': 'yuri', 'is_active': True, 'is_staff': True} ) 
    knowledge_knowledge_31 = importer.save_or_locate(knowledge_knowledge_31)

    knowledge_knowledge_32 = Knowledge()
    knowledge_knowledge_32.name = 'Virus not detectable at all dark period of the multiplication process'
    knowledge_knowledge_32.slug = 'virus-not-detectable-at-all-dark-period-of-the-multiplication-process'
    knowledge_knowledge_32.language =  importer.locate_object(Language, "id", Language, "id", 1, {'id': 1, 'name': 'en'} ) 
    knowledge_knowledge_32.genre_for_url =  importer.locate_object(GenreForURL, "id", GenreForURL, "id", 1, {'id': 1, 'name': 'knowledge'} ) 
    knowledge_knowledge_32.type = 'knowledge'
    knowledge_knowledge_32.notesite_url = 'https://note.com/argumented_world/n/nb7728fc11af5'
    knowledge_knowledge_32.article =  importer.locate_object(Article, "id", Article, "id", 6131, {'id': 6131, 'excerpt': 'Virus not detectable at all dark period of the multiplication process', 'kicker': 'Virus not detectable at all dark period of the multiplication process', 'content': '<p>The most important difference between bacteria and viruses is the way they multiply.</p>\r\n\r\n<p>Bacteria have cells and can multiply only by themselves.</p>\r\n\r\n<p>Viruses, on the other hand, are not cells and cannot multiply on their own.</p>\r\n\r\n<p>During the period between the time a virus enters a cell and the time it multiplies and emerges from the cell, there is a period when it appears as if the virus does not exist.</p>\r\n\r\n<p>This period is called the "eclipse" or "incubation period" and lasts from a few hours to a dozen hours, depending on the type of virus and host cell.</p>\r\n\r\n<p>What happens during this time is that the parent viral particles are disassembled in the cell and the offspring viral particles are assembled.</p>\r\n\r\n<p>Therefore, in the case of exposure or infection, no matter how sensitive a gene amplification test (PCR, LAMP, etc.) is the next day, the likelihood of detecting the viral gene is extremely low.</p>\r\n\r\n<p>Subsequently, the virus becomes detectable only after the proliferating child virus is released from the cells. From this point on, the virus explodes.</p>\r\n\r\n<p>It is truly the calm before the storm.</p>\r\n\r\n<p></p>', 'references': '', 'rating': 0.0, 'rating_count': None, 'published_date': dateutil.parser.parse("2023-07-03T02:53:18.366157+00:00"), 'updated_date': dateutil.parser.parse("2023-07-03T02:53:18.372662+00:00")} ) 
    knowledge_knowledge_32.author =  importer.locate_object(UserAccount, "id", UserAccount, "id", 1, {'id': 1, 'password': 'pbkdf2_sha256$600000$Q9AwSzFqEXF1ueS21sGGfz$rZo+NVruXU5Zf5vp00wtuwLn0Z333sn5NtvS8VWKqds=', 'last_login': dateutil.parser.parse("2023-06-30T06:03:10.086511+00:00"), 'is_superuser': True, 'email': 'yurinakanishi33@gmail.com', 'name': 'yuri', 'is_active': True, 'is_staff': True} ) 
    knowledge_knowledge_32 = importer.save_or_locate(knowledge_knowledge_32)

    knowledge_knowledge_33 = Knowledge()
    knowledge_knowledge_33.name = 'ギプスと豆腐の意外なつながり'
    knowledge_knowledge_33.slug = 'unexpected-connection-between-casts-and-tofu-jp'
    knowledge_knowledge_33.language =  importer.locate_object(Language, "id", Language, "id", 2, {'id': 2, 'name': 'jp'} ) 
    knowledge_knowledge_33.genre_for_url =  importer.locate_object(GenreForURL, "id", GenreForURL, "id", 1, {'id': 1, 'name': 'knowledge'} ) 
    knowledge_knowledge_33.type = 'knowledge'
    knowledge_knowledge_33.notesite_url = 'https://note.com/argumented_world/n/n0a75ae3cb2d8'
    knowledge_knowledge_33.article =  importer.locate_object(Article, "id", Article, "id", 6132, {'id': 6132, 'excerpt': 'ギプスと豆腐の意外なつながり', 'kicker': 'ギプスと豆腐の意外なつながり', 'content': '<p>石膏は硫酸カルシウムが主成分の鉱物です。今回は石膏の用途を紹介します。</p>\r\n\r\n<p>画像2</p>\r\n\r\n<p>メキシコ産の石膏の結晶</p>\r\n\r\n<p>彫刻</p>\r\n\r\n<p>石膏は古来から多くの彫刻に使われてきました。しかし、水に溶けてしまうので、主に屋内の彫刻に使われています。</p>\r\n\r\n<p>現在は、美術品のレプリカや、美術学生用の手本の彫刻などに使われています。ミケランジェロのダヴィデ像の複製品なども石膏でできているそうです。</p>\r\n\r\n<p>石膏ボード</p>\r\n\r\n<p>石膏は耐火性、防音製に優れているため、板状にして、石膏ボードとして建築にもよく使われています。</p>\r\n\r\n<p>ちなみに、石膏の砂は、日中に太陽が当たっても熱くならないそうです。</p>\r\n\r\n<p>画像2</p>\r\n\r\n<p>石膏の砂（アメリカ、ユタ州）</p>\r\n\r\n<p>ギプス</p>\r\n\r\n<p>骨折したときに腕を固定しておくときに使われるギプスは、焼き石膏を含んだ包帯でできています。</p>\r\n\r\n<p>1800年代に、焼き石膏の包帯が使われるようになり、その後、骨折を治療する標準的な方法となりました。</p>\r\n\r\n<p>豆腐の凝固剤</p>\r\n\r\n<p>豆腐の凝固剤にはよくにがりが使われます。凝固剤には他にも様々なものがありますが、その一つが石膏から作られる硫酸カルシウムです。</p>\r\n\r\n<p>海水から取れるにがりは、海に囲まれている日本では豆腐の凝固剤としてよく使われてきました。</p>\r\n\r\n<p>しかし日本が第二次世界大戦に参戦すると、にがりは軍事用に調達されるようになりました。というのは、にがりに含まれる塩化マグネシウムが戦闘機などを作る際の金属加工に必要で、軍事物資に指定されたためです。</p>\r\n\r\n<p>このような背景により、豆腐に使うにがりが不足した結果、代わりのものとして硫酸カルシウムが使われるようになりました。</p>\r\n\r\n<p>現代では、海由来のにがりは健康に良さそうと言うことで、凝固剤に硫酸カルシウムはあまり使われていません。</p>\r\n\r\n<p>http://www7b.biglobe.ne.jp/~rakusyotei/daizu23.html’</p>\r\n\r\n<p>「図説世界史を変えた50の鉱物』 エリック・シャリーン 96</p>\r\n\r\n<p>hanul choi Pixabay</p>\r\n\r\n<p>Gypsum (Naica, Chihuahua, Mexico) 2 (49206439538).jpg</p>\r\n\r\n<p>Eolian gypsum sand (Holocene; White Mountain, Black Rock Desert, Utah, USA) 3 (49098339396).jpg</p>', 'references': '', 'rating': 0.0, 'rating_count': None, 'published_date': dateutil.parser.parse("2023-07-03T02:53:18.366157+00:00"), 'updated_date': dateutil.parser.parse("2023-07-03T02:53:18.372662+00:00")} ) 
    knowledge_knowledge_33.author =  importer.locate_object(UserAccount, "id", UserAccount, "id", 1, {'id': 1, 'password': 'pbkdf2_sha256$600000$Q9AwSzFqEXF1ueS21sGGfz$rZo+NVruXU5Zf5vp00wtuwLn0Z333sn5NtvS8VWKqds=', 'last_login': dateutil.parser.parse("2023-06-30T06:03:10.086511+00:00"), 'is_superuser': True, 'email': 'yurinakanishi33@gmail.com', 'name': 'yuri', 'is_active': True, 'is_staff': True} ) 
    knowledge_knowledge_33 = importer.save_or_locate(knowledge_knowledge_33)

    knowledge_knowledge_34 = Knowledge()
    knowledge_knowledge_34.name = 'Unexpected connection between casts and tofu'
    knowledge_knowledge_34.slug = 'unexpected-connection-between-casts-and-tofu'
    knowledge_knowledge_34.language =  importer.locate_object(Language, "id", Language, "id", 1, {'id': 1, 'name': 'en'} ) 
    knowledge_knowledge_34.genre_for_url =  importer.locate_object(GenreForURL, "id", GenreForURL, "id", 1, {'id': 1, 'name': 'knowledge'} ) 
    knowledge_knowledge_34.type = 'knowledge'
    knowledge_knowledge_34.notesite_url = 'https://note.com/argumented_world/n/n0a75ae3cb2d8'
    knowledge_knowledge_34.article =  importer.locate_object(Article, "id", Article, "id", 6133, {'id': 6133, 'excerpt': 'Unexpected connection between casts and tofu', 'kicker': 'Unexpected connection between casts and tofu', 'content': "<p>Gypsum is a mineral composed primarily of calcium sulfate. In this article, we will introduce the uses of gypsum.</p>\r\n\r\n<p>Image 2</p>\r\n\r\n<p>Gypsum crystals from Mexico</p>\r\n\r\n<p>Sculpture</p>\r\n\r\n<p>Gypsum has been used in many sculptures since ancient times. However, since it dissolves in water, it is mainly used for indoor sculptures.</p>\r\n\r\n<p>Today, it is used to make replicas of works of art and model sculptures for art students. Reproductions of Michelangelo's David, for example, are also made of plaster.</p>\r\n\r\n<p>Plasterboard</p>\r\n\r\n<p>Gypsum is excellent in fire resistance and soundproofing, so it is often made into boards and used in construction as plasterboard.</p>\r\n\r\n<p>Incidentally, plaster sand does not get hot even when exposed to the sun during the day.</p>\r\n\r\n<p>Image 2</p>\r\n\r\n<p>Sand of plaster (Utah, U.S.A.)</p>\r\n\r\n<p>Plaster cast</p>\r\n\r\n<p>A cast, used to immobilize a broken arm, is made of a bandage containing baked plaster.</p>\r\n\r\n<p>Baked plaster bandages came into use in the 1800s and have since become the standard method of treating fractures.</p>\r\n\r\n<p>Tofu Coagulant</p>\r\n\r\n<p>Bittern is often used as a coagulant for tofu. There are many other coagulants, one of which is calcium sulfate, made from gypsum.</p>\r\n\r\n<p>Nigari, which is derived from seawater, has often been used as a coagulant for tofu in Japan, which is surrounded by the sea.</p>\r\n\r\n<p>However, after Japan entered World War II, bittern was procured for military use. This was because the magnesium chloride contained in nigari was needed for metalworking in the manufacture of fighter planes and other aircraft, and was designated as a military material.</p>\r\n\r\n<p>As a result of this background, bittern for tofu became scarce, and calcium sulfate was used as a substitute.</p>\r\n\r\n<p>Today, calcium sulfate is not often used as a coagulant because bittern derived from the sea seems to be healthier.</p>\r\n\r\n<p></p>", 'references': '', 'rating': 0.0, 'rating_count': None, 'published_date': dateutil.parser.parse("2023-07-03T02:53:18.366157+00:00"), 'updated_date': dateutil.parser.parse("2023-07-03T02:53:18.372662+00:00")} ) 
    knowledge_knowledge_34.author =  importer.locate_object(UserAccount, "id", UserAccount, "id", 1, {'id': 1, 'password': 'pbkdf2_sha256$600000$Q9AwSzFqEXF1ueS21sGGfz$rZo+NVruXU5Zf5vp00wtuwLn0Z333sn5NtvS8VWKqds=', 'last_login': dateutil.parser.parse("2023-06-30T06:03:10.086511+00:00"), 'is_superuser': True, 'email': 'yurinakanishi33@gmail.com', 'name': 'yuri', 'is_active': True, 'is_staff': True} ) 
    knowledge_knowledge_34 = importer.save_or_locate(knowledge_knowledge_34)

    knowledge_knowledge_35 = Knowledge()
    knowledge_knowledge_35.name = '多くものを買わせるために【計画的陳腐化とモデルチェンジ】'
    knowledge_knowledge_35.slug = 'to-make-people-buy-more-things-planned-obsolescence-and-model-changes-jp'
    knowledge_knowledge_35.language =  importer.locate_object(Language, "id", Language, "id", 2, {'id': 2, 'name': 'jp'} ) 
    knowledge_knowledge_35.genre_for_url =  importer.locate_object(GenreForURL, "id", GenreForURL, "id", 1, {'id': 1, 'name': 'knowledge'} ) 
    knowledge_knowledge_35.type = 'knowledge'
    knowledge_knowledge_35.notesite_url = 'https://note.com/argumented_world/n/n4988ac2cca9a'
    knowledge_knowledge_35.article =  importer.locate_object(Article, "id", Article, "id", 6134, {'id': 6134, 'excerpt': '多くものを買わせるために【計画的陳腐化とモデルチェンジ】', 'kicker': '多くものを買わせるために【計画的陳腐化とモデルチェンジ】', 'content': '<p>マーケティングとは、簡単に言ってしまえば、消費者に物を買わせる戦略のことです。古くから多くの企業が、何とか売り上げを伸ばすために様々なマーケティングを行っています。 マーケティングの例を２つ紹介します。</p>\r\n\r\n<p>自動車とモデルチェンジ</p>\r\n\r\n<p>1954年代、自動車メーカーはモデルチェンジとして、新車を毎年発表していました。新車は外見こそ前年度のモデルと全く違っていても、技術的な観点から見ればほとんど同じでした。このモデルチェンジは、人々の購買意欲をかき立てる巧みな戦略です。この手法は、現在のスマートフォン産業にも当てはまります。 毎年行われる短期間のモデルチェンジには、技術革新を速やかに製品に反映させるというメリットもあったようです。</p>\r\n\r\n<p>電球と計画的陳腐化</p>\r\n\r\n<p>電球の発明から約100年後の1924年、ポイボス・カルテルとよばれる白熱電球の生産と販売を支配するために結ばれた国際的な企業協約がひそかに結ばれました。 カルテルの参加企業では、白熱電球の寿命が1000時間を越えないようにするという計画的陳腐化が世界規模で実行されました。消費者に電球をたくさん買い替えさせることによって電球の売り上げを伸ばすためです。これにより、約20年間、電球産業における正当な競争を減少させ、寿命の長い電球を製造するための技術開発を妨げたといわれています。</p>\r\n\r\n<p>21世紀</p>\r\n\r\n<p>21世紀、今や世界はかつてないほど劇的、あるいは急激に変化しているという言葉が聞かれますが、その原因の一つは、現代がマーケティングの時代だからといえます。 企業が短期間で新商品を出すので、自分たちの時代は、ほかの時代よりも急激に変化しているという錯覚に陥っているのではないでしょうか。 もちろん21世紀には多くの画期的な発明や発見があります。しかし産業革命が起こった19世紀にも、電話、内燃機関（自動車の動力）、蓄音機、写真、白熱電球、透明フィルム、トイレットペーパー、万年筆、有刺鉄線、マシンガン、食洗機、ミシン、ダイナマイト、ラジオ、掃除機、エアコンなど。20世紀にも、飛行機、プラスチック、セロファン、など多くの発明がありました。</p>\r\n\r\n<p>現在でも、電化製品では計画的陳腐化により、顧客が新製品を購入せざるをえないように、製品寿命が故意に短く設計されていることがあります。そして毎年発表される新製品は、実際には旧モデルと大差なくても、あたかも最新の重要な機能が装備されているかのように宣伝されます。それは、本当にあなたが欲しいものなのでしょうか？それとも、企業に欲しいと思わされているものなのでしょうか？</p>\r\n\r\n<p>『 紙の世界史: PAPER 歴史に突き動かされた技術』マーク カーランスキー(著)\u3000川副 智子 (翻訳)\u3000徳間書店</p>\r\n\r\n<p>計画的陳腐化 - Wikipedia</p>\r\n\r\n<p>ja.wikipedia.org</p>\r\n\r\n<p>ポイボス・カルテル - Wikipedia</p>\r\n\r\n<p>ja.wikipedia.org</p>\r\n\r\n<p>使用させて頂いた画像</p>\r\n\r\n<p>Comfreak on Pixabay</p>', 'references': '', 'rating': 0.0, 'rating_count': None, 'published_date': dateutil.parser.parse("2023-07-03T02:53:18.366157+00:00"), 'updated_date': dateutil.parser.parse("2023-07-03T02:53:18.372662+00:00")} ) 
    knowledge_knowledge_35.author =  importer.locate_object(UserAccount, "id", UserAccount, "id", 1, {'id': 1, 'password': 'pbkdf2_sha256$600000$Q9AwSzFqEXF1ueS21sGGfz$rZo+NVruXU5Zf5vp00wtuwLn0Z333sn5NtvS8VWKqds=', 'last_login': dateutil.parser.parse("2023-06-30T06:03:10.086511+00:00"), 'is_superuser': True, 'email': 'yurinakanishi33@gmail.com', 'name': 'yuri', 'is_active': True, 'is_staff': True} ) 
    knowledge_knowledge_35 = importer.save_or_locate(knowledge_knowledge_35)

    knowledge_knowledge_36 = Knowledge()
    knowledge_knowledge_36.name = 'To make people buy more things [planned obsolescence and model changes].'
    knowledge_knowledge_36.slug = 'to-make-people-buy-more-things-planned-obsolescence-and-model-changes'
    knowledge_knowledge_36.language =  importer.locate_object(Language, "id", Language, "id", 1, {'id': 1, 'name': 'en'} ) 
    knowledge_knowledge_36.genre_for_url =  importer.locate_object(GenreForURL, "id", GenreForURL, "id", 1, {'id': 1, 'name': 'knowledge'} ) 
    knowledge_knowledge_36.type = 'knowledge'
    knowledge_knowledge_36.notesite_url = 'https://note.com/argumented_world/n/n4988ac2cca9a'
    knowledge_knowledge_36.article =  importer.locate_object(Article, "id", Article, "id", 6135, {'id': 6135, 'excerpt': 'To make people buy more things [planned obsolescence and model changes].', 'kicker': 'To make people buy more things [planned obsolescence and model changes].', 'content': "<p>Marketing</p>\r\n\r\n<p>Marketing, simply put, is a strategy to get consumers to buy things. Since ancient times, many companies have been engaged in various marketing activities in order to somehow increase sales.</p>\r\n\r\n<p>Here are two examples of marketing</p>\r\n\r\n<p>Automobiles and Model Changes</p>\r\n\r\n<p>In the 1954s, automakers introduced a new car every year as a model change. The new car might look completely different from the previous year's model, but from a technical point of view it was virtually identical.</p>\r\n\r\n<p>This model change is a clever strategy to motivate people to buy. This approach applies to the current smartphone industry as well.</p>\r\n\r\n<p>The short period of model changeover each year seems to have had the advantage of reflecting technological innovations in products quickly.</p>\r\n\r\n<p>The Light Bulb and Planned Obsolescence</p>\r\n\r\n<p>In 1924, about 100 years after the invention of the light bulb, an international business agreement was secretly concluded to control the production and sale of incandescent light bulbs, known as the Poivos Cartel.</p>\r\n\r\n<p>Companies participating in the cartel implemented a worldwide program of planned obsolescence in which the life of an incandescent light bulb was not to exceed 1,000 hours. The purpose was to increase sales of light bulbs by forcing consumers to buy more bulbs.</p>\r\n\r\n<p>This is said to have reduced legitimate competition in the light bulb industry for about 20 years and prevented the development of technologies to produce longer-lasting bulbs.</p>\r\n\r\n<p>The 21st Century</p>\r\n\r\n<p>In the 21st century, we hear people say that the world is now changing more dramatically or more rapidly than ever before, and one of the reasons for this can be attributed to the fact that today is the age of marketing.</p>\r\n\r\n<p>Because companies are launching new products in a short period of time, we may be under the illusion that our era is changing more rapidly than other eras.</p>\r\n\r\n<p>Of course, the 21st century has seen many groundbreaking inventions and discoveries. But even in the 19th century, when the Industrial Revolution took place, we had the telephone, the internal combustion engine (powering automobiles), the phonograph, photography, the incandescent light bulb, transparent film, toilet paper, fountain pens, barbed wire, machine guns, dishwashers, sewing machines, dynamite, radios, vacuum cleaners, and air conditioners. fan, and many other inventions in the 20th century.</p>\r\n\r\n<p>The 20th century also saw the invention of the airplane, plastic, cellophane, and many others.</p>\r\n\r\n<p>Even today, electrical appliances are sometimes designed with deliberately short product life spans so that planned obsolescence will force customers to buy new products.</p>\r\n\r\n<p>New products are introduced every year and advertised as if they are equipped with the latest and most important features, when in fact they are not much different from older models.</p>\r\n\r\n<p>Is it something you really want? Or is it what the company wants you to think you want?</p>\r\n\r\n<p></p>", 'references': '', 'rating': 0.0, 'rating_count': None, 'published_date': dateutil.parser.parse("2023-07-03T02:53:18.366157+00:00"), 'updated_date': dateutil.parser.parse("2023-07-03T02:53:18.372662+00:00")} ) 
    knowledge_knowledge_36.author =  importer.locate_object(UserAccount, "id", UserAccount, "id", 1, {'id': 1, 'password': 'pbkdf2_sha256$600000$Q9AwSzFqEXF1ueS21sGGfz$rZo+NVruXU5Zf5vp00wtuwLn0Z333sn5NtvS8VWKqds=', 'last_login': dateutil.parser.parse("2023-06-30T06:03:10.086511+00:00"), 'is_superuser': True, 'email': 'yurinakanishi33@gmail.com', 'name': 'yuri', 'is_active': True, 'is_staff': True} ) 
    knowledge_knowledge_36 = importer.save_or_locate(knowledge_knowledge_36)

    knowledge_knowledge_37 = Knowledge()
    knowledge_knowledge_37.name = '飛行機の中ではトマトジュースがおいしいらしい'
    knowledge_knowledge_37.slug = 'they-say-tomato-juice-tastes-good-on-an-airplane-jp'
    knowledge_knowledge_37.language =  importer.locate_object(Language, "id", Language, "id", 2, {'id': 2, 'name': 'jp'} ) 
    knowledge_knowledge_37.genre_for_url =  importer.locate_object(GenreForURL, "id", GenreForURL, "id", 1, {'id': 1, 'name': 'knowledge'} ) 
    knowledge_knowledge_37.type = 'knowledge'
    knowledge_knowledge_37.notesite_url = 'https://note.com/argumented_world/n/n51e4d3c24e6a'
    knowledge_knowledge_37.article =  importer.locate_object(Article, "id", Article, "id", 6136, {'id': 6136, 'excerpt': '飛行機の中ではトマトジュースがおいしいらしい', 'kicker': '飛行機の中ではトマトジュースがおいしいらしい', 'content': '<p>皆さんは飛行機の中で何を食べますか？何を飲まれますか？ そして、なんか飛行機の食事はいまいちだな、などと感じたことはありませんか？ フライト中の環境は、味覚に悪い影響を与えることが分かっています。原因は主に3つあります。騒音・低気圧・乾燥です。順番に見ていきましょう。</p>\r\n\r\n<p>騒音</p>\r\n\r\n<p>騒音の中では、甘みが感じにくくなり、うまみが感じやすくなる（酸味、苦み、塩見は変わらない）という研究結果があります。トマトジュースは、上空で飲まれる飲み物の24％を占めているそうです。また、1000人を超える調査によれば、23％の人が地上ではトマトジュースを決して飲まないのに、飛行機では飲むと回答したそうです。 理由は、トマトジュースにはうまみ成分が多く含まれており、上空ではうまみを感じやすくなるからです。なので機内食では、砂糖と塩の量を増やしてい甘みを感じやすいようにしているそうです。その分カロリーが高くなっているので、機内食でのカロリーの取り過ぎには注意が必要です。 騒音と味覚の関係の話は、映画館でも聞かれます。映画館のポップコーンは普通のポップコーンよりも濃い味付けがされているらしいです。</p>\r\n\r\n<p>低気圧</p>\r\n\r\n<p>飛行機の気圧はだいたい高度1800mから2500mくらいの大気の圧力と同じくらいになるように調整されています。そのような環境では、甘さ、酸っぱさ、苦さを感じるのが難しくなります。 また、空気圧が下がると、芳香分子が揮発しにくくなり、匂いを感じづらくなります。鼻をつまんでものを食べると味がよく分からなくなるように、嗅覚は味覚に大きく影響を与えるので、匂いをあまり感じないと、味が薄いと感じてしまいます。 あるワイン評論家は、標高が高い地域（アルゼンチンなど）で造られたワインは、地上で飲むよりも飛行機の中で飲む方が美味しいといっています。理由は、高地の環境が機内の環境と似ているからだそうです。</p>\r\n\r\n<p>乾燥</p>\r\n\r\n<p>飛行機内の空気は乾燥しており、20％を下回ることが多いです。空気が乾燥すると、鼻の中が乾燥し、低気圧と同じように芳香分子を取り込みにくくなるので、味を感じづらくなります。あるシェフは、だったら、機内での食事の前には、鼻に水のスプレーを吹きかけて湿らせたらいいんじゃないか、と言っているようです。</p>\r\n\r\n<p>こういったことが分かってきたので、機内食もおいしさを追求して進化しているそうです。皆さんも飛行機の中での食事をお楽しみ下さい。あと、是非上空でトマトジュースを味わってみて下さい！</p>\r\n\r\n<p>『「おいしさ」の錯覚\u3000最新科学でわかった、美味の真実 』チャールズ・スペンス\u3000長谷川 圭</p>\r\n\r\n<p>Pexels Charlotte May</p>', 'references': '', 'rating': 0.0, 'rating_count': None, 'published_date': dateutil.parser.parse("2023-07-03T02:53:18.366157+00:00"), 'updated_date': dateutil.parser.parse("2023-07-03T02:53:18.372662+00:00")} ) 
    knowledge_knowledge_37.author =  importer.locate_object(UserAccount, "id", UserAccount, "id", 1, {'id': 1, 'password': 'pbkdf2_sha256$600000$Q9AwSzFqEXF1ueS21sGGfz$rZo+NVruXU5Zf5vp00wtuwLn0Z333sn5NtvS8VWKqds=', 'last_login': dateutil.parser.parse("2023-06-30T06:03:10.086511+00:00"), 'is_superuser': True, 'email': 'yurinakanishi33@gmail.com', 'name': 'yuri', 'is_active': True, 'is_staff': True} ) 
    knowledge_knowledge_37 = importer.save_or_locate(knowledge_knowledge_37)

    knowledge_knowledge_38 = Knowledge()
    knowledge_knowledge_38.name = 'They say tomato juice tastes good on an airplane.'
    knowledge_knowledge_38.slug = 'they-say-tomato-juice-tastes-good-on-an-airplane'
    knowledge_knowledge_38.language =  importer.locate_object(Language, "id", Language, "id", 1, {'id': 1, 'name': 'en'} ) 
    knowledge_knowledge_38.genre_for_url =  importer.locate_object(GenreForURL, "id", GenreForURL, "id", 1, {'id': 1, 'name': 'knowledge'} ) 
    knowledge_knowledge_38.type = 'knowledge'
    knowledge_knowledge_38.notesite_url = 'https://note.com/argumented_world/n/n51e4d3c24e6a'
    knowledge_knowledge_38.article =  importer.locate_object(Article, "id", Article, "id", 6137, {'id': 6137, 'excerpt': 'They say tomato juice tastes good on an airplane.', 'kicker': 'They say tomato juice tastes good on an airplane.', 'content': "<p>What do you eat on the plane? What do you drink?</p>\r\n\r\n<p>And have you ever had the feeling that the food on the plane is not very good?</p>\r\n\r\n<p>It is known that the flight environment has a negative impact on taste. There are three main causes.</p>\r\n\r\n<p>Noise, low pressure, and dryness.</p>\r\n\r\n<p>Let's take a look at them in order.</p>\r\n\r\n<p>Table of Contents</p>\r\n\r\n<p>Noise</p>\r\n\r\n<p>Low pressure</p>\r\n\r\n<p>Dryness</p>\r\n\r\n<p>Finally</p>\r\n\r\n<p>Reference materials and images used</p>\r\n\r\n<p>Noise</p>\r\n\r\n<p>Studies have shown that in noise, sweetness is less perceptible and umami is more perceptible (acidity, bitterness, and saltiness remain the same).</p>\r\n\r\n<p>Tomato juice accounts for 24% of all drinks consumed in the sky. Also, according to a survey of over 1,000 people, 23% said they would never drink tomato juice on the ground, but would drink it on an airplane.</p>\r\n\r\n<p>The reason is that tomato juice contains a high umami content, which makes it easier to perceive umami in the air.</p>\r\n\r\n<p>Therefore, the amount of sugar and salt is increased in in-flight meals so that the passengers can easily perceive the sweetness of the juice. The amount of sugar and salt is increased in in-flight meals to make them sweeter.</p>\r\n\r\n<p>The story of the relationship between noise and taste is also heard in movie theaters. It is said that popcorn in movie theaters has a stronger flavor than regular popcorn.</p>\r\n\r\n<p>Low Air Pressure</p>\r\n\r\n<p>Airplane air pressure is adjusted to be roughly equal to the atmospheric pressure at an altitude of about 1,800 to 2,500 meters. In such an environment, it is more difficult to perceive sweet, sour, and bitter tastes.</p>\r\n\r\n<p>In addition, as air pressure decreases, aromatic molecules become less volatile, making it difficult to smell them. Just as pinching your nose to eat something makes it harder to taste it, the sense of smell greatly affects the sense of taste, so if you don't smell it as much, you will perceive it as less flavorful.</p>\r\n\r\n<p>One wine critic says that wines made in high altitude regions (such as Argentina) taste better when drunk in an airplane than on the ground. The reason is that the environment at high altitude is similar to that of an airplane cabin.</p>\r\n\r\n<p>Dryness</p>\r\n\r\n<p>The air in airplanes is dry, often below 20%.</p>\r\n\r\n<p>When the air is dry, the inside of the nose dries out and, like low pressure, it is harder to take in aromatic molecules, making it difficult to perceive flavors.</p>\r\n\r\n<p>One chef seems to be saying, if that's the case, why don't you spray your nose with water spray to moisten it before eating on the plane? LOL!</p>\r\n\r\n<p>Finally.</p>\r\n\r\n<p>As we have come to understand these things, in-flight meals are also said to be evolving in the pursuit of good taste. I hope you all enjoy your meals on airplanes.</p>\r\n\r\n<p>Also, please try some tomato juice up in the sky!</p>\r\n\r\n<p></p>", 'references': '', 'rating': 0.0, 'rating_count': None, 'published_date': dateutil.parser.parse("2023-07-03T02:53:18.366157+00:00"), 'updated_date': dateutil.parser.parse("2023-07-03T02:53:18.372662+00:00")} ) 
    knowledge_knowledge_38.author =  importer.locate_object(UserAccount, "id", UserAccount, "id", 1, {'id': 1, 'password': 'pbkdf2_sha256$600000$Q9AwSzFqEXF1ueS21sGGfz$rZo+NVruXU5Zf5vp00wtuwLn0Z333sn5NtvS8VWKqds=', 'last_login': dateutil.parser.parse("2023-06-30T06:03:10.086511+00:00"), 'is_superuser': True, 'email': 'yurinakanishi33@gmail.com', 'name': 'yuri', 'is_active': True, 'is_staff': True} ) 
    knowledge_knowledge_38 = importer.save_or_locate(knowledge_knowledge_38)

    knowledge_knowledge_39 = Knowledge()
    knowledge_knowledge_39.name = '海が酸性化している'
    knowledge_knowledge_39.slug = 'the-ocean-is-acidifying-jp'
    knowledge_knowledge_39.language =  importer.locate_object(Language, "id", Language, "id", 2, {'id': 2, 'name': 'jp'} ) 
    knowledge_knowledge_39.genre_for_url =  importer.locate_object(GenreForURL, "id", GenreForURL, "id", 1, {'id': 1, 'name': 'knowledge'} ) 
    knowledge_knowledge_39.type = 'knowledge'
    knowledge_knowledge_39.notesite_url = 'https://note.com/argumented_world/n/ndb75cac7f63f'
    knowledge_knowledge_39.article =  importer.locate_object(Article, "id", Article, "id", 6138, {'id': 6138, 'excerpt': '海が酸性化している', 'kicker': '海が酸性化している', 'content': '<p>今、二酸化炭素の排出が問題になっていますが、ニュースでよく取り上げられる影響は二酸化炭素の温室効果による地球の温暖化です。 しかし二酸化炭素は、海にも影響を及ぼしています。それは海の酸性化です。これまで人類が、石炭や石油を燃やして排出してきた二酸化炭素の約１/３は、海に吸収されています。そうして二酸化炭素を取り込んで、海はどんどん酸性化していっています。</p>\r\n\r\n<p>酸性化といっても、レモン汁のように酸っぱくなったり、何かを溶かすくらいの酸性になっているわけではありません。２００年前の海のｐＨの平均は８．２だったのが、現在は８．１になっています。（ｐＨは７当たりが真水です。）ｐＨ８．１はまだ弱アルカリ性ですが、このまま何も対策が取られずに行くと２１００年にはｐＨが７．８くらいになる可能性があります。※</p>\r\n\r\n<p>※この考え方には注意が必要です。19世紀のロンドンでは多くの馬車が街を行き交い、馬糞の処理問題が深刻でした。1894年、タイムズの記者は、1940年代までには、ロンドン市内に積み上がる馬糞の量は2.7メートルになると予想しました。しかし10年後には車が発明されたことにより、彼の予想は外れたという話があります。 ｐＨが０．１変わるのはちょっとした変化に見えますが、海がわずかにでも酸性化すると海の生物には様々な影響が出てきます。</p>\r\n\r\n<p>例えば、野生の若いクマノミは、二酸化炭素を吹き込んだ水の中だと匂いが分からなくなり、音も聞こえなくなってしまうという研究結果があります。 貝などが持つ貝殻の主成分は炭酸カルシウムです。炭酸カルシウムは酸にとても溶けやすいので、水が酸性化すると殻が脆くなったり、変形したりすることがあります。しかし逆に、酸性化した水の中では元気になって殻も丈夫になるというコウイカの仲間もいます。</p>\r\n\r\n<p>卵の殻も炭酸カルシウムでできています。これは極端な例ですが、卵をお酢に漬けて置いておくと、卵の殻が溶けて薄い膜に囲まれたプニプニの卵になります。 環境問題としては、森林の減少や気温の上昇、海面の上昇などが良く取り上げられますが、海の酸性化問題については、ほとんど取り上げられません。</p>\r\n\r\n<p>『貝と文明』\u3000ヘレン スケールズ (著)\u3000\u3000林 裕美子 (訳)309</p>\r\n\r\n<p>シグナル&ノイズ 天才データアナリストの「予測学」</p>\r\n\r\n<p>ネイト・シルバー (著)、西内啓、川添節子 (翻訳)232</p>\r\n\r\n<p>Pexels Francesco Ungaro</p>', 'references': '', 'rating': 0.0, 'rating_count': None, 'published_date': dateutil.parser.parse("2023-07-03T02:53:18.366157+00:00"), 'updated_date': dateutil.parser.parse("2023-07-03T02:53:18.372662+00:00")} ) 
    knowledge_knowledge_39.author =  importer.locate_object(UserAccount, "id", UserAccount, "id", 1, {'id': 1, 'password': 'pbkdf2_sha256$600000$Q9AwSzFqEXF1ueS21sGGfz$rZo+NVruXU5Zf5vp00wtuwLn0Z333sn5NtvS8VWKqds=', 'last_login': dateutil.parser.parse("2023-06-30T06:03:10.086511+00:00"), 'is_superuser': True, 'email': 'yurinakanishi33@gmail.com', 'name': 'yuri', 'is_active': True, 'is_staff': True} ) 
    knowledge_knowledge_39 = importer.save_or_locate(knowledge_knowledge_39)

    knowledge_knowledge_40 = Knowledge()
    knowledge_knowledge_40.name = 'The ocean is acidifying'
    knowledge_knowledge_40.slug = 'the-ocean-is-acidifying'
    knowledge_knowledge_40.language =  importer.locate_object(Language, "id", Language, "id", 1, {'id': 1, 'name': 'en'} ) 
    knowledge_knowledge_40.genre_for_url =  importer.locate_object(GenreForURL, "id", GenreForURL, "id", 1, {'id': 1, 'name': 'knowledge'} ) 
    knowledge_knowledge_40.type = 'knowledge'
    knowledge_knowledge_40.notesite_url = 'https://note.com/argumented_world/n/ndb75cac7f63f'
    knowledge_knowledge_40.article =  importer.locate_object(Article, "id", Article, "id", 6139, {'id': 6139, 'excerpt': 'The ocean is acidifying', 'kicker': 'The ocean is acidifying', 'content': '<p>Carbon dioxide emissions are now an issue, and the impact often discussed in the news is global warming due to the greenhouse effect of carbon dioxide.</p>\r\n\r\n<p>However, carbon dioxide is also affecting the oceans. It is acidification of the oceans.</p>\r\n\r\n<p>About 1/3 of the carbon dioxide emitted by humans through the burning of coal and oil is absorbed by the oceans.</p>\r\n\r\n<p>The oceans are becoming more and more acidic as they take in this carbon dioxide.</p>\r\n\r\n<p>The average pH of the ocean 200 years ago was 8.2. The average pH of the ocean 200 years ago was 8.2, and today it is 8.1. (A pH of around 7 is fresh water.) A pH of 8.1 is still mildly alkaline.</p>\r\n\r\n<p>(A pH of around 7 is fresh water.) A pH of 8.1 is still slightly alkaline, but if no action is taken, the pH will be 7.8 by 210 If no action is taken, the pH may reach 7.8 by 2102. *This concept requires caution.</p>\r\n\r\n<p>In 1894, a Times reporter predicted that by the 1940s, the amount of horse manure piled up in the city of London would be 2.7 meters. However, the story goes that 10 years later, his prediction was wrong because of the invention of the car.</p>\r\n\r\n<p>A 0.1 change in pH may seem like a small change, but even a slight acidification of the ocean can have a variety of effects on marine life.</p>\r\n\r\n<p>For example, studies have shown that young wild bear clams cannot smell or hear in water infused with carbon dioxide.</p>\r\n\r\n<p>The main component of the shells of shellfish and other marine organisms is calcium carbonate. Calcium carbonate is very soluble in acid, so if the water becomes acidic, the shell may become brittle or deformed. Conversely, however, some cuttlefish species are more vigorous in acidified water and their shells become tougher.</p>\r\n\r\n<p>Eggshells are also made of calcium carbonate. This is an extreme example, but if eggs are soaked in vinegar and left to soak, the eggshells will dissolve, leaving behind a thin membrane that surrounds the eggs.</p>\r\n\r\n<p>The eggshell is then surrounded by a thin film of calcium.</p>\r\n\r\n<p>While deforestation, rising temperatures, and rising sea levels are often discussed as environmental problems, the issue of ocean acidification is rarely discussed.</p>\r\n\r\n<p>I would be happy if you could learn about it through my article.</p>\r\n\r\n<p></p>', 'references': '', 'rating': 0.0, 'rating_count': None, 'published_date': dateutil.parser.parse("2023-07-03T02:53:18.366157+00:00"), 'updated_date': dateutil.parser.parse("2023-07-03T02:53:18.372662+00:00")} ) 
    knowledge_knowledge_40.author =  importer.locate_object(UserAccount, "id", UserAccount, "id", 1, {'id': 1, 'password': 'pbkdf2_sha256$600000$Q9AwSzFqEXF1ueS21sGGfz$rZo+NVruXU5Zf5vp00wtuwLn0Z333sn5NtvS8VWKqds=', 'last_login': dateutil.parser.parse("2023-06-30T06:03:10.086511+00:00"), 'is_superuser': True, 'email': 'yurinakanishi33@gmail.com', 'name': 'yuri', 'is_active': True, 'is_staff': True} ) 
    knowledge_knowledge_40 = importer.save_or_locate(knowledge_knowledge_40)

    knowledge_knowledge_41 = Knowledge()
    knowledge_knowledge_41.name = ' 森は「リフレッシュに行く場所」ではなかった'
    knowledge_knowledge_41.slug = 'the-forest-was-not-a-place-to-go-for-refreshment-jp'
    knowledge_knowledge_41.language =  importer.locate_object(Language, "id", Language, "id", 2, {'id': 2, 'name': 'jp'} ) 
    knowledge_knowledge_41.genre_for_url =  importer.locate_object(GenreForURL, "id", GenreForURL, "id", 1, {'id': 1, 'name': 'knowledge'} ) 
    knowledge_knowledge_41.type = 'knowledge'
    knowledge_knowledge_41.notesite_url = 'https://note.com/argumented_world/n/n2ed8844d45ed---https://alis.to/AugmentedWorld/articles/3Gqe514DWnpe'
    knowledge_knowledge_41.article =  importer.locate_object(Article, "id", Article, "id", 6140, {'id': 6140, 'excerpt': ' 森は「リフレッシュに行く場所」ではなかった', 'kicker': ' 森は「リフレッシュに行く場所」ではなかった', 'content': '<p>現代、私たちが住む世界では「森」は守るもの、保護するものになっています。しかし中世の人々にとっては「森」は全く違う意味を持っていました。中世の人々にとって森は薪や建築用の木材、家畜の飼料、蜂蜜など生活に欠かせないものの供給源である一方、聖なる場所、未知の空間でもありました。</p>\r\n\r\n<p>中世の人々にとって世界は、未知の空間（聖なる空間）と既知の空間（俗なる空間）に分かれていました。既知の空間は家や都市、村などの人々が住んでいる場所です。そして都市、村から一歩出るとそこには未知の空間が広がっていました。未知の空間には、人間には計り知れない力、人間の生活を全て左右する様々な力があり、幸せ、不幸、運、不運、戦争、不作、災難なども全て未知の空間からやってくると考えられていました。森は人間にとって一番身近なところにある未知の空間でした。</p>\r\n\r\n<p>ハリーポッターを知らない方にはごめんなさいですが、中世の人々にとっての森とは、ホグワーツの敷地内にある禁じられた森、まさにあの感じだと思います。真っ暗で得体の知れないモノが住んでいる、めっちゃ怖い場所です。狼の遠吠えが時折聞こえてきます。そんな森からくる災害や「未知」なるものを追い払うために、教会にある「人工」の鐘が鳴らされました。</p>\r\n\r\n<p>ここで、この文章を読んで下さっている皆さんの中には「実際に森に行ったり、テレビやネットで森を見たことあるけど、全然怖くなかったよ？」と思われた方もいるでしょう。しかし、私たちが「森」と言われてぱっと思い浮かんだり、行ったことのある場所は人間が手を入れていない森ではなくて、人間が手を入れた森です。人間が手を入れていない森は、原生林と呼ばれます。</p>\r\n\r\n<p>人間が手を入れた森では、日の光が地面近くまで届くように木の間隔を調整したり、木の枝を切ったりしています。「木」自体も、材木として使いやすいように、品種改良されてまっすぐ生えるようになっています。それに対して人の手が入ってない原生林は、枝が伸び放題で、幹がうねうねと曲がった木が密集しています。それらの木々が空を覆っていることにより、昼間でも真っ暗でとても不気味な場所です。原生林は、人間が手を入れた森のように、わざわざリフレッシュをしに行く場所ではなくて、一刻も早く立ち去りたいような場所でした。</p>\r\n\r\n<p>ちなみに、現在、日本で人間が全く手を入れていない原生林は国土の４％以下しかないと言われています</p>\r\n\r\n<p>その後、次第にキリスト教の考え方が強くなり、世界は未知の空間と既知の空間に分かれているという考えはなくなっていきました。未知の空間の存在を認めず、空間は一つであり全ては人間のためにあるものというわけです。それまでは、森から生活に必要な分だけ資源を調達していた人々でしたが、その考えが広まってから森のいきすぎた伐採が行なわれるようになっていきました。</p>\r\n\r\n<p>朝日百科 世界の歴史(1)紀元前の世界</p>\r\n\r\n<p>森林面積の事実\u3000日本の森林面積</p>\r\n\r\n<p>岡田斗司夫さんのYouTube動画「トトロ」「未来少年コナンのハイハーバー」</p>\r\n\r\n<p>francesco-ungaro(pexels)</p>\r\n\r\n<p>ddzphoto(pixabay)</p>\r\n\r\n<p>Thomas Bonometti(Unsplash)</p>', 'references': '', 'rating': 0.0, 'rating_count': None, 'published_date': dateutil.parser.parse("2023-07-03T02:53:18.366157+00:00"), 'updated_date': dateutil.parser.parse("2023-07-03T02:53:18.372662+00:00")} ) 
    knowledge_knowledge_41.author =  importer.locate_object(UserAccount, "id", UserAccount, "id", 1, {'id': 1, 'password': 'pbkdf2_sha256$600000$Q9AwSzFqEXF1ueS21sGGfz$rZo+NVruXU5Zf5vp00wtuwLn0Z333sn5NtvS8VWKqds=', 'last_login': dateutil.parser.parse("2023-06-30T06:03:10.086511+00:00"), 'is_superuser': True, 'email': 'yurinakanishi33@gmail.com', 'name': 'yuri', 'is_active': True, 'is_staff': True} ) 
    knowledge_knowledge_41 = importer.save_or_locate(knowledge_knowledge_41)

    knowledge_knowledge_42 = Knowledge()
    knowledge_knowledge_42.name = 'The forest was not a place to go for refreshment'
    knowledge_knowledge_42.slug = 'the-forest-was-not-a-place-to-go-for-refreshment'
    knowledge_knowledge_42.language =  importer.locate_object(Language, "id", Language, "id", 1, {'id': 1, 'name': 'en'} ) 
    knowledge_knowledge_42.genre_for_url =  importer.locate_object(GenreForURL, "id", GenreForURL, "id", 1, {'id': 1, 'name': 'knowledge'} ) 
    knowledge_knowledge_42.type = 'knowledge'
    knowledge_knowledge_42.notesite_url = 'https://note.com/argumented_world/n/n2ed8844d45ed---https://alis.to/AugmentedWorld/articles/3Gqe514DWnpe'
    knowledge_knowledge_42.article =  importer.locate_object(Article, "id", Article, "id", 6141, {'id': 6141, 'excerpt': 'The forest was not a place to go for refreshment', 'kicker': 'The forest was not a place to go for refreshment', 'content': '<p>## The forest was not a place to go for refreshment</p>\r\n\r\n<p>In the world we live in today, "forests" are something to protect and preserve!</p>\r\n\r\n<p>For medieval people, however, "forest" had a completely different meaning.</p>\r\n\r\n<p>For medieval people, forests were a source of firewood, timber for construction, fodder for livestock, honey, and other essentials for daily life, but they were also sacred places and unknown spaces.</p>\r\n\r\n<p>The Other World Closest to Us</p>\r\n\r\n<p>For medieval people, the world was divided into unknown spaces (sacred spaces) and known spaces (secular spaces).</p>\r\n\r\n<p>Known spaces were places where people lived, such as houses, cities, and villages. Once one steps out of a city or village, there is an unknown space.</p>\r\n\r\n<p>It was believed that the unknown space had immeasurable power, various forces that affect all human lives, and that happiness, misfortune, luck, bad luck, war, bad harvests, disasters, etc. all come from the unknown space. The forest was the unknown space closest to humans.</p>\r\n\r\n<p>Sorry for those of you who don\'t know Harry Potter, but for medieval people, the forest is exactly what the Forbidden Forest on the grounds of Hogwarts feels like.</p>\r\n\r\n<p>It is a very scary place, pitch black and inhabited by mysterious creatures. Wolves can be heard howling from time to time.</p>\r\n\r\n<p>To ward off disasters and "unknown" things that come from such a forest, an "artificial" bell in the church was rung.</p>\r\n\r\n<p>What is a virgin forest?</p>\r\n\r\n<p>Here, some of you who are reading this text may be thinking, "I have actually been to a forest, or seen a forest on TV or on the Internet, and it wasn\'t scary at all, right?" Some of you may be thinking, "I have actually been to a forest or seen a forest on TV or the Internet, and it was not scary at all.</p>\r\n\r\n<p>However, the places that come to mind when we hear the word "forest" or have visited are not forests that have not been touched by humans, but forests that have been touched by humans. Forests that have not been touched by humans are called virgin forests.</p>\r\n\r\n<p>In forests that have been modified by humans, the spacing between trees is adjusted and branches are cut so that sunlight can reach close to the ground. The trees themselves have been bred to grow straight so that they can be used easily as lumber.</p>\r\n\r\n<p>In contrast, virgin forests, which are untouched by human hands, are densely populated with trees with unlimited growth of branches and crooked trunks. These trees cover the sky, making it dark and eerie even during the daytime.</p>\r\n\r\n<p>The primeval forest was not a place to go all the way to refresh yourself, but a place you would want to leave as soon as possible, just like a human-managed forest.</p>\r\n\r\n<p>Incidentally, it is said that today in Japan there are less than 4% of the country\'s virgin forests that have not been touched by humans at all.</p>\r\n\r\n<p>Christianity and Deforestation</p>\r\n\r\n<p>Later, Christianity gradually became more and more strongly held, and the idea that the world is divided into unknown and known spaces disappeared. It does not recognize the existence of unknown space, but rather that space is one and all is for human beings.</p>\r\n\r\n<p>Until then, people had been getting only what they needed from the forests, but after the spread of this idea, the forests were cut down excessively.</p>\r\n\r\n<p></p>', 'references': '', 'rating': 0.0, 'rating_count': None, 'published_date': dateutil.parser.parse("2023-07-03T02:53:18.366157+00:00"), 'updated_date': dateutil.parser.parse("2023-07-03T02:53:18.372662+00:00")} ) 
    knowledge_knowledge_42.author =  importer.locate_object(UserAccount, "id", UserAccount, "id", 1, {'id': 1, 'password': 'pbkdf2_sha256$600000$Q9AwSzFqEXF1ueS21sGGfz$rZo+NVruXU5Zf5vp00wtuwLn0Z333sn5NtvS8VWKqds=', 'last_login': dateutil.parser.parse("2023-06-30T06:03:10.086511+00:00"), 'is_superuser': True, 'email': 'yurinakanishi33@gmail.com', 'name': 'yuri', 'is_active': True, 'is_staff': True} ) 
    knowledge_knowledge_42 = importer.save_or_locate(knowledge_knowledge_42)

    knowledge_knowledge_43 = Knowledge()
    knowledge_knowledge_43.name = '不良は自ら肉体労働者になる道を選ぶ'
    knowledge_knowledge_43.slug = 'the-delinquent-chooses-to-become-a-manual-laborer-himself-jp'
    knowledge_knowledge_43.language =  importer.locate_object(Language, "id", Language, "id", 2, {'id': 2, 'name': 'jp'} ) 
    knowledge_knowledge_43.genre_for_url =  importer.locate_object(GenreForURL, "id", GenreForURL, "id", 1, {'id': 1, 'name': 'knowledge'} ) 
    knowledge_knowledge_43.type = 'knowledge'
    knowledge_knowledge_43.notesite_url = 'https://note.com/argumented_world/n/n7f187903bf53'
    knowledge_knowledge_43.article =  importer.locate_object(Article, "id", Article, "id", 6142, {'id': 6142, 'excerpt': '不良は自ら肉体労働者になる道を選ぶ', 'kicker': '不良は自ら肉体労働者になる道を選ぶ', 'content': '<p>『ハマータウンの野郎ども』という本を紹介します。教育に携わる人は必読といわれる研究書です。労働者階級へのインタビューや実地調査をおこない、イギリスの階級社会において階級はなぜ固定化されるのか、下層の人々はなぜそこから抜け出せないのかを考察しています。この本の調査によると、労働者階級の子供達は、自ら進んで工場労働者などの肉体労働者になる道を選ぶ、というのです。</p>\r\n\r\n<p>その原因を書きます。</p>\r\n\r\n<p>①肉体労働＝男らしさの象徴という文化がある。なので、自ら肉体労働者になる</p>\r\n\r\n<p>②勉強やテストに縛られないで、青春を楽しみたい。なので勉強、学校から離れてしまい学歴がない労働者になる。</p>\r\n\r\n<p>③社会の規則に縛られずに自由に生きたいなので、犯罪などもしてしまう。</p>\r\n\r\n<p>彼らの動機はわからなくは無いですよね。私たちも、青年期くらいにこのようなことを行動に移さずとも、考えたことはあるはずです。そして、そう考えた子供の親が肉体労働者だったりすると、親が自分の立場を肯定する教育をして、子供もその道に行ったりするのでしょう。もちろん階級の固定化は、上位の特権階級が富を独占して搾取していることも原因ですけどね。</p>\r\n\r\n<p>『ハマータウンの野郎ども ─学校への反抗・労働への順応 』 September 1, 1996 ポール・ウィリス (著)</p>', 'references': '', 'rating': 0.0, 'rating_count': None, 'published_date': dateutil.parser.parse("2023-07-03T02:53:18.366157+00:00"), 'updated_date': dateutil.parser.parse("2023-07-03T02:53:18.372662+00:00")} ) 
    knowledge_knowledge_43.author =  importer.locate_object(UserAccount, "id", UserAccount, "id", 1, {'id': 1, 'password': 'pbkdf2_sha256$600000$Q9AwSzFqEXF1ueS21sGGfz$rZo+NVruXU5Zf5vp00wtuwLn0Z333sn5NtvS8VWKqds=', 'last_login': dateutil.parser.parse("2023-06-30T06:03:10.086511+00:00"), 'is_superuser': True, 'email': 'yurinakanishi33@gmail.com', 'name': 'yuri', 'is_active': True, 'is_staff': True} ) 
    knowledge_knowledge_43 = importer.save_or_locate(knowledge_knowledge_43)

    knowledge_knowledge_44 = Knowledge()
    knowledge_knowledge_44.name = 'The delinquent chooses to become a manual laborer himself.'
    knowledge_knowledge_44.slug = 'the-delinquent-chooses-to-become-a-manual-laborer-himself'
    knowledge_knowledge_44.language =  importer.locate_object(Language, "id", Language, "id", 1, {'id': 1, 'name': 'en'} ) 
    knowledge_knowledge_44.genre_for_url =  importer.locate_object(GenreForURL, "id", GenreForURL, "id", 1, {'id': 1, 'name': 'knowledge'} ) 
    knowledge_knowledge_44.type = 'knowledge'
    knowledge_knowledge_44.notesite_url = 'https://note.com/argumented_world/n/n7f187903bf53'
    knowledge_knowledge_44.article =  importer.locate_object(Article, "id", Article, "id", 6143, {'id': 6143, 'excerpt': 'The delinquent chooses to become a manual laborer himself.', 'kicker': 'The delinquent chooses to become a manual laborer himself.', 'content': '<p>I would like to introduce a book titled "The Bastards of Hammertown.</p>\r\n\r\n<p>Bastards of Hammertown ─Rebellion against School, Conformity to Labor (Chikuma Gakugei Bunko)</p>\r\n\r\n<p>www.amazon.co.jp</p>\r\n\r\n<p>1,595 yen</p>\r\n\r\n<p>(As of 21:48, August 07, 2020, click here for details)</p>\r\n\r\n<p>Buy at Amazon.co.jp</p>\r\n\r\n<p>This research book is considered a must-read for anyone involved in education.</p>\r\n\r\n<p>Through interviews and field research with the working class, the book examines why class is fixed in British class society and why those at the bottom are stuck there.</p>\r\n\r\n<p>According to the book\'s research, working-class children willingly choose to become factory workers and other manual laborers.</p>\r\n\r\n<p>The reasons for this are as follows.</p>\r\n\r\n<p>(1) There is a culture in which physical labor is a symbol of masculinity.</p>\r\n\r\n<p>Therefore, they voluntarily become manual laborers.</p>\r\n\r\n<p>(2) They want to enjoy their youth without being tied down by studies and tests.</p>\r\n\r\n<p>Therefore, they leave their studies and school and become uneducated workers.</p>\r\n\r\n<p>(iii) I want to live freely without being bound by the rules of society.</p>\r\n\r\n<p>Therefore, they commit crimes.</p>\r\n\r\n<p>It is not hard to understand their motives, isn\'t it? We, too, must have thought about these things in our youth, even if we did not act on them.</p>\r\n\r\n<p>And if the parents of children who have thought about this are manual laborers, the parents may educate their children to affirm their position, and the children may go that way.</p>\r\n\r\n<p>Of course, the immobilization of class is also caused by the upper privileged class monopolizing and exploiting wealth, though.</p>\r\n\r\n<p></p>', 'references': '', 'rating': 0.0, 'rating_count': None, 'published_date': dateutil.parser.parse("2023-07-03T02:53:18.366157+00:00"), 'updated_date': dateutil.parser.parse("2023-07-03T02:53:18.372662+00:00")} ) 
    knowledge_knowledge_44.author =  importer.locate_object(UserAccount, "id", UserAccount, "id", 1, {'id': 1, 'password': 'pbkdf2_sha256$600000$Q9AwSzFqEXF1ueS21sGGfz$rZo+NVruXU5Zf5vp00wtuwLn0Z333sn5NtvS8VWKqds=', 'last_login': dateutil.parser.parse("2023-06-30T06:03:10.086511+00:00"), 'is_superuser': True, 'email': 'yurinakanishi33@gmail.com', 'name': 'yuri', 'is_active': True, 'is_staff': True} ) 
    knowledge_knowledge_44 = importer.save_or_locate(knowledge_knowledge_44)

    knowledge_knowledge_45 = Knowledge()
    knowledge_knowledge_45.name = 'カタログ通信販売の時代'
    knowledge_knowledge_45.slug = 'the-age-of-catalog-mail-order-sales-jp'
    knowledge_knowledge_45.language =  importer.locate_object(Language, "id", Language, "id", 2, {'id': 2, 'name': 'jp'} ) 
    knowledge_knowledge_45.genre_for_url =  importer.locate_object(GenreForURL, "id", GenreForURL, "id", 1, {'id': 1, 'name': 'knowledge'} ) 
    knowledge_knowledge_45.type = 'knowledge'
    knowledge_knowledge_45.notesite_url = 'https://note.com/argumented_world/n/n42745b20a130https://note.com/argumented_world/n/n42745b20a130'
    knowledge_knowledge_45.article =  importer.locate_object(Article, "id", Article, "id", 6144, {'id': 6144, 'excerpt': 'カタログ通信販売の時代', 'kicker': 'カタログ通信販売の時代', 'content': "<p>1920年代は、アメリカでカタログによる通信販売業がもっとも盛り上がった時代です。アメリカ中に大量のカタログが配布され、人々はカタログを見て注文票を返送し、商品を受け取りました。当時、カタログは『Great･Wish･Book（願いの叶う夢の本）』『farmer's Bible（農民のバイブル）』『a department store in a book（本の中のデパート）』などと呼ばれていました。 そして、子ども達にとっては絵本であり、読み書きを覚えたり世界を知るための教科書でもありました。このシアーズ・ローバック社のカタログは1056ページあります。</p>\r\n\r\n<p>画像2</p>\r\n\r\n<p>この時代、農業中心だったアメリカには広大な大地に多くの農民が暮らしていました。鉄道や車はまだ普及しはじめた頃で、交通手段が発展しておらず、主な移動手段は馬や馬車でした。 なので地方に住む農民は都市部に出るのも大変で、地元の小売商が不当に高い値段を付けても渋々買わざるを得ませんでした。彼らには不満が溜まっていました。アメリカは国土がとても広いので、アメリカにおける地方の感覚は、日本における地方の感覚より何倍も離れていると思います。</p>\r\n\r\n<p>そこに目を付けたのが通信販売業者でした。 シアーズ・ローバック社やモンゴメリーウォード社などは、当時流通の中心地であったシカゴに巨大な倉庫と郵便局を建て、人々にカタログを郵送しました。</p>\r\n\r\n<p>画像4</p>\r\n\r\n<p>品物を一括で仕入れることによって、消費者に安く商品を届けることができました。 通信販売業者は「ライバルがいなくてやりたい放題な商人などの仲介者から、農民の利益を守ります！」と訴え、消費者の心を掴みました（通信販売業も仲介業ですけどね笑）。カタログに書いている値段以上の請求はされないので、ぼったくり商人から買うより安く購入することができたことは事実です。カタログには「満足していただけれなければ返金いたします」とも書かれていました。この時代から返金保証があったのですね。こうした通信販売によって田舎の人々が都会の文化に触れられるようになりました。</p>\r\n\r\n<p>画像1</p>\r\n\r\n<p>1900年代初めに、シアーズ・ローバック社、モンゴメリーウォード社は通信販売以外にもデパート、スーパーなどの小売り業に進出しました。シアーズは、一時期はウォルマートと並んで米国を代表する小売りチェーンとなりましたが、ネット通販の広がりや安い店の増加により、経営不振に陥り、2018年に経営破綻を申請しました。モンゴメリーウォード社も2000年に破産、解体されました。一世を風靡し成功を収めた企業も急激な時代の流れにはついて行けなかったのでしょうか。 もしくは成功してしまったからこそ、変化を恐れ、時代の流れに取り残されたのかもしれません。</p>\r\n\r\n<p>『朝日百科\u3000世界の歴史\u300011ー20世紀の世界ー』\u30001991年\u3000朝日新聞社</p>\r\n\r\n<p>『20世紀アメリカの生活デザイン : シアーズ・ローバックの通信販売カタログを事例として』 田村 沙織, 坪井 善昭, 伊藤 紀之\u3000共立女子大学家政学部紀要</p>\r\n\r\n<p>『20世紀後半における米国シアーズ・ローバック社の多角化経営の展開』江幡、真史\u3000経営学研究論集</p>\r\n\r\n<p>シアーズ・ローバック/モンゴメリーワードの通販カタログを買取しました（復刻） 古本買取なら名古屋エーブック</p>\r\n\r\n<p>シアーズ・ローバック/モンゴメリーワードの通販カタログを買取しました（復刻）。古本の出張買取は名古屋エーブック。名古屋で古</p>\r\n\r\n<p>abookz.jp</p>\r\n\r\n<p>タイトル未設定</p>\r\n\r\n<p>www.kanagawa-u.ac.jp</p>\r\n\r\n<p>Montgomery Ward - Wikipedia</p>\r\n\r\n<p>en.wikipedia.org</p>\r\n\r\n<p>シアーズ</p>\r\n\r\n<p>ja.wikipedia.org</p>\r\n\r\n<p>【ナンデモ歴史50】19世紀半ばの「大爆発期」 — ENOTECH</p>\r\n\r\n<p>独立戦争を経てアメリカから欧州勢力が去り、18世紀の終わり頃には初めてフランス人が近くに農場を拓いて定住。そして1816年</p>\r\n\r\n<p>www.enotechconsulting.com</p>\r\n\r\n<p>「通信販売」の歴史をどれだけ知っていますか | 蘊蓄の箪笥 100章</p>\r\n\r\n<p>01.\u2003通信販売とは小売業の一種で店舗ではなくメディアを利用して商品を展示し通信手段で受注・販売する方法02.\u2003通販の誕生</p>\r\n\r\n<p>toyokeizai.net</p>\r\n\r\n<p>wikimedeia commons</p>\r\n\r\n<p>File:Consumers guide no. 107. (IA consumersguideno00sear).pdf</p>\r\n\r\n<p>File:Sears Savannah, GA 6 (33541048956).jpg</p>\r\n\r\n<p>File:USA location map - counties.svg</p>\r\n\r\n<p>File:Sears - Aids That Every Woman Appreciates.jpg</p>", 'references': '', 'rating': 0.0, 'rating_count': None, 'published_date': dateutil.parser.parse("2023-07-03T02:53:18.366157+00:00"), 'updated_date': dateutil.parser.parse("2023-07-03T02:53:18.372662+00:00")} ) 
    knowledge_knowledge_45.author =  importer.locate_object(UserAccount, "id", UserAccount, "id", 1, {'id': 1, 'password': 'pbkdf2_sha256$600000$Q9AwSzFqEXF1ueS21sGGfz$rZo+NVruXU5Zf5vp00wtuwLn0Z333sn5NtvS8VWKqds=', 'last_login': dateutil.parser.parse("2023-06-30T06:03:10.086511+00:00"), 'is_superuser': True, 'email': 'yurinakanishi33@gmail.com', 'name': 'yuri', 'is_active': True, 'is_staff': True} ) 
    knowledge_knowledge_45 = importer.save_or_locate(knowledge_knowledge_45)

    knowledge_knowledge_46 = Knowledge()
    knowledge_knowledge_46.name = 'The Age of Catalog Mail Order Sales'
    knowledge_knowledge_46.slug = 'the-age-of-catalog-mail-order-sales'
    knowledge_knowledge_46.language =  importer.locate_object(Language, "id", Language, "id", 1, {'id': 1, 'name': 'en'} ) 
    knowledge_knowledge_46.genre_for_url =  importer.locate_object(GenreForURL, "id", GenreForURL, "id", 1, {'id': 1, 'name': 'knowledge'} ) 
    knowledge_knowledge_46.type = 'knowledge'
    knowledge_knowledge_46.notesite_url = 'https://note.com/argumented_world/n/n42745b20a130https://note.com/argumented_world/n/n42745b20a130'
    knowledge_knowledge_46.article =  importer.locate_object(Article, "id", Article, "id", 6145, {'id': 6145, 'excerpt': 'The Age of Catalog Mail Order Sales', 'kicker': 'The Age of Catalog Mail Order Sales', 'content': '<p>The 1920s was the most exciting time for mail-order catalog sales in the United States.</p>\r\n\r\n<p>Catalogs were distributed in large quantities throughout the U.S., and people would return order forms and receive products from the catalogs.</p>\r\n\r\n<p>In those days, catalogs were called "Great Wish Books," "Farmer\'s Bibles," "a department store in a book," and so on.</p>\r\n\r\n<p>It was also a picture book for children and a textbook for learning to read and write and to learn about the world.</p>\r\n\r\n<p>This Sears Roebuck catalog has 1056 pages.</p>\r\n\r\n<p>Image 2</p>\r\n\r\n<p>During this era, the United States was an agricultural-based country with many farmers living on vast lands.</p>\r\n\r\n<p>Railroads and cars were just beginning to spread, transportation was not developed, and the main means of transportation was horses and carriages.</p>\r\n\r\n<p>Therefore, farmers living in rural areas had a hard time getting to the cities, and they had to buy reluctantly even if the local retailers charged unreasonably high prices. They were frustrated.</p>\r\n\r\n<p>The U.S. is a very large country, so the sense of rural areas in the U.S. is many times more remote than the sense of rural areas in Japan.</p>\r\n\r\n<p>That is where the mail order companies took notice.</p>\r\n\r\n<p>Sears Roebuck, Montgomery Ward, and others built huge warehouses and post offices in Chicago, the distribution center of the time, and mailed catalogs to people.</p>\r\n\r\n<p>Image 4</p>\r\n\r\n<p>By purchasing goods in bulk, they were able to deliver goods to consumers at low prices.</p>\r\n\r\n<p>Mail order companies "protect the interests of the farmers from merchants and other intermediaries who have no rivals and can do whatever they want!" (Mail-order businesses are also intermediaries, though.)</p>\r\n\r\n<p>It is true that consumers were able to buy at a lower price than from rip-off merchants because they were not charged more than the price written in the catalog.</p>\r\n\r\n<p>The catalog also said, "If you are not satisfied with the product, we will refund your money. So there was a money-back guarantee from this era.</p>\r\n\r\n<p>These mail-order sales allowed people from the countryside to experience urban culture.</p>\r\n\r\n<p>Image 1</p>\r\n\r\n<p>The Sears Law Firm</p>\r\n\r\n<p>In the early 1900s, Sears Roebuck and Montgomery Ward expanded into the retail business, including department stores and supermarkets, in addition to mail-order sales.</p>\r\n\r\n<p>Sears at one time became one of the leading retail chains in the U.S. along with Wal-Mart, but with the spread of online shopping and the increase in cheap stores, the company fell into financial difficulties and filed for bankruptcy in 2018.</p>\r\n\r\n<p>Montgomery Ward Inc. also went bankrupt and was dismantled in 2000.</p>\r\n\r\n<p>Did the company that dominated and succeeded not keep up with the rapid changes of the times?</p>\r\n\r\n<p>Or perhaps they were so successful that they feared change and were left behind by the currents of the times.</p>\r\n\r\n<p></p>', 'references': '', 'rating': 0.0, 'rating_count': None, 'published_date': dateutil.parser.parse("2023-07-03T02:53:18.366157+00:00"), 'updated_date': dateutil.parser.parse("2023-07-03T02:53:18.372662+00:00")} ) 
    knowledge_knowledge_46.author =  importer.locate_object(UserAccount, "id", UserAccount, "id", 1, {'id': 1, 'password': 'pbkdf2_sha256$600000$Q9AwSzFqEXF1ueS21sGGfz$rZo+NVruXU5Zf5vp00wtuwLn0Z333sn5NtvS8VWKqds=', 'last_login': dateutil.parser.parse("2023-06-30T06:03:10.086511+00:00"), 'is_superuser': True, 'email': 'yurinakanishi33@gmail.com', 'name': 'yuri', 'is_active': True, 'is_staff': True} ) 
    knowledge_knowledge_46 = importer.save_or_locate(knowledge_knowledge_46)

    knowledge_knowledge_47 = Knowledge()
    knowledge_knowledge_47.name = '盗みは快感'
    knowledge_knowledge_47.slug = 'stealing-is-pleasurable-jp'
    knowledge_knowledge_47.language =  importer.locate_object(Language, "id", Language, "id", 2, {'id': 2, 'name': 'jp'} ) 
    knowledge_knowledge_47.genre_for_url =  importer.locate_object(GenreForURL, "id", GenreForURL, "id", 1, {'id': 1, 'name': 'knowledge'} ) 
    knowledge_knowledge_47.type = 'knowledge'
    knowledge_knowledge_47.notesite_url = 'https://note.com/argumented_world/n/na9043cd7b9ee'
    knowledge_knowledge_47.article =  importer.locate_object(Article, "id", Article, "id", 6146, {'id': 6146, 'excerpt': '盗みは快感', 'kicker': '盗みは快感', 'content': '<p>アメリカンアニマルズという映画を観ました。アメリカの大学の学生が大学の図書館に展示してある本を盗んだという実際の事件を再現した映画です。盗まれた本は歴史的に価値のある高価な本で、本を売れば巨額のお金を得ることができました。 そしてこの映画は、実際に事件を起こした彼ら本人へのインタビュー映像も織り交ぜながらストーリーが進んでいくので、彼らの盗みの実際の動機が明らかになります。中流階級の家庭で育ち、大学に通えているという、金銭的にそこまで困っていないはずの彼らが何故犯罪に手を染めてしまったのでしょうか。 盗みの動機を聞かれた彼ら本人へのインタビューの内容をまとめると、「退屈な人生から抜け出したかった」ということらしいです。</p>\r\n\r\n<p>『ハマータウンの野郎ども』という、教育に携わる人は必読といわれるイギリスの本があります。イギリスの階級社会において、労働者階級はなぜ抜け出せないのかを考察していて、労働者階級へのインタビューや実地調査をおこなって書かれている研究書です。 労働者階級の子供達が盗みや犯罪を行う動機について書かれている箇所から引用します。</p>\r\n\r\n<p>とにかく現金が欲しいという切迫した思いがあることを軽くみてはならない。しかし、その動機にはもうひとつの特徴的な要素が絡まっていて、それは、「盗むこと」が喧嘩にも似たエキサイティングな経験である、という点にかかわっている。盗みは危険な行為であり、 自我の平穏な小字宙をかき乱さずにはおかない。「規則の支配」も、細かい取り決めにしばられた日常性も、たてまえの拘束力も、このときばかりはしばし立ち消える。そこで首尾よくやりおおせれば、権威の裏をかき、その鼻をあかしたことにもなるのである。「してやった」という気持ちは内に秘めておくほかないとしても、奇妙な自由の感覚が、社会常識には むかい、はむかった代償をせしめたことから生まれてくる。もしも当局の手に「ひっかかる」ようなことがあれば、そのときは「あることないこと並べたてて言いのがれる」特別の技能に頼るのだ。それもまたエキサイティングなことであるし、「危うく難をのがれる」ことができれば満足感もひとしおである。 もちろん、いつでも「難をのがれる」というわけにはゆかない。私の調査期間中にもハマータウン校の二人の少年が、カーラジオを盗んで保護観察処分を受けている。こうなればみじめだ。両親は呼び出されるし、数々の調書が作成され、裁判の進行にはなんとも言えない不安がつきまとう。官僚機構のいつ果てるともない手続きを踏まされるあいだに、盛みの現場で味わった興奮はしぼんで憂部にまわる。この間こそ、フォーマルな世界がインフォーマルな世界をふたたび完全に押つぶすのである。</p>\r\n\r\n<p>ハマータウンの野郎ども\u3000p106~</p>\r\n\r\n<p>「権力への反抗」の魅力が、犯罪の動機の一部となることもあるのですね。そして、アメリカンアニマルズの大学生たちも、イギリスで盗みをした人たちも、結局は権力によって捕まり、さらに自由を奪われてしまうのです。</p>\r\n\r\n<p>『ハマータウンの野郎ども ─学校への反抗・労働への順応 』  September 1, 1996\u3000\u3000ポール・ウィリス (著)</p>', 'references': '', 'rating': 0.0, 'rating_count': None, 'published_date': dateutil.parser.parse("2023-07-03T02:53:18.366157+00:00"), 'updated_date': dateutil.parser.parse("2023-07-03T02:53:18.372662+00:00")} ) 
    knowledge_knowledge_47.author =  importer.locate_object(UserAccount, "id", UserAccount, "id", 1, {'id': 1, 'password': 'pbkdf2_sha256$600000$Q9AwSzFqEXF1ueS21sGGfz$rZo+NVruXU5Zf5vp00wtuwLn0Z333sn5NtvS8VWKqds=', 'last_login': dateutil.parser.parse("2023-06-30T06:03:10.086511+00:00"), 'is_superuser': True, 'email': 'yurinakanishi33@gmail.com', 'name': 'yuri', 'is_active': True, 'is_staff': True} ) 
    knowledge_knowledge_47 = importer.save_or_locate(knowledge_knowledge_47)

    knowledge_knowledge_48 = Knowledge()
    knowledge_knowledge_48.name = 'Stealing is pleasurable'
    knowledge_knowledge_48.slug = 'stealing-is-pleasurable'
    knowledge_knowledge_48.language =  importer.locate_object(Language, "id", Language, "id", 1, {'id': 1, 'name': 'en'} ) 
    knowledge_knowledge_48.genre_for_url =  importer.locate_object(GenreForURL, "id", GenreForURL, "id", 1, {'id': 1, 'name': 'knowledge'} ) 
    knowledge_knowledge_48.type = 'knowledge'
    knowledge_knowledge_48.notesite_url = 'https://note.com/argumented_world/n/na9043cd7b9ee'
    knowledge_knowledge_48.article =  importer.locate_object(Article, "id", Article, "id", 6147, {'id': 6147, 'excerpt': 'Stealing is pleasurable', 'kicker': 'Stealing is pleasurable', 'content': '<p>American Animals</p>\r\n\r\n<p>I watched a movie called</p>\r\n\r\n<p>Amazon.co.jp: American Animals (subtitled) : Evan Peters, Barry Corgan, Jared Abrahamson, Blake Jenner, Ann Dowd, Bart Layton, Bart Layton: Prime Video</p>\r\n\r\n<p>Amazon.com: american animals (subtitled) : evan peters, barry corgan, jared</p>\r\n\r\n<p>www.amazon.co.jp</p>\r\n\r\n<p>This movie recreates a real-life incident in which students at an American university stole books on display in the university\'s library.</p>\r\n\r\n<p>The stolen books were historically valuable and expensive books, and they could earn huge sums of money if they sold the books.</p>\r\n\r\n<p>The film also interweaves footage of interviews with the actual people who committed the crime themselves as the story progresses, revealing their actual motives for stealing.</p>\r\n\r\n<p>They grew up in middle-class families and were able to attend college, so why did they turn to crime when they were not in such financial trouble?</p>\r\n\r\n<p>When asked about their motive for stealing, the interview with the students themselves can be summarized as follows.</p>\r\n\r\n<p>"I wanted to escape from my boring life.</p>\r\n\r\n<p>That seems to be the motive.</p>\r\n\r\n<p>The "Bastards of Hammertown," as they call themselves, are a must for anyone in the field of education.</p>\r\n\r\n<p>is a British book that is considered a must-read for anyone involved in education.</p>\r\n\r\n<p>It is a research book written by interviewing the working class and conducting field research to examine why the working class is stuck in the British class society.</p>\r\n\r\n<p>Here is a quote from a section that describes the motives of working class children for stealing and committing crimes</p>\r\n\r\n<p>The fact that they have an urgent need for cash anyway should not be taken lightly. But there is another distinctive element intertwined with that motivation, and it concerns the fact that "stealing" is an exciting experience, akin to fighting.</p>\r\n\r\n<p>Stealing is a dangerous act, one that cannot help but stir up the ego\'s placid microcosm. The "rule of rules," the routine of fine-tuned routines, and the restraints of pretense all disappear for a time.</p>\r\n\r\n<p>If we successfully pull this off, we will have outsmarted and outwitted the authorities.</p>\r\n\r\n<p>Even if we can only keep the feeling of "I did it" to ourselves, a strange sense of freedom arises from having paid a price that goes against the grain of social norms. If we ever get "caught" in the hands of the authorities, we can then rely on our special skills to "tell them what is and isn\'t true".</p>\r\n\r\n<p>It is also exciting and satisfying to be "narrowly evaded.</p>\r\n\r\n<p>Of course, it is not always possible to "get away with it. During the period of my research, two boys from Hammertown School were placed on probation for stealing a car radio. This is a miserable situation. Parents are summoned, numerous statements are made, and the progress of the trial is fraught with indescribable anxiety.</p>\r\n\r\n<p>The excitement of the trial is replaced by a sense of melancholy while the bureaucratic process is endlessly repeated. It is during this time that the formal world once again completely crushes the informal world.</p>\r\n\r\n<p>Bastards of Hammertown, p106~.</p>\r\n\r\n<p>So the allure of "defiance of authority" can be part of the motive for crime.</p>\r\n\r\n<p>And both the college students in American Animals and those who stole in England were eventually caught by authority and further deprived of their freedom.</p>\r\n\r\n<p></p>', 'references': '', 'rating': 0.0, 'rating_count': None, 'published_date': dateutil.parser.parse("2023-07-03T02:53:18.366157+00:00"), 'updated_date': dateutil.parser.parse("2023-07-03T02:53:18.372662+00:00")} ) 
    knowledge_knowledge_48.author =  importer.locate_object(UserAccount, "id", UserAccount, "id", 1, {'id': 1, 'password': 'pbkdf2_sha256$600000$Q9AwSzFqEXF1ueS21sGGfz$rZo+NVruXU5Zf5vp00wtuwLn0Z333sn5NtvS8VWKqds=', 'last_login': dateutil.parser.parse("2023-06-30T06:03:10.086511+00:00"), 'is_superuser': True, 'email': 'yurinakanishi33@gmail.com', 'name': 'yuri', 'is_active': True, 'is_staff': True} ) 
    knowledge_knowledge_48 = importer.save_or_locate(knowledge_knowledge_48)

    knowledge_knowledge_49 = Knowledge()
    knowledge_knowledge_49.name = 'じゃがいもの一部には、放射線が当てられている'
    knowledge_knowledge_49.slug = 'some-potatoes-are-irradiated-jp'
    knowledge_knowledge_49.language =  importer.locate_object(Language, "id", Language, "id", 2, {'id': 2, 'name': 'jp'} ) 
    knowledge_knowledge_49.genre_for_url =  importer.locate_object(GenreForURL, "id", GenreForURL, "id", 1, {'id': 1, 'name': 'knowledge'} ) 
    knowledge_knowledge_49.type = 'knowledge'
    knowledge_knowledge_49.notesite_url = 'https://note.com/argumented_world/n/n6f78c51cd9bc'
    knowledge_knowledge_49.article =  importer.locate_object(Article, "id", Article, "id", 6148, {'id': 6148, 'excerpt': 'じゃがいもの一部には、放射線が当てられている', 'kicker': 'じゃがいもの一部には、放射線が当てられている', 'content': '<p>北海道でジャガイモがとれました。飛行機でジャガイモを日本各地に届けます。しかし運ぶ途中でジャガイモから芽が出てしまうと大変です。芽には人間にとっての毒素が含まれていることもあり、ジャガイモは売り物にならなくなっていしまいます。ということで、放射線を照射します。</p>\r\n\r\n<p>じゃがいもの一部には芽が出ないように放射線の一種であるγ（ガンマ）線が照射されています。芽の組織を破壊することによって細胞分裂を防いでいます。γ（ガンマ）線の照射は、食品の滅菌にも使われています。サルモネラ菌などによる食中毒を防止するためです。 薬品を使った滅菌では食品に薬品が残ったり、食品が変質してしまう恐れがあります。一方、滅菌で使用されるγ線のエネルギー量では、そのようなことは起きません。その面では薬品による殺虫、滅菌より安全です。</p>\r\n\r\n<p>画像1</p>\r\n\r\n<p>加熱滅菌は、一番安全かもしれませんが、食品の風味が損なわれてしまうことが多いです。</p>\r\n\r\n<p>外国では、香辛料の多くはγ線で滅菌されています。γ線を使うと、スパイスやハーブの色や香りを損ねることなく殺菌できます。スパイス・ハーブ類の照射はEUでも認可・実施されています。※1</p>\r\n\r\n<p>香辛料の照射滅菌が認可されていないのは先進国では、日本くらいだそうです。理由は、日本人は放射線という言葉に抵抗があるので、現在の日本では国内でのγ線の食品への照射はジャガイモにのみ使われています。</p>\r\n\r\n<p>画像2</p>\r\n\r\n<p>牛挽肉や鶏肉、冷凍エビの滅菌などにも使われています。放射線による滅菌は内部まで確実に、非加熱で行うことができるので、凍ったままの食品でも処理することができます。※1他にも、身近なところでは、病院で使われる使い捨ての注射針がγ線で滅菌されていたりします。先ほども申しましたが、照射によって食品が放射化したり、変質したりすることはありません。しかし、照射後は念入りな検査が行なわれています。被曝量が多ければ人体に障害を与える放射線ですが、ものは使いようですね。</p>\r\n\r\n<p>『放射線について考えよう。』多田将 (著)</p>\r\n\r\n<p>※1\u3000NLだよりNo.454\u3000『放射線照射食品を知っていますか？』等々力 節子</p>\r\n\r\n<p>タイトル未設定</p>\r\n\r\n<p>www.nagase-landauer.co.jp</p>\r\n\r\n<p>Photo by Franco Antonio Giovanella on Unsplash</p>\r\n\r\n<p>Photo by Dianne Policar</p>\r\n\r\n<p>pio on Unsplash</p>\r\n\r\n<p>Couleur on Pixabay</p>', 'references': '', 'rating': 0.0, 'rating_count': None, 'published_date': dateutil.parser.parse("2023-07-03T02:53:18.366157+00:00"), 'updated_date': dateutil.parser.parse("2023-07-03T02:53:18.372662+00:00")} ) 
    knowledge_knowledge_49.author =  importer.locate_object(UserAccount, "id", UserAccount, "id", 1, {'id': 1, 'password': 'pbkdf2_sha256$600000$Q9AwSzFqEXF1ueS21sGGfz$rZo+NVruXU5Zf5vp00wtuwLn0Z333sn5NtvS8VWKqds=', 'last_login': dateutil.parser.parse("2023-06-30T06:03:10.086511+00:00"), 'is_superuser': True, 'email': 'yurinakanishi33@gmail.com', 'name': 'yuri', 'is_active': True, 'is_staff': True} ) 
    knowledge_knowledge_49 = importer.save_or_locate(knowledge_knowledge_49)

    knowledge_knowledge_50 = Knowledge()
    knowledge_knowledge_50.name = 'Some potatoes are irradiated.'
    knowledge_knowledge_50.slug = 'some-potatoes-are-irradiated'
    knowledge_knowledge_50.language =  importer.locate_object(Language, "id", Language, "id", 1, {'id': 1, 'name': 'en'} ) 
    knowledge_knowledge_50.genre_for_url =  importer.locate_object(GenreForURL, "id", GenreForURL, "id", 1, {'id': 1, 'name': 'knowledge'} ) 
    knowledge_knowledge_50.type = 'knowledge'
    knowledge_knowledge_50.notesite_url = 'https://note.com/argumented_world/n/n6f78c51cd9bc'
    knowledge_knowledge_50.article =  importer.locate_object(Article, "id", Article, "id", 6149, {'id': 6149, 'excerpt': 'Some potatoes are irradiated.', 'kicker': 'Some potatoes are irradiated.', 'content': '<p>Potatoes were harvested in Hokkaido. The potatoes are delivered by air to various parts of Japan. However, if the potatoes sprout on the way to the destination, it is a big problem.</p>\r\n\r\n<p>The sprouts may contain toxins that are toxic to humans, making the potatoes unsaleable.</p>\r\n\r\n<p>What should we do?</p>\r\n\r\n<p>So....</p>\r\n\r\n<p>We irradiate them with radiation.</p>\r\n\r\n<p>Some potatoes are irradiated with gamma rays, a type of radiation that prevents them from sprouting. By destroying the tissue of the sprouts, cell division is prevented.</p>\r\n\r\n<p>Image 1</p>\r\n\r\n<p>Gamma ray irradiation is also used to sterilize food. This is to prevent food poisoning caused by salmonella and other bacteria.</p>\r\n\r\n<p>Sterilization using chemicals may leave chemical residues on the food or alter the food. On the other hand, with the amount of gamma-ray energy used in sterilization, such things do not happen. In this respect, it is safer than chemical sterilization.</p>\r\n\r\n<p>Heat sterilization may be the safest, but it often results in loss of food flavor.</p>\r\n\r\n<p>In foreign countries, many spices are sterilized with γ-rays, which can be used to sterilize spices and herbs without damaging their color or flavor. Irradiation of spices and herbs is also approved and practiced in the EU. 1</p>\r\n\r\n<p>Japan is the only developed country in the world where irradiation sterilization of spices is not approved. The reason is that Japanese people are not comfortable with the word "radiation," so currently in Japan, domestic irradiation of γ-rays to food is only used for potatoes.</p>\r\n\r\n<p>Image 2</p>\r\n\r\n<p>It is also used to sterilize ground beef, chicken, and frozen shrimp. Sterilization by radiation can be done reliably inside and without heating, so even frozen food can be processed. 1</p>\r\n\r\n<p>Another familiar example is the sterilization of disposable needles used in hospitals, which are sterilized by gamma rays.</p>\r\n\r\n<p>As mentioned earlier, irradiation does not cause food to become radioactive or to change its quality. However, after irradiation, the food is carefully inspected.</p>\r\n\r\n<p>Although radiation can cause damage to the human body if the exposure dose is too high, it is a matter of use.</p>\r\n\r\n<p></p>', 'references': '', 'rating': 0.0, 'rating_count': None, 'published_date': dateutil.parser.parse("2023-07-03T02:53:18.366157+00:00"), 'updated_date': dateutil.parser.parse("2023-07-03T02:53:18.372662+00:00")} ) 
    knowledge_knowledge_50.author =  importer.locate_object(UserAccount, "id", UserAccount, "id", 1, {'id': 1, 'password': 'pbkdf2_sha256$600000$Q9AwSzFqEXF1ueS21sGGfz$rZo+NVruXU5Zf5vp00wtuwLn0Z333sn5NtvS8VWKqds=', 'last_login': dateutil.parser.parse("2023-06-30T06:03:10.086511+00:00"), 'is_superuser': True, 'email': 'yurinakanishi33@gmail.com', 'name': 'yuri', 'is_active': True, 'is_staff': True} ) 
    knowledge_knowledge_50 = importer.save_or_locate(knowledge_knowledge_50)

    knowledge_knowledge_51 = Knowledge()
    knowledge_knowledge_51.name = '賢い人は自分のことをそんなに賢くないと思うし、愚かな人は自分のことを賢いと思い込む'
    knowledge_knowledge_51.slug = 'smart-people-think-they-are-not-so-smart,-and-stupid-people-think-they-are-smart-jp'
    knowledge_knowledge_51.language =  importer.locate_object(Language, "id", Language, "id", 2, {'id': 2, 'name': 'jp'} ) 
    knowledge_knowledge_51.genre_for_url =  importer.locate_object(GenreForURL, "id", GenreForURL, "id", 1, {'id': 1, 'name': 'knowledge'} ) 
    knowledge_knowledge_51.type = 'knowledge'
    knowledge_knowledge_51.notesite_url = 'https://note.com/argumented_world/n/n613c944c387f'
    knowledge_knowledge_51.article =  importer.locate_object(Article, "id", Article, "id", 6150, {'id': 6150, 'excerpt': '賢い人は自分のことをそんなに賢くないと思うし、愚かな人は自分のことを賢いと思い込む', 'kicker': '賢い人は自分のことをそんなに賢くないと思うし、愚かな人は自分のことを賢いと思い込む', 'content': "<p>ダニングクルーガー効果</p>\r\n\r\n<p>皆さんは、自分は周囲と比べてどのくらい能力があると感じていますか？どんな人も、自分が思っている能力と客観的に見た能力とにはギャップがあります。ギャップに関する現象で、ダニングクルーガー効果というものがあります。アメリカの社会心理学者のダニング氏とクルーガー氏が心理学科の学生に対して行なった実験では論理的思考、英語の文法、ユーモアのセンスについてのテストを受けてもらい、その後、心理学のクラスの中で自分がどのくらいのランクにいるのかを予想してもらいました。 結果は、テストの点数が低い人ほど、自分には論理的な能力があると判断する傾向がありました。一方で点数が高い人は、自分の能力を正しく、もしくは控えめに判断しました。つまり、有能な人は自分を過小評価し、有能でない人は自分を過大評価するということです。</p>\r\n\r\n<p>画像1</p>\r\n\r\n<p>このグラフはユーモアについての研究の結果です。英語の文法、論理的思考能力においても、同じようなグラフとなっています。縦軸（percentage）はテストの点数（予想の点数と実際の点数のどちらにも用います）です。横軸はテストの実際の点数によって、左から4つのグループに分けています。左端のグループ（Bottom Quartile）が一番テストの実際の点数が低く、右端のグループ（Top Quartile）が一番テストの実際の点数が高くなっています。濃い線（Perceived Avility）は、予想した得点。薄い線（Actual ability）は、実際の得点です。</p>\r\n\r\n<p>グラフを見て分かるとおり、一番有能でない左端のグループは約50点も自分の点数を上乗せして予想していました。 せめてもの救いは、左端のグループでも、一番能力がある右端のグループより能力が上だと思っているわけではなかったことです。この実験の論文がイグノーベル賞を受賞したこともあり、ダニングクルーガー効果は有名になりました。</p>\r\n\r\n<p>インポスター症候群</p>\r\n\r\n<p>先ほど、点数が高い人は自分の能力を控えめに判断する傾向があるといいましたが、この現象に似たもので、インポスター症候群というものがあります。 インポスター（Impostor）とは、ペテン師、詐欺師という意味で、能力があることを示す客観的な証拠があるにもかかわらず、自分は詐欺師であり、成功に値しないという考えを持ってしまう症状です。女性（仕事において）や有色人種（アメリカやヨーロッパにおいて）などのマイノリティー的な立場の人に多いといわれています。インポスター症候群に陥ると、自分の実力を肯定できず、「今の自分は偽物だ」「偶然上手くいっただけ」「タイミングが良かっただけ」などと思い、自分は実際より能力があると他人を信じ込ませることで今の立場を手に入れただけだと考えてしまいます。</p>\r\n\r\n<p>その結果、自分を追い込んでさらに頑張ってしまい、燃え尽きてしまうこともあります。 インポスター症候群は、多くの人（人口の約70％）が成長していく過程で経験するものであり、これを克服することで次のステージに進めるという意見もあります。</p>\r\n\r\n<p>能力はそんなにないのに自己評価が高すぎると、周りに煙たがられるかもしれませんし、能力はあるのに自己評価が低すぎると、精神的に参ってしまいます。どちらが高いかに関わらず、自己評価と実際の能力の差が大きすぎると、苦しい結果が待っているかもしれません。自分を俯瞰して見ることができたらいいのですが、なかなか難しいですね。</p>\r\n\r\n<p>「無能な人だけが自分を過大評価する」は間違い、本当は平均的な人でも自分を過大評価する</p>\r\n\r\n<p>「愚かな人は自分を高く評価する」というダニング＝クルーガー効果が近年は注目されていますが、実は自己に対する過大評価を行う傾</p>\r\n\r\n<p>gigazine.net</p>\r\n\r\n<p>(PDF) Unskilled and Unaware of It: How Difficulties in Recognizing One's Own Incompetence Lead to Inflated Self-Assessments</p>\r\n\r\n<p>PDF | People tend to hold overly favorable views of their abi</p>\r\n\r\n<p>www.researchgate.net</p>\r\n\r\n<p>インポスター症候群 - Wikipedia</p>\r\n\r\n<p>ja.wikipedia.org</p>\r\n\r\n<p>Dunning窶適ruger effect - Wikipedia</p>\r\n\r\n<p>en.wikipedia.org</p>\r\n\r\n<p>使用させて頂いた画像</p>\r\n\r\n<p>Photo by mauro mora on Unsplash</p>", 'references': '', 'rating': 0.0, 'rating_count': None, 'published_date': dateutil.parser.parse("2023-07-03T02:53:18.366157+00:00"), 'updated_date': dateutil.parser.parse("2023-07-03T02:53:18.372662+00:00")} ) 
    knowledge_knowledge_51.author =  importer.locate_object(UserAccount, "id", UserAccount, "id", 1, {'id': 1, 'password': 'pbkdf2_sha256$600000$Q9AwSzFqEXF1ueS21sGGfz$rZo+NVruXU5Zf5vp00wtuwLn0Z333sn5NtvS8VWKqds=', 'last_login': dateutil.parser.parse("2023-06-30T06:03:10.086511+00:00"), 'is_superuser': True, 'email': 'yurinakanishi33@gmail.com', 'name': 'yuri', 'is_active': True, 'is_staff': True} ) 
    knowledge_knowledge_51 = importer.save_or_locate(knowledge_knowledge_51)

    knowledge_knowledge_52 = Knowledge()
    knowledge_knowledge_52.name = 'Smart people think they are not so smart, and stupid people think they are smart.'
    knowledge_knowledge_52.slug = 'smart-people-think-they-are-not-so-smart,-and-stupid-people-think-they-are-smart'
    knowledge_knowledge_52.language =  importer.locate_object(Language, "id", Language, "id", 1, {'id': 1, 'name': 'en'} ) 
    knowledge_knowledge_52.genre_for_url =  importer.locate_object(GenreForURL, "id", GenreForURL, "id", 1, {'id': 1, 'name': 'knowledge'} ) 
    knowledge_knowledge_52.type = 'knowledge'
    knowledge_knowledge_52.notesite_url = 'https://note.com/argumented_world/n/n613c944c387f'
    knowledge_knowledge_52.article =  importer.locate_object(Article, "id", Article, "id", 6151, {'id': 6151, 'excerpt': 'Smart people think they are not so smart, and stupid people think they are smart.', 'kicker': 'Smart people think they are not so smart, and stupid people think they are smart.', 'content': "<p>## The Dunning-Kruger Effect</p>\r\n\r\n<p>How capable do you feel you are compared to those around you?</p>\r\n\r\n<p>Every person has a gap between what he or she thinks he or she is capable of and what he or she sees objectively. One phenomenon related to the gap is the Dunning-Kruger effect.</p>\r\n\r\n<p>In an experiment conducted by Dunning and Krueger, an American social psychologist, on psychology students</p>\r\n\r\n<p>The students were given tests on logical thinking, English grammar, and sense of humor, and then asked to predict where they would rank in a psychology class.</p>\r\n\r\n<p>The results showed that those with lower test scores were more likely to judge themselves as having logical abilities. On the other hand, those with higher scores judged themselves to be either correct or modest in their abilities.</p>\r\n\r\n<p>In other words, competent people underestimated themselves and less competent people overestimated themselves.</p>\r\n\r\n<p>Image 1</p>\r\n\r\n<p>This graph is the result of a study on humor. The graph is similar for English grammar and logical thinking ability.</p>\r\n\r\n<p>The vertical axis (PERCENTAGE) is the test score (used for both predicted and actual scores).</p>\r\n\r\n<p>The horizontal axis divides the graph into four groups from left to right according to the actual test scores. The leftmost group (Bottom Quartile) has the lowest actual test score and the rightmost group (Top Quartile) has the highest actual test score.</p>\r\n\r\n<p>The dark line (Perceived Avility) is the predicted score. The thin line (Actual ability) is the actual score.</p>\r\n\r\n<p>As you can see from the graph, the least competent group on the left end predicted about 50 points above their own score.</p>\r\n\r\n<p>The saving grace, at least, is that even the left-most group did not think they were more capable than the right-most group, which was the most capable.</p>\r\n\r\n<p>The Dunning-Krueger effect became famous when a paper on this experiment won the Ig Nobel Prize.</p>\r\n\r\n<p>Imposter Syndrome</p>\r\n\r\n<p>I mentioned earlier that people with high scores tend to understate their abilities, and something similar to this phenomenon is called Imposter Syndrome.</p>\r\n\r\n<p>Impostor means a crook or a swindler, and it is a symptom of the belief that one is a fraud and does not deserve success, despite objective evidence of competence.</p>\r\n\r\n<p>It is said to be more common among women (in work) and people of color (in the U.S. and Europe) and other minority statuses.</p>\r\n\r\n<p>People who suffer from imposter syndrome are unable to affirm their own abilities and believe that they are faking it, that they just happened to do well, or that their timing was good, and that they only got where they are by convincing others that they are more capable than they actually are.</p>\r\n\r\n<p>As a result, they may push themselves to work even harder and burn out.</p>\r\n\r\n<p>Some say that the Imposter Syndrome is something that many people (about 70% of the population) experience as they grow up, and that overcoming it will help them move on to the next stage of their lives.</p>\r\n\r\n<p>Self-evaluation</p>\r\n\r\n<p>If your self-esteem is too high even though you are not that capable, you may be smothered by those around you, and if you are capable but your self-esteem is too low, you may have a mental breakdown.</p>\r\n\r\n<p>Regardless of which is higher, if the gap between your self-evaluation and your actual ability is too great, you may suffer the consequences.</p>\r\n\r\n<p>It would be nice if we could look at ourselves from a bird's eye view, but it is not easy.</p>\r\n\r\n<p></p>", 'references': '', 'rating': 0.0, 'rating_count': None, 'published_date': dateutil.parser.parse("2023-07-03T02:53:18.366157+00:00"), 'updated_date': dateutil.parser.parse("2023-07-03T02:53:18.372662+00:00")} ) 
    knowledge_knowledge_52.author =  importer.locate_object(UserAccount, "id", UserAccount, "id", 1, {'id': 1, 'password': 'pbkdf2_sha256$600000$Q9AwSzFqEXF1ueS21sGGfz$rZo+NVruXU5Zf5vp00wtuwLn0Z333sn5NtvS8VWKqds=', 'last_login': dateutil.parser.parse("2023-06-30T06:03:10.086511+00:00"), 'is_superuser': True, 'email': 'yurinakanishi33@gmail.com', 'name': 'yuri', 'is_active': True, 'is_staff': True} ) 
    knowledge_knowledge_52 = importer.save_or_locate(knowledge_knowledge_52)

    knowledge_knowledge_53 = Knowledge()
    knowledge_knowledge_53.name = 'ショッキングなニュースは、みんなが求めているもの'
    knowledge_knowledge_53.slug = 'shocking-news-is-what-everyone-is-looking-for-jp'
    knowledge_knowledge_53.language =  importer.locate_object(Language, "id", Language, "id", 2, {'id': 2, 'name': 'jp'} ) 
    knowledge_knowledge_53.genre_for_url =  importer.locate_object(GenreForURL, "id", GenreForURL, "id", 1, {'id': 1, 'name': 'knowledge'} ) 
    knowledge_knowledge_53.type = 'knowledge'
    knowledge_knowledge_53.notesite_url = 'https://note.com/argumented_world/n/nb0367cdd61e7'
    knowledge_knowledge_53.article =  importer.locate_object(Article, "id", Article, "id", 6152, {'id': 6152, 'excerpt': 'ショッキングなニュースは、みんなが求めているもの', 'kicker': 'ショッキングなニュースは、みんなが求めているもの', 'content': '<p>新聞がイギリスに初めて登場した1800年頃、人々に新聞はほとんど浸透していませんでした。 理由は主に3つありますが、当時のイギリスの人口の８割が、農村に住んでいる農業の労働者だったことが関係しています。</p>\r\n\r\n<p>1，その当時、文字を読める人はほとんどいなかった。</p>\r\n\r\n<p>2，労働者に新聞を定期購読するお金の余裕はなかった。</p>\r\n\r\n<p>3，当時の新聞にのっている情報はヨーロッパの世界情勢や東インド会社の株価などで、労働者達にとってはほとんど関係のない情報だった。</p>\r\n\r\n<p>当時の新聞は労働者にとっては、何が書いてるかわかんないし、高いし、どうでもいいし、みたいな感じだったんでしょう。</p>\r\n\r\n<p>そう考えると当時の新聞は、今の私たちに取ってみればＶＲゴーグルみたいな感じでしょうか？一部の人たちは使いこなしているけれど、一般庶民にとってみれば、高いし、今後何に応用されるのかのか分からないし、、、みたいな。（すみません、VRゴーグルを批判しているわけではありません。笑）</p>\r\n\r\n<p>このように、最初は一部の実業家や資本家だけに読まれていた新聞ですが、時代と共に徐々に庶民にも浸透していきました。</p>\r\n\r\n<p>理由は、先程の新聞が普及しなかった３つの理由のほぼ逆ですね。</p>\r\n\r\n<p>1，文字が読める人が増えた。</p>\r\n\r\n<p>2，新聞の税金が安くなり、庶民にも手が届くようになった。</p>\r\n\r\n<p>3，挿し絵が入ったことにより、読みやすくなった（文字が読めない人にも挿し絵と一緒に読み聞かせることができるようになった）。</p>\r\n\r\n<p>4，人々が好きな「ショッキングな事件」が新聞にのるようになった。</p>\r\n\r\n<p>挿し絵はかなりの変化だったと思います。今の新聞には挿し絵（写真）が入っているのは当たり前ですが、写真が入ってない文字だらけの新聞を想像してみると、読むのに労力がいりそうです。笑</p>\r\n\r\n<p>挿絵は、ショッキングな殺人の様子がその記事の文章と一緒に描かれることが多かったようで、読者も新聞に対して過激な事件を求めていました。「こんなに残酷な殺人が！」とかいう記事は当たり前で、実際の事件は盛りに盛られて報道されていました。挙げ句の果てには、全て作り話の記事もあったそうです。この頃から、現代のマスコミのような、刺激的で感情を煽るような情報を伝えるという構造ができあがってきたようです。</p>\r\n\r\n<p>『朝日百科\u3000世界の歴史\u300010\u3000ー19世紀ー』\u30001991年\u3000朝日新聞社 D-722</p>\r\n\r\n<p>Pexels on Hasan Albari</p>', 'references': '', 'rating': 0.0, 'rating_count': None, 'published_date': dateutil.parser.parse("2023-07-03T02:53:18.366157+00:00"), 'updated_date': dateutil.parser.parse("2023-07-03T02:53:18.372662+00:00")} ) 
    knowledge_knowledge_53.author =  importer.locate_object(UserAccount, "id", UserAccount, "id", 1, {'id': 1, 'password': 'pbkdf2_sha256$600000$Q9AwSzFqEXF1ueS21sGGfz$rZo+NVruXU5Zf5vp00wtuwLn0Z333sn5NtvS8VWKqds=', 'last_login': dateutil.parser.parse("2023-06-30T06:03:10.086511+00:00"), 'is_superuser': True, 'email': 'yurinakanishi33@gmail.com', 'name': 'yuri', 'is_active': True, 'is_staff': True} ) 
    knowledge_knowledge_53 = importer.save_or_locate(knowledge_knowledge_53)

    knowledge_knowledge_54 = Knowledge()
    knowledge_knowledge_54.name = 'Shocking news is what everyone is looking for'
    knowledge_knowledge_54.slug = 'shocking-news-is-what-everyone-is-looking-for'
    knowledge_knowledge_54.language =  importer.locate_object(Language, "id", Language, "id", 1, {'id': 1, 'name': 'en'} ) 
    knowledge_knowledge_54.genre_for_url =  importer.locate_object(GenreForURL, "id", GenreForURL, "id", 1, {'id': 1, 'name': 'knowledge'} ) 
    knowledge_knowledge_54.type = 'knowledge'
    knowledge_knowledge_54.notesite_url = 'https://note.com/argumented_world/n/nb0367cdd61e7'
    knowledge_knowledge_54.article =  importer.locate_object(Article, "id", Article, "id", 6153, {'id': 6153, 'excerpt': 'Shocking news is what everyone is looking for', 'kicker': 'Shocking news is what everyone is looking for', 'content': '<p>When newspapers first appeared in England around 1800, they had little penetration among the people.</p>\r\n\r\n<p>There were three main reasons. 80% of the population in England at that time were agricultural laborers living in rural areas.</p>\r\n\r\n<p>1、Few people could read at that time.</p>\r\n\r\n<p>2、Few laborers could afford newspaper subscriptions.</p>\r\n\r\n<p>3、Information in the newspapers at that time was mostly irrelevant to the workers, such as world affairs in Europe and stock prices of the East India Company.</p>\r\n\r\n<p>Newspapers at that time were not important to workers because they were expensive and they did not know what was written in them.</p>\r\n\r\n<p>In that sense, newspapers back then were like VR goggles for us today, right? Some people are familiar with it, but for the general public, it is expensive and they don\'t know what it will be used for in the future. (Sorry, I am not criticizing VR goggles. (Sorry, I am not criticizing VR goggles.)</p>\r\n\r\n<p>(Sorry, I\'m not criticizing VR goggles.</p>\r\n\r\n<p>As you can see, newspapers were initially read only by a few businessmen and capitalists, but over time, they gradually spread to the general public.</p>\r\n\r\n<p>The reason is almost the opposite of the three reasons why newspapers did not spread as widely as they did earlier.</p>\r\n\r\n<p>1 The number of people who could read increased.</p>\r\n\r\n<p>2、Taxes on newspapers became cheaper and more accessible to the general public.</p>\r\n\r\n<p>3、Illustrations made it easier to read (people who cannot read can now read along with the illustrations).</p>\r\n\r\n<p>4, People\'s favorite "shocking incidents" are now published in the newspaper.</p>\r\n\r\n<p>I think the illustrations were quite a change. Nowadays, it is common for newspapers to have illustrations (pictures), but imagine a newspaper full of text without pictures, it would take a lot of effort to read it. LOL.</p>\r\n\r\n<p>It seems that the illustrations often depicted shocking murders along with the text of that article, and readers were also looking for extreme incidents for their newspapers. Articles like "Such a brutal murder!" was commonplace, and the actual incidents were reported in a heaping heap. To top it all off, there were articles that were all made up stories.</p>\r\n\r\n<p>It seems that from this time on, a structure similar to that of today\'s mass media was established to convey information in a stimulating and emotionally-charged manner.</p>\r\n\r\n<p></p>', 'references': '', 'rating': 0.0, 'rating_count': None, 'published_date': dateutil.parser.parse("2023-07-03T02:53:18.366157+00:00"), 'updated_date': dateutil.parser.parse("2023-07-03T02:53:18.372662+00:00")} ) 
    knowledge_knowledge_54.author =  importer.locate_object(UserAccount, "id", UserAccount, "id", 1, {'id': 1, 'password': 'pbkdf2_sha256$600000$Q9AwSzFqEXF1ueS21sGGfz$rZo+NVruXU5Zf5vp00wtuwLn0Z333sn5NtvS8VWKqds=', 'last_login': dateutil.parser.parse("2023-06-30T06:03:10.086511+00:00"), 'is_superuser': True, 'email': 'yurinakanishi33@gmail.com', 'name': 'yuri', 'is_active': True, 'is_staff': True} ) 
    knowledge_knowledge_54 = importer.save_or_locate(knowledge_knowledge_54)

    knowledge_knowledge_55 = Knowledge()
    knowledge_knowledge_55.name = '奴隷と交換された貝'
    knowledge_knowledge_55.slug = 'shells-exchanged-for-slaves-jp'
    knowledge_knowledge_55.language =  importer.locate_object(Language, "id", Language, "id", 2, {'id': 2, 'name': 'jp'} ) 
    knowledge_knowledge_55.genre_for_url =  importer.locate_object(GenreForURL, "id", GenreForURL, "id", 1, {'id': 1, 'name': 'knowledge'} ) 
    knowledge_knowledge_55.type = 'knowledge'
    knowledge_knowledge_55.notesite_url = 'https://note.com/argumented_world/n/n24d7b4075c66'
    knowledge_knowledge_55.article =  importer.locate_object(Article, "id", Article, "id", 6154, {'id': 6154, 'excerpt': '奴隷と交換された貝', 'kicker': '奴隷と交換された貝', 'content': '<p>タカラガイは海に生息する貝です。裏を返すと女性器の形をしていることや、妊婦のお腹のふくらみに似ていること、そして生命の源である水と関係することから、古くから安産のシンボルとして使われています。日本でも子安貝と呼ばれ、出産の時に手に握ると安産になると信じられてきました。貨幣の「貨」の漢字には「貝」がつくように、貝は貨幣（お金）としても使われた歴史があります。貝は偽造が難しく、壊れにくくて長持ちすることなどから貨幣に適しています。特にタカラガイは大きさと形がそろっているので、貨幣に向いています。</p>\r\n\r\n<p>画像2</p>\r\n\r\n<p>奴隷と交換</p>\r\n\r\n<p>18世紀、モルディブ産のタカラガイは奴隷と交換する貨幣として使われました。ヨーロッパの船乗りたちは無数のモルディブ産タカラガイを仕入れ、それを西アフリカ（上の地図の左下の地域です）で人間の奴隷と交換しました。貝殻が支払われると奴隷は船に乗せられて大西洋を横断し、多くはカリブ海の大農園で働かされました。</p>\r\n\r\n<p>画像3</p>\r\n\r\n<p>ヨーロッパの奴隷商人は、アフリカの王や商人との取引には貝殻を使うと具合がよいことを知っていました(弾薬、武器、そのほかの工業製品も人間との交換に使われました)。取るに足らない値段の貝殻を輸入して奴隷と交換するという取引は大きな利益を生みました。</p>\r\n\r\n<p>奴隷１人に対して、多いときには15万個のタカラガイが交換されたといいます。</p>\r\n\r\n<p>1807年にイギリス政府が奴隷の売買を禁止したために、タカラガイと奴隷の交換は終わりました。しかし次に、タカラガイはヤシ油との交換に使われました。当時は世界中で使用されるヤシ油のほとんどが西アフリカで作られていました。イギリスの貿易商はモルディヴのタカラガイでヤシ油を買い続けました。ヤシ油は、この時代に起った産業革命と密接な関係があります。 ギアなど機械の動きをなめらかにする機械油として、住居や工場のランプの油として、そして工場の汚れを落とす洗剤の原料として大量に使われました。</p>\r\n\r\n<p>しかし、モルディブ以外の地域でもタカラガイが発見されたことによりタカラガイの流通料がとても増え、タカラガイの価値はガクンと下がりました。（あるものが増えるに従って、そのものの価値は下がります。）たちまち、手のひらいっぱいのタカラガイが何の価値もなくなってしまいました。そしてタカラガイの貨幣としての交換は終わりを迎えました。</p>\r\n\r\n<p>『貝と文明』\u3000ヘレン スケールズ (著)\u3000\u3000林 裕美子 (訳)</p>\r\n\r\n<p>Thanasis Papazacharias on Pixabay</p>\r\n\r\n<p>By The original uploader was Julo at Slovak Wikipedia.</p>', 'references': '', 'rating': 0.0, 'rating_count': None, 'published_date': dateutil.parser.parse("2023-07-03T02:53:18.366157+00:00"), 'updated_date': dateutil.parser.parse("2023-07-03T02:53:18.372662+00:00")} ) 
    knowledge_knowledge_55.author =  importer.locate_object(UserAccount, "id", UserAccount, "id", 1, {'id': 1, 'password': 'pbkdf2_sha256$600000$Q9AwSzFqEXF1ueS21sGGfz$rZo+NVruXU5Zf5vp00wtuwLn0Z333sn5NtvS8VWKqds=', 'last_login': dateutil.parser.parse("2023-06-30T06:03:10.086511+00:00"), 'is_superuser': True, 'email': 'yurinakanishi33@gmail.com', 'name': 'yuri', 'is_active': True, 'is_staff': True} ) 
    knowledge_knowledge_55 = importer.save_or_locate(knowledge_knowledge_55)

    knowledge_knowledge_56 = Knowledge()
    knowledge_knowledge_56.name = 'Shells exchanged for slaves'
    knowledge_knowledge_56.slug = 'shells-exchanged-for-slaves'
    knowledge_knowledge_56.language =  importer.locate_object(Language, "id", Language, "id", 1, {'id': 1, 'name': 'en'} ) 
    knowledge_knowledge_56.genre_for_url =  importer.locate_object(GenreForURL, "id", GenreForURL, "id", 1, {'id': 1, 'name': 'knowledge'} ) 
    knowledge_knowledge_56.type = 'knowledge'
    knowledge_knowledge_56.notesite_url = 'https://note.com/argumented_world/n/n24d7b4075c66'
    knowledge_knowledge_56.article =  importer.locate_object(Article, "id", Article, "id", 6155, {'id': 6155, 'excerpt': 'Shells exchanged for slaves', 'kicker': 'Shells exchanged for slaves', 'content': '<p>The cowry mussel (Leptinotarsa decemlineata)</p>\r\n\r\n<p>The takara mussel is a shellfish that lives in the sea.</p>\r\n\r\n<p>They have long been used as a symbol of safe childbirth because they resemble a woman\'s vagina when turned inside out, resemble the bulge of a pregnant woman\'s stomach, and are related to water, the source of life.</p>\r\n\r\n<p>In Japan, it is also called "Ko-yasu-gai" (childbirth shell), and it has been believed that holding it in one\'s hand during childbirth will bring about an easy delivery.</p>\r\n\r\n<p>Shells have a long history of use as currency (money), as the Chinese character for "currency" in the word "coin" has the character for "shell. Shells are difficult to counterfeit, and their longevity and resistance to breakage make them suitable for use as money.</p>\r\n\r\n<p>In particular, the shell is suitable for use as money because of its uniform size and shape.</p>\r\n\r\n<p>Image 2</p>\r\n\r\n<p>Exchange for Slaves</p>\r\n\r\n<p>In the 18th century, takara mussels from the Maldives were used as currency in exchange for slaves.</p>\r\n\r\n<p>Image 1</p>\r\n\r\n<p>European sailors purchased countless numbers of Maldivian cockles and exchanged them for human slaves in West Africa (the lower left region of the map above).</p>\r\n\r\n<p>Once paid for their shells, the slaves were loaded onto ships and sailed across the Atlantic, often to work on large plantations in the Caribbean.</p>\r\n\r\n<p>Image 3.</p>\r\n\r\n<p>European slave traders found it expedient to use shells to trade with African kings and merchants (ammunition, weapons, and other industrial goods were also traded for humans).</p>\r\n\r\n<p>The trade of importing shells at insignificant prices and exchanging them for slaves was highly profitable.</p>\r\n\r\n<p>At one time, as many as 150,000 cockles were exchanged for each slave.</p>\r\n\r\n<p>Exchange for Coconut Oil</p>\r\n\r\n<p>In 1807, the British government banned the buying and selling of slaves, and the trade ended.</p>\r\n\r\n<p>Next, however, the takara mussels were exchanged for coconut oil.</p>\r\n\r\n<p>At that time, most of the coconut oil used in the world was produced in West Africa. British traders continued to buy coconut oil from the Maldives\' takara mussels.</p>\r\n\r\n<p>Coconut oil is closely related to the Industrial Revolution that took place during this period.</p>\r\n\r\n<p>It was used in large quantities as machine oil to make gears and other machinery run smoothly, as oil for lamps in homes and factories, and as an ingredient in detergents to clean dirt from factories.</p>\r\n\r\n<p>The Plunge in the Value of the Takara Mussel</p>\r\n\r\n<p>However, with the discovery of takara mussels in other parts of the Maldives, their value dropped dramatically. （The value of the shellfish dropped dramatically.)</p>\r\n\r\n<p>Soon, a palmful of cockles was worth nothing.</p>\r\n\r\n<p>The exchange of cockles as money came to an end.</p>\r\n\r\n<p>Other articles, references, etc.</p>\r\n\r\n<p>Thank you for reading to the end.</p>\r\n\r\n<p>I have written many other articles.</p>\r\n\r\n<p></p>', 'references': '', 'rating': 0.0, 'rating_count': None, 'published_date': dateutil.parser.parse("2023-07-03T02:53:18.366157+00:00"), 'updated_date': dateutil.parser.parse("2023-07-03T02:53:18.372662+00:00")} ) 
    knowledge_knowledge_56.author =  importer.locate_object(UserAccount, "id", UserAccount, "id", 1, {'id': 1, 'password': 'pbkdf2_sha256$600000$Q9AwSzFqEXF1ueS21sGGfz$rZo+NVruXU5Zf5vp00wtuwLn0Z333sn5NtvS8VWKqds=', 'last_login': dateutil.parser.parse("2023-06-30T06:03:10.086511+00:00"), 'is_superuser': True, 'email': 'yurinakanishi33@gmail.com', 'name': 'yuri', 'is_active': True, 'is_staff': True} ) 
    knowledge_knowledge_56 = importer.save_or_locate(knowledge_knowledge_56)

    knowledge_knowledge_57 = Knowledge()
    knowledge_knowledge_57.name = ''
    knowledge_knowledge_57.slug = 'rock-music-is-not-stone-music-jp'
    knowledge_knowledge_57.language =  importer.locate_object(Language, "id", Language, "id", 2, {'id': 2, 'name': 'jp'} ) 
    knowledge_knowledge_57.genre_for_url =  importer.locate_object(GenreForURL, "id", GenreForURL, "id", 1, {'id': 1, 'name': 'knowledge'} ) 
    knowledge_knowledge_57.type = 'knowledge'
    knowledge_knowledge_57.notesite_url = 'https://note.com/argumented_world/n/n75f6ec95696f'
    knowledge_knowledge_57.article =  importer.locate_object(Article, "id", Article, "id", 6156, {'id': 6156, 'excerpt': '', 'kicker': '', 'content': '<p>Rock in rock music means rock (shaking, vibrating). Queen\'s "We will rock you" played at soccer games means something like "I will shake you (your values), I will beat you.</p>\r\n\r\n<p></p>', 'references': '', 'rating': 0.0, 'rating_count': None, 'published_date': dateutil.parser.parse("2023-07-03T02:53:18.366157+00:00"), 'updated_date': dateutil.parser.parse("2023-07-03T02:53:18.372662+00:00")} ) 
    knowledge_knowledge_57.author =  importer.locate_object(UserAccount, "id", UserAccount, "id", 1, {'id': 1, 'password': 'pbkdf2_sha256$600000$Q9AwSzFqEXF1ueS21sGGfz$rZo+NVruXU5Zf5vp00wtuwLn0Z333sn5NtvS8VWKqds=', 'last_login': dateutil.parser.parse("2023-06-30T06:03:10.086511+00:00"), 'is_superuser': True, 'email': 'yurinakanishi33@gmail.com', 'name': 'yuri', 'is_active': True, 'is_staff': True} ) 
    knowledge_knowledge_57 = importer.save_or_locate(knowledge_knowledge_57)

    knowledge_knowledge_58 = Knowledge()
    knowledge_knowledge_58.name = 'Rock music is not stone music.'
    knowledge_knowledge_58.slug = 'rock-music-is-not-stone-music'
    knowledge_knowledge_58.language =  importer.locate_object(Language, "id", Language, "id", 1, {'id': 1, 'name': 'en'} ) 
    knowledge_knowledge_58.genre_for_url =  importer.locate_object(GenreForURL, "id", GenreForURL, "id", 1, {'id': 1, 'name': 'knowledge'} ) 
    knowledge_knowledge_58.type = 'knowledge'
    knowledge_knowledge_58.notesite_url = 'https://note.com/argumented_world/n/n75f6ec95696f'
    knowledge_knowledge_58.article =  importer.locate_object(Article, "id", Article, "id", 6157, {'id': 6157, 'excerpt': 'Rock music is not stone music.', 'kicker': 'Rock music is not stone music.', 'content': '<p>Rock in rock music means rock (shaking, vibrating). Queen\'s "We will rock you" played at soccer games means something like "I will shake you (your values), I will beat you.</p>\r\n\r\n<p></p>', 'references': '', 'rating': 0.0, 'rating_count': None, 'published_date': dateutil.parser.parse("2023-07-03T02:53:18.366157+00:00"), 'updated_date': dateutil.parser.parse("2023-07-03T02:53:18.372662+00:00")} ) 
    knowledge_knowledge_58.author =  importer.locate_object(UserAccount, "id", UserAccount, "id", 1, {'id': 1, 'password': 'pbkdf2_sha256$600000$Q9AwSzFqEXF1ueS21sGGfz$rZo+NVruXU5Zf5vp00wtuwLn0Z333sn5NtvS8VWKqds=', 'last_login': dateutil.parser.parse("2023-06-30T06:03:10.086511+00:00"), 'is_superuser': True, 'email': 'yurinakanishi33@gmail.com', 'name': 'yuri', 'is_active': True, 'is_staff': True} ) 
    knowledge_knowledge_58 = importer.save_or_locate(knowledge_knowledge_58)

    knowledge_knowledge_59 = Knowledge()
    knowledge_knowledge_59.name = '『一汁一菜でよいという提案』を読んで'
    knowledge_knowledge_59.slug = 'one-soup-and-one-vegetable-is-enough-jp'
    knowledge_knowledge_59.language =  importer.locate_object(Language, "id", Language, "id", 2, {'id': 2, 'name': 'jp'} ) 
    knowledge_knowledge_59.genre_for_url =  importer.locate_object(GenreForURL, "id", GenreForURL, "id", 1, {'id': 1, 'name': 'knowledge'} ) 
    knowledge_knowledge_59.type = 'knowledge'
    knowledge_knowledge_59.notesite_url = 'https://note.com/argumented_world/n/na9d0bc6b39aa'
    knowledge_knowledge_59.article =  importer.locate_object(Article, "id", Article, "id", 6158, {'id': 6158, 'excerpt': '『一汁一菜でよいという提案』を読んで', 'kicker': '『一汁一菜でよいという提案』を読んで', 'content': '<p>家庭で料理を作っている主婦（主夫）の方々から大絶賛されている『一汁一菜でよいという提案』を読みました。</p>\r\n\r\n<p>この本に書いてあることを一言で言うと、「そんなに頑張って見栄を張って料理をつくらなくても大丈夫ですよ。」だと思います。</p>\r\n\r\n<p>この本を読んで、なるほどと思ったところを紹介します。</p>\r\n\r\n<p>◇</p>\r\n\r\n<p>家庭料理は、具材や作る人の都合によって、その時次第でおいしい、おいしくないがあってもいい。家庭料理はいつもおいしい必要はない。いつも豪華でおいしい料理にしようとしていては疲れてしまう。</p>\r\n\r\n<p>日本にはハレとケという考え方がある。ハレは、特別な日やお祝い事の時（友人がきたとき、外で食べるとき、誕生日会など）のこと。ケは、それ以外の普段の生活。現代の私たちの生活は、ハレとケがごっちゃになって、いつもハレを目指しているようなもの。</p>\r\n\r\n<p>色々な本やテレビ番組で、「家庭料理は一手間かけることが大事」といっているが、手間をかけないのが家庭料理なのではないか。</p>\r\n\r\n<p>味噌汁に冷蔵庫の余り物を入れて、それとごはんがあれば立派な食事ではないか。</p>\r\n\r\n<p>◇</p>\r\n\r\n<p>感想</p>\r\n\r\n<p>味噌汁って、何を入れても合うんですよね。トマトでも、キュウリでも、肉でも、魚でも。この味噌汁を使わない手はないと思いました。</p>\r\n\r\n<p>誰しもがどこかで気付いていることですが、ほとんどの人は、多くのものを求めなければ十分に満足して生きていけます。私も、一汁一菜、実践してみようと思います。</p>\r\n\r\n<p>『一汁一菜でよいという提案』土井 善晴</p>', 'references': '', 'rating': 0.0, 'rating_count': None, 'published_date': dateutil.parser.parse("2023-07-03T02:53:18.366157+00:00"), 'updated_date': dateutil.parser.parse("2023-07-03T02:53:18.372662+00:00")} ) 
    knowledge_knowledge_59.author =  importer.locate_object(UserAccount, "id", UserAccount, "id", 1, {'id': 1, 'password': 'pbkdf2_sha256$600000$Q9AwSzFqEXF1ueS21sGGfz$rZo+NVruXU5Zf5vp00wtuwLn0Z333sn5NtvS8VWKqds=', 'last_login': dateutil.parser.parse("2023-06-30T06:03:10.086511+00:00"), 'is_superuser': True, 'email': 'yurinakanishi33@gmail.com', 'name': 'yuri', 'is_active': True, 'is_staff': True} ) 
    knowledge_knowledge_59 = importer.save_or_locate(knowledge_knowledge_59)

    knowledge_knowledge_60 = Knowledge()
    knowledge_knowledge_60.name = 'One Soup and One Vegetable is Enough'
    knowledge_knowledge_60.slug = 'one-soup-and-one-vegetable-is-enough'
    knowledge_knowledge_60.language =  importer.locate_object(Language, "id", Language, "id", 1, {'id': 1, 'name': 'en'} ) 
    knowledge_knowledge_60.genre_for_url =  importer.locate_object(GenreForURL, "id", GenreForURL, "id", 1, {'id': 1, 'name': 'knowledge'} ) 
    knowledge_knowledge_60.type = 'knowledge'
    knowledge_knowledge_60.notesite_url = 'https://note.com/argumented_world/n/na9d0bc6b39aa'
    knowledge_knowledge_60.article =  importer.locate_object(Article, "id", Article, "id", 6159, {'id': 6159, 'excerpt': 'One Soup and One Vegetable is Enough', 'kicker': 'One Soup and One Vegetable is Enough', 'content': '<p>I read the book "The Proposal that One Soup and One Vegetable is Enough," which has been highly praised by housewives (househusbands) who cook at home.</p>\r\n\r\n<p>In a nutshell, what the book says is, "You don\'t have to work so hard to make your food look good." I think that\'s what it says.</p>\r\n\r\n<p>Here are some of the things I found in the book.</p>\r\n\r\n<p>The book is a good introduction to home cooking.</p>\r\n\r\n<p>Home cooking can be good or bad depending on the ingredients and the convenience of the cook. Home cooking does not always have to be delicious. If you always try to make it luxurious and delicious, you will get tired.</p>\r\n\r\n<p>In Japan, there is a concept of hare and ke. Hare" refers to special occasions and celebrations (when friends come over, when eating out, birthday parties, etc.). Ké refers to the rest of our everyday life. In our modern lives, hare and ke are mixed up, and we are always aiming for hare.</p>\r\n\r\n<p>Various books and TV programs say, "Home cooking is all about putting in the extra effort," but I think home cooking is about not putting in the extra effort.</p>\r\n\r\n<p>A bowl of miso soup with leftover food from the refrigerator and rice is a fine meal.</p>\r\n\r\n<p>About</p>\r\n\r\n<p>Impression</p>\r\n\r\n<p>Miso soup goes well with anything. Whether it is tomatoes, cucumbers, meat, or fish. I thought there was no way not to use this miso soup.</p>\r\n\r\n<p>As everyone realizes at some point, most people can live contentedly enough if they don\'t ask for much. I, too, will try to practice one soup and one vegetable.</p>\r\n\r\n<p></p>', 'references': '', 'rating': 0.0, 'rating_count': None, 'published_date': dateutil.parser.parse("2023-07-03T02:53:18.366157+00:00"), 'updated_date': dateutil.parser.parse("2023-07-03T02:53:18.372662+00:00")} ) 
    knowledge_knowledge_60.author =  importer.locate_object(UserAccount, "id", UserAccount, "id", 1, {'id': 1, 'password': 'pbkdf2_sha256$600000$Q9AwSzFqEXF1ueS21sGGfz$rZo+NVruXU5Zf5vp00wtuwLn0Z333sn5NtvS8VWKqds=', 'last_login': dateutil.parser.parse("2023-06-30T06:03:10.086511+00:00"), 'is_superuser': True, 'email': 'yurinakanishi33@gmail.com', 'name': 'yuri', 'is_active': True, 'is_staff': True} ) 
    knowledge_knowledge_60 = importer.save_or_locate(knowledge_knowledge_60)

    knowledge_knowledge_61 = Knowledge()
    knowledge_knowledge_61.name = '鉄道が庶民に旅行を広めた'
    knowledge_knowledge_61.slug = 'railroads-spread-travel-to-the-common-people-jp'
    knowledge_knowledge_61.language =  importer.locate_object(Language, "id", Language, "id", 2, {'id': 2, 'name': 'jp'} ) 
    knowledge_knowledge_61.genre_for_url =  importer.locate_object(GenreForURL, "id", GenreForURL, "id", 1, {'id': 1, 'name': 'knowledge'} ) 
    knowledge_knowledge_61.type = 'knowledge'
    knowledge_knowledge_61.notesite_url = 'https://note.com/argumented_world/n/n48f8cd72a255'
    knowledge_knowledge_61.article =  importer.locate_object(Article, "id", Article, "id", 6160, {'id': 6160, 'excerpt': '鉄道が庶民に旅行を広めた', 'kicker': '鉄道が庶民に旅行を広めた', 'content': "<p>表紙の写真は1890年頃のイギリス、ブライトンの海水浴場の様子です。</p>\r\n\r\n<p>交通手段が発達していない時代では、旅行は貴族、ジェントリー階級や地主、都市の裕福な商工業者の特権でした。</p>\r\n\r\n<p>裕福な人々にとっては、移動、旅行は生活に欠かせない一部だったと言えます。イギリスでは、全国に領土を持つ貴族、ジェントリーは、互いに舞踏会などに招待しあい、各地を移動していました。</p>\r\n\r\n<p>旅行は貴族社会のまとまりを強め、有力者と人脈を作り、結婚相手を探すための、彼らにとっての「仕事」でした。</p>\r\n\r\n<p>リゾート地はこういった貴族たちの社交の場として開拓されていきました。しかし、鉄道などの発達によって民衆に開放されていきます。</p>\r\n\r\n<p>＊</p>\r\n\r\n<p>ブライトンは貴族たちの海岸リゾート地でしたが、1841年、ロンドン=ブライトン鉄道が開通し、２つの都市間の所要時間は2時間にまで短縮されました。さらに料金も値下げされていったことにより、ブライトンには一般の行楽客が殺到するようになりました。</p>\r\n\r\n<p>画像4</p>\r\n\r\n<p>ブライトン（イギリス）1890年頃</p>\r\n\r\n<p>＊</p>\r\n\r\n<p>マーゲートは、18世紀にはテムズ川を下って行楽客を運ぶっ定期船が運航しており、1820年頃には蒸気船が就航していました。マーゲートは、このアクセスの便利さで大人気でした。</p>\r\n\r\n<p>画像6</p>\r\n\r\n<p>マーゲート（イギリス）（1897年）</p>\r\n\r\n<p>画像7</p>\r\n\r\n<p>マーゲート（イギリス）（19世紀頃）</p>\r\n\r\n<p>＊</p>\r\n\r\n<p>庶民が行楽地に集まるようになったことで、リゾート地の大衆化を嫌ったイギリスの上流階級の人々は、コーンウォールなどの大都市から遠い人知れないリゾート地を開拓しました。また、フランスのニース、カンヌ、イタリアのサン・レモなどの、海を渡った大陸のリゾート地にも訪れました。</p>\r\n\r\n<p>画像1</p>\r\n\r\n<p>ニース（フランス）（19世紀）。避寒地として栄えました。</p>\r\n\r\n<p>画像3</p>\r\n\r\n<p>ニース（フランス）（1907年）</p>\r\n\r\n<p>＊</p>\r\n\r\n<p>都市に住む人々は行楽地に行っても、他人に見られることを意識するあまり、パーティーに行くようなきちっとした正装に身を包んでいることが多かったようです。写真や絵を見ても、カジュアルでリラックスした雰囲気よりも緊張さがうかがえます。</p>\r\n\r\n<p>休暇は、幸せや裕福さをアピールする自慢大会みたいな側面もあったようです。</p>\r\n\r\n<p>『朝日百科\u3000世界の歴史10\u3000ー19世紀ー』1991年\u3000朝日新聞社 D714</p>\r\n\r\n<p>Brighton aquarium photochrom.jpg</p>\r\n\r\n<p>Nice. L'Entree De La Jetee Promenade. 939P 66 (NBY 418471).jpg</p>\r\n\r\n<p>File:Nice..jpg</p>\r\n\r\n<p>File:The jetty, Margate, Kent, England, ca. 1897 (1).jpg</p>\r\n\r\n<p>File:Brighton aquarium photochrom.jpg</p>\r\n\r\n<p>The harbor I. Margate England.jpg</p>\r\n\r\n<p>Borders Europe Map HD.png</p>", 'references': '', 'rating': 0.0, 'rating_count': None, 'published_date': dateutil.parser.parse("2023-07-03T02:53:18.366157+00:00"), 'updated_date': dateutil.parser.parse("2023-07-03T02:53:18.372662+00:00")} ) 
    knowledge_knowledge_61.author =  importer.locate_object(UserAccount, "id", UserAccount, "id", 1, {'id': 1, 'password': 'pbkdf2_sha256$600000$Q9AwSzFqEXF1ueS21sGGfz$rZo+NVruXU5Zf5vp00wtuwLn0Z333sn5NtvS8VWKqds=', 'last_login': dateutil.parser.parse("2023-06-30T06:03:10.086511+00:00"), 'is_superuser': True, 'email': 'yurinakanishi33@gmail.com', 'name': 'yuri', 'is_active': True, 'is_staff': True} ) 
    knowledge_knowledge_61 = importer.save_or_locate(knowledge_knowledge_61)

    knowledge_knowledge_62 = Knowledge()
    knowledge_knowledge_62.name = 'Railroads spread travel to the common people.'
    knowledge_knowledge_62.slug = 'railroads-spread-travel-to-the-common-people'
    knowledge_knowledge_62.language =  importer.locate_object(Language, "id", Language, "id", 1, {'id': 1, 'name': 'en'} ) 
    knowledge_knowledge_62.genre_for_url =  importer.locate_object(GenreForURL, "id", GenreForURL, "id", 1, {'id': 1, 'name': 'knowledge'} ) 
    knowledge_knowledge_62.type = 'knowledge'
    knowledge_knowledge_62.notesite_url = 'https://note.com/argumented_world/n/n48f8cd72a255'
    knowledge_knowledge_62.article =  importer.locate_object(Article, "id", Article, "id", 6161, {'id': 6161, 'excerpt': 'Railroads spread travel to the common people.', 'kicker': 'Railroads spread travel to the common people.', 'content': '<p>The cover photo shows a bathing beach in Brighton, England, circa 1890.</p>\r\n\r\n<p>In the days before transportation, travel was the privilege of the aristocracy, gentry class, landowners, and wealthy city merchants.</p>\r\n\r\n<p>For the wealthy, mobility and travel were an integral part of life. In England, aristocrats and gentry with territories throughout the country traveled from place to place, inviting each other to balls and other events.</p>\r\n\r\n<p>Travel was their "job" to strengthen the cohesiveness of aristocratic society, to make connections with influential people, and to find marriage partners.</p>\r\n\r\n<p>Resorts were developed as places for these aristocrats to socialize. However, with the development of railroads and other transportation systems, resorts were opened to the public.</p>\r\n\r\n<p>Brighton was a coastal resort for aristocrats.</p>\r\n\r\n<p>Brighton was a coastal resort for aristocrats, but in 1841, the London-Brighton railroad opened, reducing the travel time between the two cities to two hours. The railway also brought down the cost of travel, and Brighton began to attract a flood of tourists.</p>\r\n\r\n<p>Image 4</p>\r\n\r\n<p>Brighton, England, circa 1890</p>\r\n\r\n<p>The Margate</p>\r\n\r\n<p>Margate was served by regular boats that carried holidaymakers down the River Thames in the 18th century, and steamers were in service around 1820. Margate was very popular because of this convenient access.</p>\r\n\r\n<p>Image 6</p>\r\n\r\n<p>Margate, England (1897)</p>\r\n\r\n<p>Image 7.</p>\r\n\r\n<p>Margate (England) (circa 19th century)</p>\r\n\r\n<p>* The first time that the</p>\r\n\r\n<p>As the common people began to congregate in holiday resorts, the British upper classes, who did not want to popularize resorts, developed secluded resorts far from large cities such as Cornwall. They also visited continental resorts across the sea, such as Nice and Cannes in France and San Remo in Italy.</p>\r\n\r\n<p>Image 1</p>\r\n\r\n<p>Nice, France (19th century). It flourished as a winter resort.</p>\r\n\r\n<p>Image 3.</p>\r\n\r\n<p>Nice, France (1907).</p>\r\n\r\n<p>* The city of Nice, France (19th century)</p>\r\n\r\n<p>City dwellers were often so conscious of being seen by others when they went to holiday destinations that they dressed in neat formal attire, as if they were going to a party. Photos and paintings reveal more tension than a casual, relaxed atmosphere.</p>\r\n\r\n<p>It seems that vacations were also like bragging contests to show off their happiness and wealth.</p>\r\n\r\n<p></p>', 'references': '', 'rating': 0.0, 'rating_count': None, 'published_date': dateutil.parser.parse("2023-07-03T02:53:18.366157+00:00"), 'updated_date': dateutil.parser.parse("2023-07-03T02:53:18.372662+00:00")} ) 
    knowledge_knowledge_62.author =  importer.locate_object(UserAccount, "id", UserAccount, "id", 1, {'id': 1, 'password': 'pbkdf2_sha256$600000$Q9AwSzFqEXF1ueS21sGGfz$rZo+NVruXU5Zf5vp00wtuwLn0Z333sn5NtvS8VWKqds=', 'last_login': dateutil.parser.parse("2023-06-30T06:03:10.086511+00:00"), 'is_superuser': True, 'email': 'yurinakanishi33@gmail.com', 'name': 'yuri', 'is_active': True, 'is_staff': True} ) 
    knowledge_knowledge_62 = importer.save_or_locate(knowledge_knowledge_62)

    knowledge_knowledge_63 = Knowledge()
    knowledge_knowledge_63.name = 'プレハーベストとポストハーベスト'
    knowledge_knowledge_63.slug = 'pre-harvest-and-post-harvest-jp'
    knowledge_knowledge_63.language =  importer.locate_object(Language, "id", Language, "id", 2, {'id': 2, 'name': 'jp'} ) 
    knowledge_knowledge_63.genre_for_url =  importer.locate_object(GenreForURL, "id", GenreForURL, "id", 1, {'id': 1, 'name': 'knowledge'} ) 
    knowledge_knowledge_63.type = 'knowledge'
    knowledge_knowledge_63.notesite_url = 'https://note.com/argumented_world/n/n6ad9733c7cc8'
    knowledge_knowledge_63.article =  importer.locate_object(Article, "id", Article, "id", 6162, {'id': 6162, 'excerpt': 'プレハーベストとポストハーベスト', 'kicker': 'プレハーベストとポストハーベスト', 'content': '<p>農薬って、害虫や病気から育っている作物を守るために撒かれるのがのが知られていますが、それだけじゃありません。</p>\r\n\r\n<p>今回はプレハーベスト、ポストハーベストを紹介します。</p>\r\n\r\n<p>プレハーベスト</p>\r\n\r\n<p>は収穫前という意味で、収穫前に作物を枯らして機械での刈り取りをスムーズにするために散布される農薬のことです。</p>\r\n\r\n<p>特に、小麦の収穫前に小麦を枯らせて、乾燥させることで収穫にかかる時間を短くするのが有名です。</p>\r\n\r\n<p>ポストハーベスト</p>\r\n\r\n<p>は収穫後という意味です。</p>\r\n\r\n<p>収穫後の果物とか穀物を輸送したり保管する間にカビたり虫に食べられたりしないようにする為に、散布される農薬のことです。</p>\r\n\r\n<p>ジャガイモを保管している間に芽が出ないようにするポストハーベストもあります。</p>\r\n\r\n<p></p>\r\n\r\n<p></p>\r\n\r\n<p></p>\r\n\r\n<p>――――――――――――</p>\r\n\r\n<p>最後までお読みいただきありがとうございました。</p>\r\n\r\n<p>参考資料、使用させて頂いた画像など</p>\r\n\r\n<p>PublicDomainPictures Pixabay</p>\r\n\r\n<p>In this issue, we will introduce pre-harvest and post-harvest.</p>\r\n\r\n<p>Pre-harvest</p>\r\n\r\n<p>means pre-harvest, and refers to pesticides that are sprayed to kill the crop before harvest to facilitate machine harvesting.</p>\r\n\r\n<p>It is particularly well known for killing wheat before harvest and drying it out to shorten the time it takes to harvest.</p>\r\n\r\n<p>Post-harvest</p>\r\n\r\n<p>means after harvest.</p>\r\n\r\n<p>It refers to pesticides applied to fruits and grains after harvest to prevent them from becoming moldy or being eaten by insects during transportation and storage.</p>\r\n\r\n<p>Post-harvest is also used to prevent potatoes from sprouting while in storage.</p>\r\n\r\n<p></p>', 'references': '', 'rating': 0.0, 'rating_count': None, 'published_date': dateutil.parser.parse("2023-07-03T02:53:18.366157+00:00"), 'updated_date': dateutil.parser.parse("2023-07-03T02:53:18.372662+00:00")} ) 
    knowledge_knowledge_63.author =  importer.locate_object(UserAccount, "id", UserAccount, "id", 1, {'id': 1, 'password': 'pbkdf2_sha256$600000$Q9AwSzFqEXF1ueS21sGGfz$rZo+NVruXU5Zf5vp00wtuwLn0Z333sn5NtvS8VWKqds=', 'last_login': dateutil.parser.parse("2023-06-30T06:03:10.086511+00:00"), 'is_superuser': True, 'email': 'yurinakanishi33@gmail.com', 'name': 'yuri', 'is_active': True, 'is_staff': True} ) 
    knowledge_knowledge_63 = importer.save_or_locate(knowledge_knowledge_63)

    knowledge_knowledge_64 = Knowledge()
    knowledge_knowledge_64.name = 'Pre-harvest and post-harvest'
    knowledge_knowledge_64.slug = 'pre-harvest-and-post-harvest'
    knowledge_knowledge_64.language =  importer.locate_object(Language, "id", Language, "id", 1, {'id': 1, 'name': 'en'} ) 
    knowledge_knowledge_64.genre_for_url =  importer.locate_object(GenreForURL, "id", GenreForURL, "id", 1, {'id': 1, 'name': 'knowledge'} ) 
    knowledge_knowledge_64.type = 'knowledge'
    knowledge_knowledge_64.notesite_url = ''
    knowledge_knowledge_64.article =  importer.locate_object(Article, "id", Article, "id", 6163, {'id': 6163, 'excerpt': 'Pre-harvest and post-harvest', 'kicker': 'Pre-harvest and post-harvest', 'content': '<p>Pesticides are known to be sprayed to protect growing crops from pests and diseases, but there is more to pesticides than that.</p>\r\n\r\n<p>In this issue, we will introduce pre-harvest and post-harvest.</p>\r\n\r\n<p>Pre-harvest</p>\r\n\r\n<p>means pre-harvest, and refers to pesticides that are sprayed to kill the crop before harvest to facilitate machine harvesting.</p>\r\n\r\n<p>It is particularly well known for killing wheat before harvest and drying it out to shorten the time it takes to harvest.</p>\r\n\r\n<p>Post-harvest</p>\r\n\r\n<p>means after harvest.</p>\r\n\r\n<p>It refers to pesticides applied to fruits and grains after harvest to prevent them from becoming moldy or being eaten by insects during transportation and storage.</p>\r\n\r\n<p>Post-harvest is also used to prevent potatoes from sprouting while in storage.</p>\r\n\r\n<p></p>', 'references': '', 'rating': 0.0, 'rating_count': None, 'published_date': dateutil.parser.parse("2023-07-03T02:53:18.366157+00:00"), 'updated_date': dateutil.parser.parse("2023-07-03T02:53:18.372662+00:00")} ) 
    knowledge_knowledge_64.author =  importer.locate_object(UserAccount, "id", UserAccount, "id", 1, {'id': 1, 'password': 'pbkdf2_sha256$600000$Q9AwSzFqEXF1ueS21sGGfz$rZo+NVruXU5Zf5vp00wtuwLn0Z333sn5NtvS8VWKqds=', 'last_login': dateutil.parser.parse("2023-06-30T06:03:10.086511+00:00"), 'is_superuser': True, 'email': 'yurinakanishi33@gmail.com', 'name': 'yuri', 'is_active': True, 'is_staff': True} ) 
    knowledge_knowledge_64 = importer.save_or_locate(knowledge_knowledge_64)

    knowledge_knowledge_65 = Knowledge()
    knowledge_knowledge_65.name = 'ジャガイモ飢饉'
    knowledge_knowledge_65.slug = 'potato-famine-jp'
    knowledge_knowledge_65.language =  importer.locate_object(Language, "id", Language, "id", 2, {'id': 2, 'name': 'jp'} ) 
    knowledge_knowledge_65.genre_for_url =  importer.locate_object(GenreForURL, "id", GenreForURL, "id", 1, {'id': 1, 'name': 'knowledge'} ) 
    knowledge_knowledge_65.type = 'knowledge'
    knowledge_knowledge_65.notesite_url = 'https://note.com/argumented_world/n/n3564f19908b9'
    knowledge_knowledge_65.article =  importer.locate_object(Article, "id", Article, "id", 6164, {'id': 6164, 'excerpt': 'ジャガイモ飢饉', 'kicker': 'ジャガイモ飢饉', 'content': '<p>表紙は、アイルランドで起った飢饉のさなかで荷車で運ばれる遺体が描かれた絵です。当時の新聞『the illustrated London news』の記事です。 飢饉は1845年頃に起りました。原因は、ジャガイモの疫病が流行し、ジャガイモがほとんど獲れなくなったことです。1846年にはジャガイモの9割がやられて腐ってしまいました。そして多くの死者が出て、アイルランドから脱出する人がが続出しました。これらのことから、この飢饉は『potato femine（ジャガイモ飢饉）』や『grate famine（大飢饉）』などと呼ばれています。</p>\r\n\r\n<p>下の地図の中で、緑の部分がアイルランドです。</p>\r\n\r\n<p>画像2</p>\r\n\r\n<p>なぜ、ジャガイモが不作なったことで、ここまで大きな飢饉になってしまったのでしょうか。主な原因を紹介します。</p>\r\n\r\n<p>1，アイルランド人はジャガイモに頼り切りだった。</p>\r\n\r\n<p>ジャガイモは痩せた土地でも簡単に栽培できたので、人々のほとんどはジャガイモを栽培していました。</p>\r\n\r\n<p>また、当時のアイルランドはイギリスの植民地的な状態でした。小麦を育てているとイギリスに地代を払わなければ行けませんでしたが、ジャガイモでは地代を払わなくても良かったのです。</p>\r\n\r\n<p>2，同じ品種のジャガイモのみを育てていた。</p>\r\n\r\n<p>アイルランドではジャガイモの品種の中でも、痩せた土壌、少ない肥料でも育つ1種類のジャガイモだけが普及していました。しかし、その品種がかかりやすい病気が流行すると同じ品種のものは全滅してしまいます。</p>\r\n\r\n<p>3，食糧支援が十分受けられなかった</p>\r\n\r\n<p>穀物の価格を維持する穀物法により、アイルランドに食糧を安く送ることはほとんど行なわれませんでした。さらに、アイルランドからの穀物の輸出は規制されなかったので、多くのアイルランド人が飢餓で苦しんでるにも関わらず、穀物がどんどんアイルランドから失われていきました。</p>\r\n\r\n<p>4，当時のアイルランドはイギリスの植民地のような状況で、元々貧困に苦しんでいた。</p>\r\n\r\n<p>先ほども書きましたが、当時のアイルランドはイギリスの植民地的な状態で、経済的に弱い立場にありました。</p>\r\n\r\n<p>この飢饉では、飢えそのもので死んでしまった人よりも、飢えによる栄養不足と疫病の流行が重なったことにより病気で死んでしまった人たちが多いようです。また、大飢饉の間には大量の移民（難民）が新天地のイギリス、アメリカ、カナダ、オーストラリアなどを目指してアイルランドを去って行きました。その数は150万人に及ぶとされています。 こうした飢饉、病気による死者や移民によって、アイルランドの人口は激減してしまいました。最後に、飢饉の記念碑を紹介します。</p>\r\n\r\n<p>画像2</p>\r\n\r\n<p>飢饉の犠牲者を追悼する記念碑（イギリス・リバプール）</p>\r\n\r\n<p>画像3</p>\r\n\r\n<p>飢饉の記念碑。食べ物がなくやせ衰えた人々が足を引きずって歩く姿を表しています。（アイルランド・ダブリン）</p>\r\n\r\n<p>『ジャガイモのきた道―文明・飢饉・戦争』山本 紀夫</p>\r\n\r\n<p>The Famine in Ireland, Funeral at Skibbereen - ILN 1847.jpg</p>\r\n\r\n<p>Memorial to the victims of the Irish Potato Famine "The Great Famine" in the grounds of St Lukes Church, Liverpool, England.</p>\r\n\r\n<p>File:Famine memorial dublin.jpg</p>\r\n\r\n<p>Couleur Pixabay</p>', 'references': '', 'rating': 0.0, 'rating_count': None, 'published_date': dateutil.parser.parse("2023-07-03T02:53:18.366157+00:00"), 'updated_date': dateutil.parser.parse("2023-07-03T02:53:18.372662+00:00")} ) 
    knowledge_knowledge_65.author =  importer.locate_object(UserAccount, "id", UserAccount, "id", 1, {'id': 1, 'password': 'pbkdf2_sha256$600000$Q9AwSzFqEXF1ueS21sGGfz$rZo+NVruXU5Zf5vp00wtuwLn0Z333sn5NtvS8VWKqds=', 'last_login': dateutil.parser.parse("2023-06-30T06:03:10.086511+00:00"), 'is_superuser': True, 'email': 'yurinakanishi33@gmail.com', 'name': 'yuri', 'is_active': True, 'is_staff': True} ) 
    knowledge_knowledge_65 = importer.save_or_locate(knowledge_knowledge_65)

    knowledge_knowledge_66 = Knowledge()
    knowledge_knowledge_66.name = 'Potato Famine'
    knowledge_knowledge_66.slug = 'potato-famine'
    knowledge_knowledge_66.language =  importer.locate_object(Language, "id", Language, "id", 1, {'id': 1, 'name': 'en'} ) 
    knowledge_knowledge_66.genre_for_url =  importer.locate_object(GenreForURL, "id", GenreForURL, "id", 1, {'id': 1, 'name': 'knowledge'} ) 
    knowledge_knowledge_66.type = 'knowledge'
    knowledge_knowledge_66.notesite_url = 'https://note.com/argumented_world/n/n3564f19908b9'
    knowledge_knowledge_66.article =  importer.locate_object(Article, "id", Article, "id", 6165, {'id': 6165, 'excerpt': 'Potato Famine', 'kicker': 'Potato Famine', 'content': '<p>The cover is a painting depicting bodies being carried by cart in the midst of the famine in Ireland. It is an article from the illustrated London news, a newspaper of the time.</p>\r\n\r\n<p>The famine occurred around 1845. In 1846, 90% of the potatoes were destroyed and rotted.</p>\r\n\r\n<p>Many people died, and many had to flee Ireland.</p>\r\n\r\n<p>For these reasons, the famine is called "potato famine" or "great famine".</p>\r\n\r\n<p>In the map below, the green area is Ireland.</p>\r\n\r\n<p>Image 2</p>\r\n\r\n<p>Why did the potato crop failure lead to such a large famine? Here are the main causes.</p>\r\n\r\n<p>1，The Irish were dependent on potatoes.</p>\r\n\r\n<p>Most of the people grew potatoes because potatoes could be easily cultivated even on thin land.</p>\r\n\r\n<p>Also, at that time, Ireland was a colonial state of England. If you grew wheat, you had to pay land rent to England, but with potatoes you did not have to pay land rent.</p>\r\n\r\n<p>2, Only the same variety of potatoes were grown.</p>\r\n\r\n<p>In Ireland, only one variety of potato was widespread, which could be grown in poor soil and with little fertilizer. However, when a disease to which that variety was susceptible spread, the same variety was wiped out.</p>\r\n\r\n<p>3、Food aid was inadequate.</p>\r\n\r\n<p>The Grain Act, which maintained the price of grain, made it almost impossible to send food to Ireland at a reasonable price. Furthermore, the export of grain from Ireland was not regulated, so grain was being lost from Ireland even though many Irish people were suffering from starvation.</p>\r\n\r\n<p>4、Ireland at that time was like a British colony and originally suffered from poverty.</p>\r\n\r\n<p>As I mentioned earlier, Ireland at that time was in a colonial-like situation in England and was in a weak economic position.</p>\r\n\r\n<p>*</p>\r\n\r\n<p>In this famine, it seems that more people died of disease due to a combination of malnutrition caused by hunger and epidemics of disease than died of hunger itself.</p>\r\n\r\n<p>During the famine, large numbers of immigrants (refugees) left Ireland for new lands such as England, the United States, Canada, and Australia. It is estimated that as many as 1.5 million people left Ireland during the famine.</p>\r\n\r\n<p>These famines, deaths from disease, and emigration led to a dramatic decline in Ireland\'s population.</p>\r\n\r\n<p>Finally, here are some of the famine memorials.</p>\r\n\r\n<p>Image 2</p>\r\n\r\n<p>Monument to the victims of the famine, Liverpool, England.</p>\r\n\r\n<p>Image 3</p>\r\n\r\n<p>Famine memorial. It shows emaciated people walking with a limp due to lack of food. (Dublin, Ireland)</p>\r\n\r\n<p></p>', 'references': '', 'rating': 0.0, 'rating_count': None, 'published_date': dateutil.parser.parse("2023-07-03T02:53:18.366157+00:00"), 'updated_date': dateutil.parser.parse("2023-07-03T02:53:18.372662+00:00")} ) 
    knowledge_knowledge_66.author =  importer.locate_object(UserAccount, "id", UserAccount, "id", 1, {'id': 1, 'password': 'pbkdf2_sha256$600000$Q9AwSzFqEXF1ueS21sGGfz$rZo+NVruXU5Zf5vp00wtuwLn0Z333sn5NtvS8VWKqds=', 'last_login': dateutil.parser.parse("2023-06-30T06:03:10.086511+00:00"), 'is_superuser': True, 'email': 'yurinakanishi33@gmail.com', 'name': 'yuri', 'is_active': True, 'is_staff': True} ) 
    knowledge_knowledge_66 = importer.save_or_locate(knowledge_knowledge_66)

    knowledge_knowledge_67 = Knowledge()
    knowledge_knowledge_67.name = ''
    knowledge_knowledge_67.slug = 'pest-and-runenaissance-jp'
    knowledge_knowledge_67.language =  importer.locate_object(Language, "id", Language, "id", 2, {'id': 2, 'name': 'jp'} ) 
    knowledge_knowledge_67.genre_for_url =  importer.locate_object(GenreForURL, "id", GenreForURL, "id", 1, {'id': 1, 'name': 'knowledge'} ) 
    knowledge_knowledge_67.type = 'knowledge'
    knowledge_knowledge_67.notesite_url = 'https://note.com/argumented_world/n/nc1314dc933c3'
    knowledge_knowledge_67.article =  importer.locate_object(Article, "id", Article, "id", 6166, {'id': 6166, 'excerpt': '', 'kicker': '', 'content': '<p>In this article, I will write about the plague, a contagious disease that has raged since ancient times and was feared in 14th century Europe as the Black Death.</p>\r\n\r\n<p>In English, plague is translated as "plague. The word "plague" also means "infectious disease" in the broadest sense of the word, indicating that the plague was so threatening that it was considered to be the most common infectious disease.</p>\r\n\r\n<p>Plague is mainly transmitted by the bite of a flea carrying the plague bacillus. It is also said to be transmitted by contact with plague-infected rats or the blood of infected people. Rats are exterminated to prevent the plague because they serve as hosts for fleas and spread the plague epidemic.</p>\r\n\r\n<p>There are different types of plague depending on the location of infection and symptoms. The two main types are glandular plague, which infects the lymph nodes, and pneumonic plague. Pneumonic plague can also be spread by droplet infection from coughs of infected people.</p>\r\n\r\n<p>According to medieval researchers, the plague killed between 75 and 200 million people between 1348 and 1351. This means that about half of the population of Europe died.</p>\r\n\r\n<p>It has also been noted that mortality rates by region are strongly influenced by population density.</p>\r\n\r\n<p>He sees death rates as high as 75 to 80 percent in Italy, Spain, and southern France, but as low as 20 percent in England and Germany. The densely populated and unsanitary cities of medieval Europe were the hardest hit, with Paris, Florence, and Hamburg losing half their populations in the first pandemic. In the less densely populated countryside, however, the mortality rate was much lower.</p>\r\n\r\n<p>The 50 Animals That Changed World History, by Eric Charlene.</p>\r\n\r\n<p>And, of course, the jihadists and monks, who treated their patients directly, suffered particularly high casualties.</p>\r\n\r\n<p>Table of Contents</p>\r\n\r\n<p>Invisible Terror.</p>\r\n\r\n<p>Byproducts of the Plague</p>\r\n\r\n<p>The Fourth Plague</p>\r\n\r\n<p>Other articles and references</p>\r\n\r\n<p>Invisible Fear</p>\r\n\r\n<p>In the eyes of medieval man, the plague was the work of an angry God or an evil man.</p>\r\n\r\n<p>After all, the body was believed to be animated by four kinds of bodily fluids: blood, black bile, yellow bile, and mucus. Disease was thought to be caused by an imbalance of these four fluids, and miasma (bad air) was thought to spread disease (plague).</p>\r\n\r\n<p>It was also believed that blood had two pathways, the arterial blood produced by the heart and the dark venous blood produced by the liver, and that blood stagnated or pooled here and there in the body, causing disease.</p>\r\n\r\n<p>For more information, please refer to this article.</p>\r\n\r\n<p>Doctors who treated patients with infectious diseases were called plague doctors. They protected themselves from the miasma by wearing full-body coverings. The purpose of the plague was to dispel the miasma by dressing up in eerie clothing.</p>\r\n\r\n<p>At that time, it was also believed that direct eye contact with a patient could transmit contagious diseases, so beads were sometimes worn over the eyes. (This is similar to the legend that if you make eye contact with a medusa, you will turn to stone.)</p>\r\n\r\n<p>It was also popular to wear masks that looked like beaks. The beak was stuffed with dried flowers, spices, and herbs to ward off the miasma.</p>\r\n\r\n<p>Image 1</p>\r\n\r\n<p>Due to an unknown contagious disease, some radical Christian groups began to walk around public places and beat themselves with whips. They sought to appease God\'s wrath by shedding their own blood to repent and ask forgiveness for the sins they had committed.</p>\r\n\r\n<p>For more on the Christian mindset, read this article!</p>\r\n\r\n<p>Byproducts of the Plague</p>\r\n\r\n<p>The plague brought not only disease but also persecution.</p>\r\n\r\n<p>Although Jews were originally discriminated against, some people claimed that the disease was spread by Jews poisoning wells, and this awareness of persecution led to the later genocide of Jews throughout Western Europe.</p>\r\n\r\n<p>The plague brought good? It also brought some good. The rapid decline in population broke the vicious cycle of starvation, crop failures, and economic depression that plagued Europe in the first half of the 14th century.</p>\r\n\r\n<p>Because of the shortage of labor, peasants, once tied to the land, were now hired and paid wages, resulting in the issuance of money and a higher standard of living.</p>\r\n\r\n<p>The plague also increased occupational and class mobility because of the high mortality rate among all classes.</p>\r\n\r\n<p>Above all, the authority of the Church, which had failed to prevent the disease, was rapidly eroding.</p>\r\n\r\n<p>But Europe not only survived the Black Death, it revived with additional vitality. (Abbreviations.)</p>\r\n\r\n<p>Historians regard the period after the Black Death as the starting point of capitalism in Western Europe.</p>\r\n\r\n<p>The 50 Animals That Changed World History, Eric Charleen (author)</p>\r\n\r\n<p>Together, these elements lead to the Renaissance, where art, philosophy, science, and technology flourished.</p>\r\n\r\n<p>The Fourth Plague</p>\r\n\r\n<p>There were three major outbreaks of the plague.</p>\r\n\r\n<p>The first spread in Europe from the 6th to the 8th century, centered in Constantinople; the second, introduced here, spread in Europe in the 14th century; and the third, spread in China and India over more than a century, from 1855 to 1959.</p>\r\n\r\n<p>1959 is a fairly recent date. At that time, millions of people were killed. Although there have been no major outbreaks of the plague in recent years, we cannot shake our worries.</p>\r\n\r\n<p>Rats are now being carried by humans to every corner of the earth, and from 1944-1993 there were 362 cases in the western United States. Although there are currently no reported cases of plague, it is still a problem close to our hearts.</p>\r\n\r\n<p>The 50 Animals that Changed World History" by Eric Charlene (author)</p>\r\n\r\n<p>Furthermore, in 1995, antibiotic-resistant strains of plague were discovered on the island of Madagascar. If antibiotics are ineffective, it is a very serious problem.</p>\r\n\r\n<p>There is no guarantee that there will not be a fourth major outbreak in the future...</p>\r\n\r\n<p></p>', 'references': '', 'rating': 0.0, 'rating_count': None, 'published_date': dateutil.parser.parse("2023-07-03T02:53:18.366157+00:00"), 'updated_date': dateutil.parser.parse("2023-07-03T02:53:18.372662+00:00")} ) 
    knowledge_knowledge_67.author =  importer.locate_object(UserAccount, "id", UserAccount, "id", 1, {'id': 1, 'password': 'pbkdf2_sha256$600000$Q9AwSzFqEXF1ueS21sGGfz$rZo+NVruXU5Zf5vp00wtuwLn0Z333sn5NtvS8VWKqds=', 'last_login': dateutil.parser.parse("2023-06-30T06:03:10.086511+00:00"), 'is_superuser': True, 'email': 'yurinakanishi33@gmail.com', 'name': 'yuri', 'is_active': True, 'is_staff': True} ) 
    knowledge_knowledge_67 = importer.save_or_locate(knowledge_knowledge_67)

    knowledge_knowledge_68 = Knowledge()
    knowledge_knowledge_68.name = 'pest and runenaissance'
    knowledge_knowledge_68.slug = 'pest-and-runenaissance'
    knowledge_knowledge_68.language =  importer.locate_object(Language, "id", Language, "id", 1, {'id': 1, 'name': 'en'} ) 
    knowledge_knowledge_68.genre_for_url =  importer.locate_object(GenreForURL, "id", GenreForURL, "id", 1, {'id': 1, 'name': 'knowledge'} ) 
    knowledge_knowledge_68.type = 'knowledge'
    knowledge_knowledge_68.notesite_url = 'https://note.com/argumented_world/n/nc1314dc933c3'
    knowledge_knowledge_68.article =  importer.locate_object(Article, "id", Article, "id", 6167, {'id': 6167, 'excerpt': 'pest and runenaissance', 'kicker': 'pest and runenaissance', 'content': '<p>In this article, I will write about the plague, a contagious disease that has raged since ancient times and was feared in 14th century Europe as the Black Death.</p>\r\n\r\n<p>In English, plague is translated as "plague. The word "plague" also means "infectious disease" in the broadest sense of the word, indicating that the plague was so threatening that it was considered to be the most common infectious disease.</p>\r\n\r\n<p>Plague is mainly transmitted by the bite of a flea carrying the plague bacillus. It is also said to be transmitted by contact with plague-infected rats or the blood of infected people. Rats are exterminated to prevent the plague because they serve as hosts for fleas and spread the plague epidemic.</p>\r\n\r\n<p>There are different types of plague depending on the location of infection and symptoms. The two main types are glandular plague, which infects the lymph nodes, and pneumonic plague. Pneumonic plague can also be spread by droplet infection from coughs of infected people.</p>\r\n\r\n<p>According to medieval researchers, the plague killed between 75 and 200 million people between 1348 and 1351. This means that about half of the population of Europe died.</p>\r\n\r\n<p>It has also been noted that mortality rates by region are strongly influenced by population density.</p>\r\n\r\n<p>He sees death rates as high as 75 to 80 percent in Italy, Spain, and southern France, but as low as 20 percent in England and Germany. The densely populated and unsanitary cities of medieval Europe were the hardest hit, with Paris, Florence, and Hamburg losing half their populations in the first pandemic. In the less densely populated countryside, however, the mortality rate was much lower.</p>\r\n\r\n<p>The 50 Animals That Changed World History, by Eric Charlene.</p>\r\n\r\n<p>And, of course, the jihadists and monks, who treated their patients directly, suffered particularly high casualties.</p>\r\n\r\n<p>Table of Contents</p>\r\n\r\n<p>Invisible Terror.</p>\r\n\r\n<p>Byproducts of the Plague</p>\r\n\r\n<p>The Fourth Plague</p>\r\n\r\n<p>Other articles and references</p>\r\n\r\n<p>Invisible Fear</p>\r\n\r\n<p>In the eyes of medieval man, the plague was the work of an angry God or an evil man.</p>\r\n\r\n<p>After all, the body was believed to be animated by four kinds of bodily fluids: blood, black bile, yellow bile, and mucus. Disease was thought to be caused by an imbalance of these four fluids, and miasma (bad air) was thought to spread disease (plague).</p>\r\n\r\n<p>It was also believed that blood had two pathways, the arterial blood produced by the heart and the dark venous blood produced by the liver, and that blood stagnated or pooled here and there in the body, causing disease.</p>\r\n\r\n<p>For more information, please refer to this article.</p>\r\n\r\n<p>Doctors who treated patients with infectious diseases were called plague doctors. They protected themselves from the miasma by wearing full-body coverings. The purpose of the plague was to dispel the miasma by dressing up in eerie clothing.</p>\r\n\r\n<p>At that time, it was also believed that direct eye contact with a patient could transmit contagious diseases, so beads were sometimes worn over the eyes. (This is similar to the legend that if you make eye contact with a medusa, you will turn to stone.)</p>\r\n\r\n<p>It was also popular to wear masks that looked like beaks. The beak was stuffed with dried flowers, spices, and herbs to ward off the miasma.</p>\r\n\r\n<p>Image 1</p>\r\n\r\n<p>Due to an unknown contagious disease, some radical Christian groups began to walk around public places and beat themselves with whips. They sought to appease God\'s wrath by shedding their own blood to repent and ask forgiveness for the sins they had committed.</p>\r\n\r\n<p>For more on the Christian mindset, read this article!</p>\r\n\r\n<p>Byproducts of the Plague</p>\r\n\r\n<p>The plague brought not only disease but also persecution.</p>\r\n\r\n<p>Although Jews were originally discriminated against, some people claimed that the disease was spread by Jews poisoning wells, and this awareness of persecution led to the later genocide of Jews throughout Western Europe.</p>\r\n\r\n<p>The plague brought good? It also brought some good. The rapid decline in population broke the vicious cycle of starvation, crop failures, and economic depression that plagued Europe in the first half of the 14th century.</p>\r\n\r\n<p>Because of the shortage of labor, peasants, once tied to the land, were now hired and paid wages, resulting in the issuance of money and a higher standard of living.</p>\r\n\r\n<p>The plague also increased occupational and class mobility because of the high mortality rate among all classes.</p>\r\n\r\n<p>Above all, the authority of the Church, which had failed to prevent the disease, was rapidly eroding.</p>\r\n\r\n<p>But Europe not only survived the Black Death, it revived with additional vitality. (Abbreviations.)</p>\r\n\r\n<p>Historians regard the period after the Black Death as the starting point of capitalism in Western Europe.</p>\r\n\r\n<p>The 50 Animals That Changed World History, Eric Charleen (author)</p>\r\n\r\n<p>Together, these elements lead to the Renaissance, where art, philosophy, science, and technology flourished.</p>\r\n\r\n<p>The Fourth Plague</p>\r\n\r\n<p>There were three major outbreaks of the plague.</p>\r\n\r\n<p>The first spread in Europe from the 6th to the 8th century, centered in Constantinople; the second, introduced here, spread in Europe in the 14th century; and the third, spread in China and India over more than a century, from 1855 to 1959.</p>\r\n\r\n<p>1959 is a fairly recent date. At that time, millions of people were killed. Although there have been no major outbreaks of the plague in recent years, we cannot shake our worries.</p>\r\n\r\n<p>Rats are now being carried by humans to every corner of the earth, and from 1944-1993 there were 362 cases in the western United States. Although there are currently no reported cases of plague, it is still a problem close to our hearts.</p>\r\n\r\n<p>The 50 Animals that Changed World History" by Eric Charlene (author)</p>\r\n\r\n<p>Furthermore, in 1995, antibiotic-resistant strains of plague were discovered on the island of Madagascar. If antibiotics are ineffective, it is a very serious problem.</p>\r\n\r\n<p>There is no guarantee that there will not be a fourth major outbreak in the future...</p>\r\n\r\n<p></p>', 'references': '', 'rating': 0.0, 'rating_count': None, 'published_date': dateutil.parser.parse("2023-07-03T02:53:18.366157+00:00"), 'updated_date': dateutil.parser.parse("2023-07-03T02:53:18.372662+00:00")} ) 
    knowledge_knowledge_68.author =  importer.locate_object(UserAccount, "id", UserAccount, "id", 1, {'id': 1, 'password': 'pbkdf2_sha256$600000$Q9AwSzFqEXF1ueS21sGGfz$rZo+NVruXU5Zf5vp00wtuwLn0Z333sn5NtvS8VWKqds=', 'last_login': dateutil.parser.parse("2023-06-30T06:03:10.086511+00:00"), 'is_superuser': True, 'email': 'yurinakanishi33@gmail.com', 'name': 'yuri', 'is_active': True, 'is_staff': True} ) 
    knowledge_knowledge_68 = importer.save_or_locate(knowledge_knowledge_68)

    knowledge_knowledge_69 = Knowledge()
    knowledge_knowledge_69.name = 'イギリス製の紙に書かれた『アメリカ独立宣言』'
    knowledge_knowledge_69.slug = 'paper-made-in-british-declaration-of-independence-jp'
    knowledge_knowledge_69.language =  importer.locate_object(Language, "id", Language, "id", 2, {'id': 2, 'name': 'jp'} ) 
    knowledge_knowledge_69.genre_for_url =  importer.locate_object(GenreForURL, "id", GenreForURL, "id", 1, {'id': 1, 'name': 'knowledge'} ) 
    knowledge_knowledge_69.type = 'knowledge'
    knowledge_knowledge_69.notesite_url = 'https://note.com/argumented_world/n/n20a808634079'
    knowledge_knowledge_69.article =  importer.locate_object(Article, "id", Article, "id", 6168, {'id': 6168, 'excerpt': 'イギリス製の紙に書かれた『アメリカ独立宣言』', 'kicker': 'イギリス製の紙に書かれた『アメリカ独立宣言』', 'content': '<p>今回はアメリカ独立革命後のお話しです。1783年、独立戦争に勝利しイギリスからの独立を勝ち取ったアメリカは、もうイギリスの支配は受けない！という意気込みでした。彼らは、戦争の前から、イギリス製品の使用をボイコットしていたくらいです。そして1776年に独立宣言と呼ばれる文書を発行し、イギリスからの独立を宣言しました。しかし、『独立宣言』を様々な地域に配る際の印刷に使われた紙はみなイギリスやオランダの紙だったそうです。（記念すべき一枚目は、羊皮紙に手書きしたようです【生産国は不明】）</p>\r\n\r\n<p>「独立」した後でも、「完全な独立」はかなり難しいことがうかがえます。</p>\r\n\r\n<p>そして、独立宣言から43年後1819年に、やっと独立宣言はアメリカの製紙場がつくったアメリカ製の紙に印刷し直されました。</p>\r\n\r\n<p>ここにおいてはじめて、独立宣言がほんとうの意味でアメリカ人のものになったのだ。</p>\r\n\r\n<p>マーク カーランスキー(著)\u3000川副 智子 (翻訳) 『紙の世界史』より</p>\r\n\r\n<p>＊</p>\r\n\r\n<p>また、インドの独立後も同じようなことがありました。</p>\r\n\r\n<p>20世紀にインド独立のために戦ったマハトマ・ガンディーは、インド人がインドで作られた紙だけを 使うことを望み、製紙の学校を始めた。1937年7月17日、雑誌「ハリジャン」を創刊すると その誌面で、これはインド人が作った紙で完全な印刷をされたものだと誇り高く宣言した。</p>\r\n\r\n<p>だが 「ハリジャン」にインド紙が用いられたのは、この創刊号が最初にして最後であり、その後は、アメリカの反逆者たちの前例に倣うかのように、イギリス紙に印刷されることになる。</p>\r\n\r\n<p>マーク カーランスキー(著)\u3000川副 智子 (翻訳) 『紙の世界史』より</p>\r\n\r\n<p>やはり、すぐにはイギリスから独立することはできなかったのです。子供も、「親から独立するぞ！」と意気込んで実家を出ても、最初の時期はなんだかんだ仕送りを貰っていたりすることがありますよね。そんなことをしみじみ思いました。</p>\r\n\r\n<p>マーク カーランスキー(著)\u3000川副 智子 (翻訳)\u3000徳間書店</p>\r\n\r\n<p>『 紙の世界史: PAPER 歴史に突き動かされた技術』</p>\r\n\r\n<p>を参考にさせて頂きました。</p>\r\n\r\n<p>古代から現代までの紙をめぐる様々な物語が書かれており、とても読み応えがあります！</p>\r\n\r\n<p>使用させて頂いた画像</p>\r\n\r\n<p>Jai Bhutani on Pixabay</p>\r\n\r\n<p>brotiN biswaS on Pexels</p>', 'references': '', 'rating': 0.0, 'rating_count': None, 'published_date': dateutil.parser.parse("2023-07-03T02:53:18.366157+00:00"), 'updated_date': dateutil.parser.parse("2023-07-03T02:53:18.372662+00:00")} ) 
    knowledge_knowledge_69.author =  importer.locate_object(UserAccount, "id", UserAccount, "id", 1, {'id': 1, 'password': 'pbkdf2_sha256$600000$Q9AwSzFqEXF1ueS21sGGfz$rZo+NVruXU5Zf5vp00wtuwLn0Z333sn5NtvS8VWKqds=', 'last_login': dateutil.parser.parse("2023-06-30T06:03:10.086511+00:00"), 'is_superuser': True, 'email': 'yurinakanishi33@gmail.com', 'name': 'yuri', 'is_active': True, 'is_staff': True} ) 
    knowledge_knowledge_69 = importer.save_or_locate(knowledge_knowledge_69)

    knowledge_knowledge_70 = Knowledge()
    knowledge_knowledge_70.name = 'Paper made in british declaration of independence'
    knowledge_knowledge_70.slug = 'paper-made-in-british-declaration-of-independence'
    knowledge_knowledge_70.language =  importer.locate_object(Language, "id", Language, "id", 1, {'id': 1, 'name': 'en'} ) 
    knowledge_knowledge_70.genre_for_url =  importer.locate_object(GenreForURL, "id", GenreForURL, "id", 1, {'id': 1, 'name': 'knowledge'} ) 
    knowledge_knowledge_70.type = 'knowledge'
    knowledge_knowledge_70.notesite_url = 'https://note.com/argumented_world/n/n20a808634079'
    knowledge_knowledge_70.article =  importer.locate_object(Article, "id", Article, "id", 6169, {'id': 6169, 'excerpt': 'Paper made in british declaration of independence', 'kicker': 'Paper made in british declaration of independence', 'content': '<p>This time we will talk about after the American Revolution.</p>\r\n\r\n<p>In 1783, after winning the Revolutionary War and gaining independence from Great Britain, the United States was determined not to be ruled by the British anymore! They were determined not to be ruled by the British anymore! They even boycotted the use of British products before the war.</p>\r\n\r\n<p>In 1776, they issued a document called the Declaration of Independence, declaring their independence from Great Britain.</p>\r\n\r\n<p>However, the paper used to print the "Declaration of Independence" for distribution to various regions was all British and Dutch paper. (The first commemorative copy seems to have been handwritten on parchment [country of origin unknown].</p>\r\n\r\n<p>It is evident that even after "independence," "complete independence" was quite difficult to achieve.</p>\r\n\r\n<p>Finally, in 1819, 43 years after the Declaration of Independence, the Declaration was re-printed on American paper made by an American paper mill.</p>\r\n\r\n<p>Here, for the first time, the Declaration of Independence truly belonged to the American people.</p>\r\n\r\n<p>Mark Kurlansky (Author) Tomoko Kawazoe (Translator), The World History of Paper</p>\r\n\r\n<p>The same was true after India\'s independence.</p>\r\n\r\n<p>The same thing also happened after India\'s independence.</p>\r\n\r\n<p>Mahatma Gandhi, who fought for India\'s independence in the 20th century, wanted Indians to use only paper made in India and started a school of papermaking. on July 17, 1937, when he launched the magazine Harijan, he proudly declared in its pages that it was made of Indian paper and perfectly printed. The magazine was published on July 17, 1937.</p>\r\n\r\n<p>But this first issue was the first and last time Indian paper was used for "Harijan," and thereafter it would be printed on British paper, as if following the precedent of the American rebels.</p>\r\n\r\n<p>Mark Kurlansky (Author) Tomoko Kawazoe (Translator) from A World History of Paper</p>\r\n\r\n<p>After all, it was not possible to become independent from England right away.</p>\r\n\r\n<p>Children, too, left their parents\' homes with great enthusiasm, saying, "I\'m going to be independent from my parents! and leave their parents\' house with great enthusiasm, they may still be sent money by their parents for some reason during the first period of their life. I thought about that deeply.</p>\r\n\r\n<p></p>', 'references': '', 'rating': 0.0, 'rating_count': None, 'published_date': dateutil.parser.parse("2023-07-03T02:53:18.366157+00:00"), 'updated_date': dateutil.parser.parse("2023-07-03T02:53:18.372662+00:00")} ) 
    knowledge_knowledge_70.author =  importer.locate_object(UserAccount, "id", UserAccount, "id", 1, {'id': 1, 'password': 'pbkdf2_sha256$600000$Q9AwSzFqEXF1ueS21sGGfz$rZo+NVruXU5Zf5vp00wtuwLn0Z333sn5NtvS8VWKqds=', 'last_login': dateutil.parser.parse("2023-06-30T06:03:10.086511+00:00"), 'is_superuser': True, 'email': 'yurinakanishi33@gmail.com', 'name': 'yuri', 'is_active': True, 'is_staff': True} ) 
    knowledge_knowledge_70 = importer.save_or_locate(knowledge_knowledge_70)

    knowledge_knowledge_71 = Knowledge()
    knowledge_knowledge_71.name = '昔のイギリス王室のヤバい職業'
    knowledge_knowledge_71.slug = 'old-british-royal-familys-bad-occupation-jp'
    knowledge_knowledge_71.language =  importer.locate_object(Language, "id", Language, "id", 2, {'id': 2, 'name': 'jp'} ) 
    knowledge_knowledge_71.genre_for_url =  importer.locate_object(GenreForURL, "id", GenreForURL, "id", 1, {'id': 1, 'name': 'knowledge'} ) 
    knowledge_knowledge_71.type = 'knowledge'
    knowledge_knowledge_71.notesite_url = 'https://note.com/argumented_world/n/nf1b03e1231d3'
    knowledge_knowledge_71.article =  importer.locate_object(Article, "id", Article, "id", 6170, {'id': 6170, 'excerpt': '昔のイギリス王室のヤバい職業', 'kicker': '昔のイギリス王室のヤバい職業', 'content': '<p>NHKのBS世界のドキュメンタリーの、『執事が見たイギリス王室』という番組を見ました。その中で紹介されていた、テューダー朝の時代のイギリス王室の面白い職業を紹介します。</p>\r\n\r\n<p>国王が用を足した後に、お尻を拭く職業です。同時に、排泄物を観察したり、医者に相談したりして王の健康を維持することも行なっていました。 嫌な仕事に思えますが、当時は大人気でみんなの憧れの仕事だったそうです。なぜなら、トイレの個室で、国王と二人きりで話ができるからです。国王が選んだ場所であれば、住む土地を与えてもらえましたし、国王の古着をもらうこともできました。古着といっても、国王の着物は最古級のシルクや毛皮を使っていたそうなので、十分すぎるほど高価で価値のある物でした。</p>\r\n\r\n<p>画像2</p>\r\n\r\n<p>宮殿には「ウィッピングボーイ（whipping boy）」と呼ばれる、体罰を受けるのが仕事の少年がいました。王子が家庭教師の授業を受ける際に一緒にいて、王子が教師のいう事を聞かないと身代わりにムチを打たれたのです。なぜなら、家庭教師が王子に体罰を与えるわけにはいかないからです。王子と仲の良い少年をムチで打てば王子が心を痛めて教師の言う事を聞くだろう、という理屈でした。しかし、中には少年がムチで打たれる姿が見たくてわざと反抗した王子もいたそうです。かわいそうですね。</p>\r\n\r\n<p>画像1</p>\r\n\r\n<p>『Edward VI and his Whipping Boy』（ エドワード６世と彼のウィッピングボーイ、Walter Sydney Stacey、1882 ）</p>\r\n\r\n<p>執事が見たイギリス王室｜BS世界のドキュメンタリー｜NHK BS1</p>\r\n\r\n<p>イギリス王室には執事、料理人、乳母など千人以上が働いている。ロイヤルに仕えるプロの流儀とは？ロイヤルファミリーの秘話も織り</p>\r\n\r\n<p>www6.nhk.or.jp</p>\r\n\r\n<p>What is a Groom of the Stool? by Sarah Bryson - The Tudor Society</p>\r\n\r\n<p>The Groom of the Stool, or, as the official title was known,</p>\r\n\r\n<p>www.tudorsociety.com</p>\r\n\r\n<p>falcoによるPixabayからの画像</p>\r\n\r\n<p>File:Whipping-boy.jpg</p>\r\n\r\n<p>File:CommodeStoolcirca1650.jpg</p>', 'references': '', 'rating': 0.0, 'rating_count': None, 'published_date': dateutil.parser.parse("2023-07-03T02:53:18.366157+00:00"), 'updated_date': dateutil.parser.parse("2023-07-03T02:53:18.372662+00:00")} ) 
    knowledge_knowledge_71.author =  importer.locate_object(UserAccount, "id", UserAccount, "id", 1, {'id': 1, 'password': 'pbkdf2_sha256$600000$Q9AwSzFqEXF1ueS21sGGfz$rZo+NVruXU5Zf5vp00wtuwLn0Z333sn5NtvS8VWKqds=', 'last_login': dateutil.parser.parse("2023-06-30T06:03:10.086511+00:00"), 'is_superuser': True, 'email': 'yurinakanishi33@gmail.com', 'name': 'yuri', 'is_active': True, 'is_staff': True} ) 
    knowledge_knowledge_71 = importer.save_or_locate(knowledge_knowledge_71)

    knowledge_knowledge_72 = Knowledge()
    knowledge_knowledge_72.name = 'AAA'
    knowledge_knowledge_72.slug = 'old-british-royal-familys-bad-occupation'
    knowledge_knowledge_72.language =  importer.locate_object(Language, "id", Language, "id", 1, {'id': 1, 'name': 'en'} ) 
    knowledge_knowledge_72.genre_for_url =  importer.locate_object(GenreForURL, "id", GenreForURL, "id", 1, {'id': 1, 'name': 'knowledge'} ) 
    knowledge_knowledge_72.type = 'knowledge'
    knowledge_knowledge_72.notesite_url = 'https://note.com/argumented_world/n/nf1b03e1231d3'
    knowledge_knowledge_72.article =  importer.locate_object(Article, "id", Article, "id", 6171, {'id': 6171, 'excerpt': 'AAA', 'kicker': 'AAA', 'content': '<p>I watched a program titled "The Butler\'s View of the British Royal Family" on NHK\'s BS World Documentary.</p>\r\n\r\n<p>Here are some interesting jobs in the British royal family during the Tudor dynasty that were introduced in the program.</p>\r\n\r\n<p>The king\'s butt-wiping staff</p>\r\n\r\n<p>This job was to wipe the king\'s buttocks after he had done his business. At the same time, they were responsible for maintaining the king\'s health by observing his excrement and consulting with doctors.</p>\r\n\r\n<p>It sounds like an unpleasant job, but at the time it was very popular and everyone wanted to do it. The reason was that you could talk alone with the king in the privacy of a toilet room.</p>\r\n\r\n<p>If the king chose the place, he would give you a place to live, and you could even receive the king\'s old clothes. Even though they were old clothes, they were more than expensive and valuable enough, because the king\'s kimono was made of the oldest silk and fur.</p>\r\n\r\n<p>Image 2</p>\r\n\r\n<p>A stool from around 1650</p>\r\n\r\n<p>A boy being whipped instead of the prince</p>\r\n\r\n<p>The palace had a "whipping boy," a boy whose job was to receive corporal punishment.</p>\r\n\r\n<p>He was with the prince when the prince took lessons from his tutor, and if the prince did not listen to the tutor, he was whipped instead of the prince.</p>\r\n\r\n<p>This was because the tutor could not inflict corporal punishment on the prince.</p>\r\n\r\n<p>The logic was that if they whipped a boy who was good friends with the prince, the prince would be heartbroken and listen to the teacher.</p>\r\n\r\n<p>However, some of the princes deliberately rebelled because they wanted to see the boy whipped. Poor boy.</p>\r\n\r\n<p>Image 1</p>\r\n\r\n<p>Edward VI and his Whipping Boy (Walter Sydney Stacey, 1882)</p>\r\n\r\n<p></p>', 'references': '', 'rating': 0.0, 'rating_count': None, 'published_date': dateutil.parser.parse("2023-07-03T02:53:18.366157+00:00"), 'updated_date': dateutil.parser.parse("2023-07-03T02:53:18.372662+00:00")} ) 
    knowledge_knowledge_72.author =  importer.locate_object(UserAccount, "id", UserAccount, "id", 1, {'id': 1, 'password': 'pbkdf2_sha256$600000$Q9AwSzFqEXF1ueS21sGGfz$rZo+NVruXU5Zf5vp00wtuwLn0Z333sn5NtvS8VWKqds=', 'last_login': dateutil.parser.parse("2023-06-30T06:03:10.086511+00:00"), 'is_superuser': True, 'email': 'yurinakanishi33@gmail.com', 'name': 'yuri', 'is_active': True, 'is_staff': True} ) 
    knowledge_knowledge_72 = importer.save_or_locate(knowledge_knowledge_72)

    knowledge_knowledge_73 = Knowledge()
    knowledge_knowledge_73.name = '窒素とふん尿'
    knowledge_knowledge_73.slug = 'nitrogen-and-plants-jp'
    knowledge_knowledge_73.language =  importer.locate_object(Language, "id", Language, "id", 2, {'id': 2, 'name': 'jp'} ) 
    knowledge_knowledge_73.genre_for_url =  importer.locate_object(GenreForURL, "id", GenreForURL, "id", 1, {'id': 1, 'name': 'knowledge'} ) 
    knowledge_knowledge_73.type = 'knowledge'
    knowledge_knowledge_73.notesite_url = 'https://note.com/argumented_world/n/neb399bac8304'
    knowledge_knowledge_73.article =  importer.locate_object(Article, "id", Article, "id", 6172, {'id': 6172, 'excerpt': '窒素とふん尿', 'kicker': '窒素とふん尿', 'content': '<p>窒素は、化学式Nで表される元素で、植物が成長するとき、タンパク質を構成するのに欠かすことはできません。植物は、窒素を栄養として吸収するときに、硝酸塩 （NO3−）やアンモニア（NH3）といった化合物の形で吸収します。</p>\r\n\r\n<p>根から吸収された硝酸塩やアンモニアは植物の中で分解されて窒素となり、タンパク質の原料となります。 ふつう植物に含まれる硝酸塩の濃度は高くはありませんが、土の中の窒素が多すぎて硝酸塩が必要以上に植物に吸収されたり、吸収した硝酸塩がタンパク質の合成に使われなかったりすると、植物中に硝酸塩が多量に残ってしままいます。</p>\r\n\r\n<p>特に、家畜の糞尿や、窒素肥料を多量に使用した家畜用の作物では、硝酸塩が多量に蓄積してしまいます。牛などの反芻（はんすう）動物が硝酸塩を多く含む植物を食べてしまうと、中毒になって、窒息して死んでしまいます。これを硝酸塩中毒といい、家畜が突然死んでしまうことから『ポックリ病』と言われて、現在でも起っています。（人間にとっては牛ほどの毒にはなりませんが、硝酸塩中毒の死亡例はあります。）</p>\r\n\r\n<p>さきほど、植物は窒素を栄養として吸収するときに、硝酸塩 （NO3−）やアンモニア（NH3）といった化合物の形で吸収するといいましたが、硝酸塩やアンモニアは、動物のふん尿そのものや、ふん尿が微生物に分解されることによってできます。家畜のふん尿を積み上げて放置したり、地面に穴を掘って貯めておくと、その土地の土は栄養過剰（窒素過剰）になってしまいます。人の尿にはアンモニアが含まれていることは有名ですが、上記のように、アンモニアは窒素を含んでいるので、植物の栄養になります。昔は、人の糞尿を畑にまくことで、畑の土を肥やしていた地域がありますが、このことも一つの理由でしょう。家畜のふん尿を積み上げている場所に生えている牧草は、窒素過剰により育ちがとても良く、緑色が濃く普通の倍くらいの長さにも育っています。その牧草を食べた牛が硝酸塩中毒で死んでしまったということもあるようです。</p>\r\n\r\n<p>また、硝酸塩が地下に染みこんで地下水が窒素過剰になってしまうことも現代の環境問題の一つとなっています。「何事も、少なすぎても、多すぎてもいけない」といいますが、これは窒素においても当てはまりますね。</p>\r\n\r\n<p>ミルク進化論 ーなぜ人は、これほどミルクを愛するのか？ー</p>\r\n\r\n<p>マーク・カーランスキー (著)    髙山祥子 (翻訳)</p>\r\n\r\n<p>硝酸塩</p>\r\n\r\n<p>www.naro.affrc.go.jp</p>\r\n\r\n<p>タイトル未設定</p>\r\n\r\n<p>www.env.go.jp</p>\r\n\r\n<p>牛のポックリ病\u3000未熟な家畜の堆肥に要注意 | さわやすの畑</p>\r\n\r\n<p>牛には、「ポックリ病」と呼ばれる奇妙な病気があります。 \u3000今まで元気でいたものが、突然、死亡するところから付けられた病名</p>\r\n\r\n<p>green.ap.teacup.com</p>\r\n\r\n<p>使用させて頂いた画像</p>\r\n\r\n<p>Matthias Zomer  on Pexels</p>', 'references': '', 'rating': 0.0, 'rating_count': None, 'published_date': dateutil.parser.parse("2023-07-03T02:53:18.366157+00:00"), 'updated_date': dateutil.parser.parse("2023-07-03T02:53:18.372662+00:00")} ) 
    knowledge_knowledge_73.author =  importer.locate_object(UserAccount, "id", UserAccount, "id", 1, {'id': 1, 'password': 'pbkdf2_sha256$600000$Q9AwSzFqEXF1ueS21sGGfz$rZo+NVruXU5Zf5vp00wtuwLn0Z333sn5NtvS8VWKqds=', 'last_login': dateutil.parser.parse("2023-06-30T06:03:10.086511+00:00"), 'is_superuser': True, 'email': 'yurinakanishi33@gmail.com', 'name': 'yuri', 'is_active': True, 'is_staff': True} ) 
    knowledge_knowledge_73 = importer.save_or_locate(knowledge_knowledge_73)

    knowledge_knowledge_74 = Knowledge()
    knowledge_knowledge_74.name = 'Nitrogen and Plants'
    knowledge_knowledge_74.slug = 'nitrogen-and-plants'
    knowledge_knowledge_74.language =  importer.locate_object(Language, "id", Language, "id", 1, {'id': 1, 'name': 'en'} ) 
    knowledge_knowledge_74.genre_for_url =  importer.locate_object(GenreForURL, "id", GenreForURL, "id", 1, {'id': 1, 'name': 'knowledge'} ) 
    knowledge_knowledge_74.type = 'knowledge'
    knowledge_knowledge_74.notesite_url = 'https://note.com/argumented_world/n/neb399bac8304'
    knowledge_knowledge_74.article =  importer.locate_object(Article, "id", Article, "id", 6173, {'id': 6173, 'excerpt': 'Niagara Power Plant', 'kicker': 'Niagara Power Plant', 'content': '<p>Nitrogen and Plants</p>\r\n\r\n<p>Nitrogen is an element with the chemical formula N. It is essential for plant growth and for the building of proteins.</p>\r\n\r\n<p>Plants absorb nitrogen as a nutrient in the form of compounds such as nitrate (NO3-) and ammonia (NH3).</p>\r\n\r\n<p>Nitrate and ammonia absorbed through the roots are broken down in the plant to nitrogen, which is used to make protein.</p>\r\n\r\n<p>Normally, the concentration of nitrate in plants is not high, but if there is too much nitrogen in the soil and the plants absorb more nitrate than they need, or if the absorbed nitrate is not used for protein synthesis, a large amount of nitrate will remain in the plants.</p>\r\n\r\n<p>Nitrate Poisoning</p>\r\n\r\n<p>Nitrate accumulation is especially high in livestock manure and in livestock crops that use large amounts of nitrogen fertilizers.</p>\r\n\r\n<p>When cattle and other ruminants eat plants that contain high levels of nitrate, they become poisoned and die from suffocation.</p>\r\n\r\n<p>This is called "nitrate poisoning," or "pocketing disease," and it still occurs today because of the sudden death of livestock. (Although it is not as poisonous to humans as it is to cattle, there have been deaths from nitrate poisoning.)</p>\r\n\r\n<p>Excess Nitrogen</p>\r\n\r\n<p>When plants absorb nitrogen as nutrients, they do so in the form of compounds such as nitrate (NO3-) and ammonia (NH3).</p>\r\n\r\n<p>If livestock manure is piled up and left to stand, or if holes are dug in the ground and stored, the</p>\r\n\r\n<p>The soil becomes overnourished (nitrogen overload).</p>\r\n\r\n<p>It is well known that human urine contains ammonia. As mentioned above, ammonia contains nitrogen, which is a nutrient for plants. In the past, human manure was spread on fields in some areas to fertilize the soil in the fields, and this may be one reason.</p>\r\n\r\n<p>The grass that grows in the area where livestock manure is piled up grows very well due to the excess nitrogen, and it is dark green and grows twice as long as normal. There have been cases of cows eating this grass and dying from nitrate poisoning.</p>\r\n\r\n<p>Another environmental problem today is that nitrates seep into the ground and cause an excess of nitrogen in groundwater.</p>\r\n\r\n<p>The saying, "You can never have too little or too much of anything," applies to nitrogen as well.</p>\r\n\r\n<p>Other articles, references, etc.</p>\r\n\r\n<p>Thank you for reading to the end!</p>\r\n\r\n<p>I have written many other articles!</p>\r\n\r\n<p>References</p>\r\n\r\n<p>The Evolution of Milk - Why do we love milk so much? Why do we love milk so much?</p>\r\n\r\n<p>Mark Kurlansky (Author) Sachiko Takayama (Translator)</p>\r\n\r\n<p></p>', 'references': '', 'rating': 0.0, 'rating_count': None, 'published_date': dateutil.parser.parse("2023-07-03T02:53:18.366157+00:00"), 'updated_date': dateutil.parser.parse("2023-07-03T02:53:18.372662+00:00")} ) 
    knowledge_knowledge_74.author =  importer.locate_object(UserAccount, "id", UserAccount, "id", 1, {'id': 1, 'password': 'pbkdf2_sha256$600000$Q9AwSzFqEXF1ueS21sGGfz$rZo+NVruXU5Zf5vp00wtuwLn0Z333sn5NtvS8VWKqds=', 'last_login': dateutil.parser.parse("2023-06-30T06:03:10.086511+00:00"), 'is_superuser': True, 'email': 'yurinakanishi33@gmail.com', 'name': 'yuri', 'is_active': True, 'is_staff': True} ) 
    knowledge_knowledge_74 = importer.save_or_locate(knowledge_knowledge_74)

    knowledge_knowledge_75 = Knowledge()
    knowledge_knowledge_75.name = 'ナイアガラ発電所'
    knowledge_knowledge_75.slug = 'niagara-power-plant-jp'
    knowledge_knowledge_75.language =  importer.locate_object(Language, "id", Language, "id", 2, {'id': 2, 'name': 'jp'} ) 
    knowledge_knowledge_75.genre_for_url =  importer.locate_object(GenreForURL, "id", GenreForURL, "id", 1, {'id': 1, 'name': 'knowledge'} ) 
    knowledge_knowledge_75.type = 'knowledge'
    knowledge_knowledge_75.notesite_url = 'https://note.com/argumented_world/n/n7d7598de1302'
    knowledge_knowledge_75.article =  importer.locate_object(Article, "id", Article, "id", 6174, {'id': 6174, 'excerpt': 'ナイアガラ発電所', 'kicker': 'ナイアガラ発電所', 'content': '<p>ナイアガラの滝、人生で一度は行ってみたい壮大な滝です。カナダのオンタリオ州とアメリカのニューヨーク州の国境にあります。そんなナイアガラの滝付近では、高低差と水の流れを利用して水力発電が行われています。ナイアガラ水力発電所は、1895年に完成しました。上から見るとこんな感じです。横から見るとこんなイメージです。</p>\r\n\r\n<p>近年、ナイアガラの滝付近にはアメリカ側、カナダ側のどちらにも新しい発電所ができています。よく考えてみれば、こんな大きな滝があったらそりゃあ水力発電に使うよなと思います（私はこのことを知るまでは、そんなことちっとも考えませんでしたが笑）。</p>\r\n\r\n<p>このナイアガラ発電所で発電された電気は、アルミニウムなどの製造工場へ供給されて、ナイアガラ付近はアメリカ最大の電気化学産業の地域となりました。 こういったことを知ってると、ナイアガラの滝に行ったときのわくわくがちょっとだけ増えると思います。もし皆さんがナイアガラの滝に観光に行ったときには、思い出してみてください。</p>\r\n\r\n<p>『朝日百科\u3000世界の歴史10\u3000ー19世紀ー』1991年\u3000朝日新聞社 E656</p>\r\n\r\n<p>Pexels Pixabay</p>\r\n\r\n<p>Niagara Falls - ON - Niagarafälle.jpg</p>', 'references': '', 'rating': 0.0, 'rating_count': None, 'published_date': dateutil.parser.parse("2023-07-03T02:53:18.366157+00:00"), 'updated_date': dateutil.parser.parse("2023-07-03T02:53:18.372662+00:00")} ) 
    knowledge_knowledge_75.author =  importer.locate_object(UserAccount, "id", UserAccount, "id", 1, {'id': 1, 'password': 'pbkdf2_sha256$600000$Q9AwSzFqEXF1ueS21sGGfz$rZo+NVruXU5Zf5vp00wtuwLn0Z333sn5NtvS8VWKqds=', 'last_login': dateutil.parser.parse("2023-06-30T06:03:10.086511+00:00"), 'is_superuser': True, 'email': 'yurinakanishi33@gmail.com', 'name': 'yuri', 'is_active': True, 'is_staff': True} ) 
    knowledge_knowledge_75 = importer.save_or_locate(knowledge_knowledge_75)

    knowledge_knowledge_76 = Knowledge()
    knowledge_knowledge_76.name = 'Niagara Power Plant'
    knowledge_knowledge_76.slug = 'niagara-power-plant'
    knowledge_knowledge_76.language =  importer.locate_object(Language, "id", Language, "id", 1, {'id': 1, 'name': 'en'} ) 
    knowledge_knowledge_76.genre_for_url =  importer.locate_object(GenreForURL, "id", GenreForURL, "id", 1, {'id': 1, 'name': 'knowledge'} ) 
    knowledge_knowledge_76.type = 'knowledge'
    knowledge_knowledge_76.notesite_url = ' https://note.com/argumented_world/n/n7d7598de1302'
    knowledge_knowledge_76.article =  importer.locate_object(Article, "id", Article, "id", 6175, {'id': 6175, 'excerpt': 'Niagara Power Plant', 'kicker': 'Niagara Power Plant', 'content': '<p>Niagara Falls, a spectacular waterfall you want to visit at least once in your life.</p>\r\n\r\n<p>Image 3</p>\r\n\r\n<p>It is located on the border between Ontario, Canada and New York, USA.</p>\r\n\r\n<p>In the vicinity of Niagara Falls, hydroelectric power is generated using the difference in height and the flow of water.</p>\r\n\r\n<p>The Niagara Hydroelectric Power Plant was completed in 1895.</p>\r\n\r\n<p>This is what it looks like from above.</p>\r\n\r\n<p>Image 1</p>\r\n\r\n<p>This is what it looks like from the side.</p>\r\n\r\n<p>Image 2</p>\r\n\r\n<p>In recent years, new power plants have been built near Niagara Falls on both the U.S. and Canadian sides.</p>\r\n\r\n<p>If you think about it, a waterfall this big would be used for hydroelectric power generation (I never thought about that until I learned about this, lol).</p>\r\n\r\n<p>The electricity generated by the Niagara Power Plant was supplied to aluminum and other manufacturing plants, making the Niagara area the largest electrochemical industrial area in the United States.</p>\r\n\r\n<p>Knowing this, I think it adds a little more excitement to your visit to Niagara Falls.</p>\r\n\r\n<p>If you ever go sightseeing in Niagara Falls, please remember this.</p>\r\n\r\n<p></p>', 'references': '', 'rating': 0.0, 'rating_count': None, 'published_date': dateutil.parser.parse("2023-07-03T02:53:18.366157+00:00"), 'updated_date': dateutil.parser.parse("2023-07-03T02:53:18.372662+00:00")} ) 
    knowledge_knowledge_76.author =  importer.locate_object(UserAccount, "id", UserAccount, "id", 1, {'id': 1, 'password': 'pbkdf2_sha256$600000$Q9AwSzFqEXF1ueS21sGGfz$rZo+NVruXU5Zf5vp00wtuwLn0Z333sn5NtvS8VWKqds=', 'last_login': dateutil.parser.parse("2023-06-30T06:03:10.086511+00:00"), 'is_superuser': True, 'email': 'yurinakanishi33@gmail.com', 'name': 'yuri', 'is_active': True, 'is_staff': True} ) 
    knowledge_knowledge_76 = importer.save_or_locate(knowledge_knowledge_76)

    knowledge_knowledge_77 = Knowledge()
    knowledge_knowledge_77.name = ''
    knowledge_knowledge_77.slug = 'nanjing-fall-sale-jp'
    knowledge_knowledge_77.language =  importer.locate_object(Language, "id", Language, "id", 2, {'id': 2, 'name': 'jp'} ) 
    knowledge_knowledge_77.genre_for_url =  importer.locate_object(GenreForURL, "id", GenreForURL, "id", 1, {'id': 1, 'name': 'knowledge'} ) 
    knowledge_knowledge_77.type = 'knowledge'
    knowledge_knowledge_77.notesite_url = 'https://note.com/argumented_world/n/n054736cd30d3'
    knowledge_knowledge_77.article =  importer.locate_object(Article, "id", Article, "id", 6176, {'id': 6176, 'excerpt': '', 'kicker': '', 'content': '<p>The photo shows the entrance ceremony by Japanese troops into Nanjing Castle.</p>\r\n\r\n<p>In 1937, during the Sino-Japanese War, Japanese forces fell and occupied Nanking.</p>\r\n\r\n<p>At that time, Japanese troops are said to have massacred and looted the civilian population of Nanjing.</p>\r\n\r\n<p>The number of victims is said to have ranged from several thousand to 300,000, but controversy continues, with some claiming that there were no victims.</p>\r\n\r\n<p>In such a situation, the Japanese people, unaware of the reality of the war, were in a festive mode against the war.</p>\r\n\r\n<p>Newspapers carried many articles celebrating the fall of Nanking.</p>\r\n\r\n<p>Image 2</p>\r\n\r\n<p>Photo: "December 7, 1937 Osaka Mainichi Shimbun (Gifu) extra edition dated December 7, 1937.</p>\r\n\r\n<p>Flags reading "Celebration of the Fall of Nanking" were raised here and there, and department stores and stores held sales to celebrate the fall of Nanking. The "Sale of the Fall of Nanking" is just like a professional baseball championship sale now, isn\'t it?</p>\r\n\r\n<p>Later on, when Japan defeated Singapore in the Pacific War, the people celebrated the "Fall of Singapore" as well.</p>\r\n\r\n<p></p>', 'references': '', 'rating': 0.0, 'rating_count': None, 'published_date': dateutil.parser.parse("2023-07-03T02:53:18.366157+00:00"), 'updated_date': dateutil.parser.parse("2023-07-03T02:53:18.372662+00:00")} ) 
    knowledge_knowledge_77.author =  importer.locate_object(UserAccount, "id", UserAccount, "id", 1, {'id': 1, 'password': 'pbkdf2_sha256$600000$Q9AwSzFqEXF1ueS21sGGfz$rZo+NVruXU5Zf5vp00wtuwLn0Z333sn5NtvS8VWKqds=', 'last_login': dateutil.parser.parse("2023-06-30T06:03:10.086511+00:00"), 'is_superuser': True, 'email': 'yurinakanishi33@gmail.com', 'name': 'yuri', 'is_active': True, 'is_staff': True} ) 
    knowledge_knowledge_77 = importer.save_or_locate(knowledge_knowledge_77)

    knowledge_knowledge_78 = Knowledge()
    knowledge_knowledge_78.name = 'Nanjing Fall Sale'
    knowledge_knowledge_78.slug = 'nanjing-fall-sale'
    knowledge_knowledge_78.language =  importer.locate_object(Language, "id", Language, "id", 1, {'id': 1, 'name': 'en'} ) 
    knowledge_knowledge_78.genre_for_url =  importer.locate_object(GenreForURL, "id", GenreForURL, "id", 1, {'id': 1, 'name': 'knowledge'} ) 
    knowledge_knowledge_78.type = 'knowledge'
    knowledge_knowledge_78.notesite_url = 'https://note.com/argumented_world/n/n054736cd30d3'
    knowledge_knowledge_78.article =  importer.locate_object(Article, "id", Article, "id", 6177, {'id': 6177, 'excerpt': 'Nanjing Fall Sale', 'kicker': 'Nanjing Fall Sale', 'content': '<p>The photo shows the entrance ceremony by Japanese troops into Nanjing Castle.</p>\r\n\r\n<p>In 1937, during the Sino-Japanese War, Japanese forces fell and occupied Nanking.</p>\r\n\r\n<p>At that time, Japanese troops are said to have massacred and looted the civilian population of Nanjing.</p>\r\n\r\n<p>The number of victims is said to have ranged from several thousand to 300,000, but controversy continues, with some claiming that there were no victims.</p>\r\n\r\n<p>In such a situation, the Japanese people, unaware of the reality of the war, were in a festive mode against the war.</p>\r\n\r\n<p>Newspapers carried many articles celebrating the fall of Nanking.</p>\r\n\r\n<p>Image 2</p>\r\n\r\n<p>Photo: "December 7, 1937 Osaka Mainichi Shimbun (Gifu) extra edition dated December 7, 1937.</p>\r\n\r\n<p>Flags reading "Celebration of the Fall of Nanking" were raised here and there, and department stores and stores held sales to celebrate the fall of Nanking. The "Sale of the Fall of Nanking" is just like a professional baseball championship sale now, isn\'t it?</p>\r\n\r\n<p>Later on, when Japan defeated Singapore in the Pacific War, the people celebrated the "Fall of Singapore" as well.</p>\r\n\r\n<p></p>', 'references': '', 'rating': 0.0, 'rating_count': None, 'published_date': dateutil.parser.parse("2023-07-03T02:53:18.366157+00:00"), 'updated_date': dateutil.parser.parse("2023-07-03T02:53:18.372662+00:00")} ) 
    knowledge_knowledge_78.author =  importer.locate_object(UserAccount, "id", UserAccount, "id", 1, {'id': 1, 'password': 'pbkdf2_sha256$600000$Q9AwSzFqEXF1ueS21sGGfz$rZo+NVruXU5Zf5vp00wtuwLn0Z333sn5NtvS8VWKqds=', 'last_login': dateutil.parser.parse("2023-06-30T06:03:10.086511+00:00"), 'is_superuser': True, 'email': 'yurinakanishi33@gmail.com', 'name': 'yuri', 'is_active': True, 'is_staff': True} ) 
    knowledge_knowledge_78 = importer.save_or_locate(knowledge_knowledge_78)

    knowledge_knowledge_79 = Knowledge()
    knowledge_knowledge_79.name = 'より多く飛行機に乗り遅れよう？'
    knowledge_knowledge_79.slug = 'miss-more-planes-jp'
    knowledge_knowledge_79.language =  importer.locate_object(Language, "id", Language, "id", 2, {'id': 2, 'name': 'jp'} ) 
    knowledge_knowledge_79.genre_for_url =  importer.locate_object(GenreForURL, "id", GenreForURL, "id", 1, {'id': 1, 'name': 'knowledge'} ) 
    knowledge_knowledge_79.type = 'knowledge'
    knowledge_knowledge_79.notesite_url = 'https://note.com/argumented_world/n/nc29963129200'
    knowledge_knowledge_79.article =  importer.locate_object(Article, "id", Article, "id", 6178, {'id': 6178, 'excerpt': 'より多く飛行機に乗り遅れよう？', 'kicker': 'より多く飛行機に乗り遅れよう？', 'content': "<p>みなさんは飛行機に乗るとき、離陸の時間までどのくらいの余裕を持って空港に着いていますか？</p>\r\n\r\n<p>なるべくぎりぎりに行って空港での待ち時間は短くしたいという気持ちと、トラブルが起って空港に着くのが遅れたときに飛行機に乗り遅れたくないので、なるべく早く着いていたいという気持ちがぶつかります。</p>\r\n\r\n<p>離陸のどれくらい前に着くのが、一番待ち時間が少なく済むのでしょうか</p>\r\n\r\n<p>条件を、</p>\r\n\r\n<p>飛行機に30回乗った</p>\r\n\r\n<p>10回に1回の割合で渋滞につかまって空港に着くのが10分遅れる。飛行機に乗り遅れた場合、次の飛行機まで5時間空港で待つ。</p>\r\n\r\n<p>と仮定して、2つの場合を考えてみましょう。</p>\r\n\r\n<p>①毎回出発の１時間前に着くように行く</p>\r\n\r\n<p>この場合、ちゃんと余裕を持っているので、渋滞につかまって遅れた時間＋ロビーで暇をつぶす時間は</p>\r\n\r\n<p>30回 × 1時間</p>\r\n\r\n<p>= 30時間\u3000が合計の待ち時間です。</p>\r\n\r\n<p>②毎回出発の10分前に着くように行く</p>\r\n\r\n<p>この場合、10分遅れると飛行機を逃してしまうので、渋滞につかまって遅れた時間＋ロビーで暇をつぶす時間は</p>\r\n\r\n<p>無事乗れた場合（10分 × 17回）+ 乗り遅れた場合（5時間 ×3 回）+渋滞で捕まっていた時間（10分×3 回）</p>\r\n\r\n<p>= 170分 + 15時間 +30分</p>\r\n\r\n<p>=18時間20分\u3000が合計の待ち時間です。</p>\r\n\r\n<p></p>\r\n\r\n<p>ということで、この場合毎回ぎりぎりに空港に着いた方が、合計の待ち時間がかなり少ないという、ちょっと意外な結果になりました。</p>\r\n\r\n<p>これ、飛行機に乗る回数が多ければ多いほど、待ち時間の差は広がっていきます。今回試した30回だと待ち時間の差は11時間40分でしたが、100回だと約47時間になります。これは大きいですよね。</p>\r\n\r\n<p>出張とかで飛行機に乗る回数が多い場合は、毎回ぎりぎりに空港に着いた方が待ち時間の節約になるかもしれません。</p>\r\n\r\n<p>仕事で行くんだから、遅れるわけにはいかない？</p>\r\n\r\n<p>それは知りません（笑）</p>\r\n\r\n<p>逆に、旅行とかで年に数回だけ飛行機に乗るくらいであれば、空港には余裕を持って着いた方がいいでしょう。お買い物も楽しめますからね。</p>\r\n\r\n<p></p>\r\n\r\n<p></p>\r\n\r\n<p>――――――――――――</p>\r\n\r\n<p>最後までお読みいただきありがとうございました。</p>\r\n\r\n<p>参考資料、使用させて頂いた画像など</p>\r\n\r\n<p>Jan VašekによるPixabayからの画像</p>\r\n\r\n<p>I am always conflicted between wanting to get there as close to the last minute as possible to shorten the waiting time at the airport, and wanting to get there as early as possible because I don't want to miss the flight if I arrive late due to a problem.</p>\r\n\r\n<p>How long before takeoff is the best time to arrive to minimize the wait?</p>\r\n\r\n<p>Conditions.</p>\r\n\r\n<p>I've been on the plane 30 times.</p>\r\n\r\n<p>One out of every 10 times, I get stuck in traffic and arrive at the airport 10 minutes late. If you miss your flight, you have to wait at the airport for 5 hours for the next flight.</p>\r\n\r\n<p>Let us assume the following two cases.</p>\r\n\r\n<p>(1) You go so that you arrive one hour before departure each time.</p>\r\n\r\n<p>In this case, since you have a decent amount of time to spare, the time you are delayed due to being stuck in traffic plus the time you spend killing time in the lobby is</p>\r\n\r\n<p>30 times × 1 hour</p>\r\n\r\n<p>= 30 hours is the total waiting time.</p>\r\n\r\n<p>(2) Go so that you arrive 10 minutes before departure each time.</p>\r\n\r\n<p>In this case, if you are 10 minutes late, you will miss your flight, so the time you spend stuck in traffic + the time you spend killing time in the lobby is</p>\r\n\r\n<p>If you get on the plane safely (10 minutes x 17 times) + if you miss the flight (5 hours x 3 times) + time spent stuck in traffic (10 minutes x 3 times)</p>\r\n\r\n<p>= 170 minutes + 15 hours + 30 minutes</p>\r\n\r\n<p>= 18 hours and 20 minutes is the total waiting time.</p>\r\n\r\n<p>So, in this case, the total waiting time is considerably less if you arrive at the airport just in time each time.</p>\r\n\r\n<p>The more times you fly, the larger the difference in waiting time. For the 30 times we tested this time, the difference in waiting time was 11 hours and 40 minutes, but for the 100 times we tested, the difference was about 47 hours. This is a big difference.</p>\r\n\r\n<p>If you take many flights for business or other reasons, you may be able to save on waiting time by arriving at the airport just in time each time.</p>\r\n\r\n<p>I'm going on a business trip, so I can't be late?</p>\r\n\r\n<p>I don't know about that (laughs).</p>\r\n\r\n<p>On the other hand, if you only fly a few times a year, like on vacation, it is better to arrive at the airport well in advance. You can enjoy shopping, too.</p>\r\n\r\n<p></p>", 'references': '', 'rating': 0.0, 'rating_count': None, 'published_date': dateutil.parser.parse("2023-07-03T02:53:18.366157+00:00"), 'updated_date': dateutil.parser.parse("2023-07-03T02:53:18.372662+00:00")} ) 
    knowledge_knowledge_79.author =  importer.locate_object(UserAccount, "id", UserAccount, "id", 1, {'id': 1, 'password': 'pbkdf2_sha256$600000$Q9AwSzFqEXF1ueS21sGGfz$rZo+NVruXU5Zf5vp00wtuwLn0Z333sn5NtvS8VWKqds=', 'last_login': dateutil.parser.parse("2023-06-30T06:03:10.086511+00:00"), 'is_superuser': True, 'email': 'yurinakanishi33@gmail.com', 'name': 'yuri', 'is_active': True, 'is_staff': True} ) 
    knowledge_knowledge_79 = importer.save_or_locate(knowledge_knowledge_79)

    knowledge_knowledge_80 = Knowledge()
    knowledge_knowledge_80.name = 'Miss more planes?'
    knowledge_knowledge_80.slug = 'miss-more-planes'
    knowledge_knowledge_80.language =  importer.locate_object(Language, "id", Language, "id", 1, {'id': 1, 'name': 'en'} ) 
    knowledge_knowledge_80.genre_for_url =  importer.locate_object(GenreForURL, "id", GenreForURL, "id", 1, {'id': 1, 'name': 'knowledge'} ) 
    knowledge_knowledge_80.type = 'knowledge'
    knowledge_knowledge_80.notesite_url = 'https://note.com/argumented_world/n/nc29963129200'
    knowledge_knowledge_80.article =  importer.locate_object(Article, "id", Article, "id", 6179, {'id': 6179, 'excerpt': 'Miss more planes?', 'kicker': 'Miss more planes?', 'content': "<p>When you fly, how much time do you allow yourself to arrive at the airport before takeoff?</p>\r\n\r\n<p>I am always conflicted between wanting to get there as close to the last minute as possible to shorten the waiting time at the airport, and wanting to get there as early as possible because I don't want to miss the flight if I arrive late due to a problem.</p>\r\n\r\n<p>How long before takeoff is the best time to arrive to minimize the wait?</p>\r\n\r\n<p>Conditions.</p>\r\n\r\n<p>I've been on the plane 30 times.</p>\r\n\r\n<p>One out of every 10 times, I get stuck in traffic and arrive at the airport 10 minutes late. If you miss your flight, you have to wait at the airport for 5 hours for the next flight.</p>\r\n\r\n<p>Let us assume the following two cases.</p>\r\n\r\n<p>(1) You go so that you arrive one hour before departure each time.</p>\r\n\r\n<p>In this case, since you have a decent amount of time to spare, the time you are delayed due to being stuck in traffic plus the time you spend killing time in the lobby is</p>\r\n\r\n<p>30 times × 1 hour</p>\r\n\r\n<p>= 30 hours is the total waiting time.</p>\r\n\r\n<p>(2) Go so that you arrive 10 minutes before departure each time.</p>\r\n\r\n<p>In this case, if you are 10 minutes late, you will miss your flight, so the time you spend stuck in traffic + the time you spend killing time in the lobby is</p>\r\n\r\n<p>If you get on the plane safely (10 minutes x 17 times) + if you miss the flight (5 hours x 3 times) + time spent stuck in traffic (10 minutes x 3 times)</p>\r\n\r\n<p>= 170 minutes + 15 hours + 30 minutes</p>\r\n\r\n<p>= 18 hours and 20 minutes is the total waiting time.</p>\r\n\r\n<p>So, in this case, the total waiting time is considerably less if you arrive at the airport just in time each time.</p>\r\n\r\n<p>The more times you fly, the larger the difference in waiting time. For the 30 times we tested this time, the difference in waiting time was 11 hours and 40 minutes, but for the 100 times we tested, the difference was about 47 hours. This is a big difference.</p>\r\n\r\n<p>If you take many flights for business or other reasons, you may be able to save on waiting time by arriving at the airport just in time each time.</p>\r\n\r\n<p>I'm going on a business trip, so I can't be late?</p>\r\n\r\n<p>I don't know about that (laughs).</p>\r\n\r\n<p>On the other hand, if you only fly a few times a year, like on vacation, it is better to arrive at the airport well in advance. You can enjoy shopping, too.</p>\r\n\r\n<p></p>", 'references': '', 'rating': 0.0, 'rating_count': None, 'published_date': dateutil.parser.parse("2023-07-03T02:53:18.366157+00:00"), 'updated_date': dateutil.parser.parse("2023-07-03T02:53:18.372662+00:00")} ) 
    knowledge_knowledge_80.author =  importer.locate_object(UserAccount, "id", UserAccount, "id", 1, {'id': 1, 'password': 'pbkdf2_sha256$600000$Q9AwSzFqEXF1ueS21sGGfz$rZo+NVruXU5Zf5vp00wtuwLn0Z333sn5NtvS8VWKqds=', 'last_login': dateutil.parser.parse("2023-06-30T06:03:10.086511+00:00"), 'is_superuser': True, 'email': 'yurinakanishi33@gmail.com', 'name': 'yuri', 'is_active': True, 'is_staff': True} ) 
    knowledge_knowledge_80 = importer.save_or_locate(knowledge_knowledge_80)

    knowledge_knowledge_81 = Knowledge()
    knowledge_knowledge_81.name = '松茸は森林伐採の遺産'
    knowledge_knowledge_81.slug = 'matsutake-mushrooms-are-a-legacy-of-deforestation-jp'
    knowledge_knowledge_81.language =  importer.locate_object(Language, "id", Language, "id", 2, {'id': 2, 'name': 'jp'} ) 
    knowledge_knowledge_81.genre_for_url =  importer.locate_object(GenreForURL, "id", GenreForURL, "id", 1, {'id': 1, 'name': 'knowledge'} ) 
    knowledge_knowledge_81.type = 'knowledge'
    knowledge_knowledge_81.notesite_url = 'https://note.com/argumented_world/n/n9d45b6239b89'
    knowledge_knowledge_81.article =  importer.locate_object(Article, "id", Article, "id", 6180, {'id': 6180, 'excerpt': '松茸は森林伐採の遺産', 'kicker': '松茸は森林伐採の遺産', 'content': '<p>日本でキノコの王様といえば、松茸ですよね！（強制）</p>\r\n\r\n<p>そんな松茸の歴史を、日本の歴史と共に解き明かしていきましょう。</p>\r\n\r\n<p>画像3</p>\r\n\r\n<p>写真は東大寺です。</p>\r\n\r\n<p>奈良、平安時代には遷都が繰り返し行なわれていましたが、遷都のたびに宮廷やお寺などを建て直すので、木材が大量に必要になりました。</p>\r\n\r\n<p>木材はもちろん、周囲の山の森林から取ってきます。なので、関西、近畿地方の森林は伐採し尽されて栄養のないはげ山になってしまったのです。</p>\r\n\r\n<p>栄養がない土地には、木は育ちにくいのですが、そんな、はげ山の痩せた土地でも育つ木があります。</p>\r\n\r\n<p>それが赤松です。関西、近畿地方は赤松林がとてもたくさん増えました。</p>\r\n\r\n<p>画像2</p>\r\n\r\n<p>松茸もまた、赤松と同じように栄養のない痩せた土地に生えるので、赤松の林で収穫されます。</p>\r\n\r\n<p>アカマツは他の樹種 が生長できないやせた土地で勢力を伸ばすことから、アカマツ林とは荒廃傾向の林地の象徴といえるのだ。現在の京都東山一帯のようなアカマツ純林が形成されるのは平安時代以降だ。（略）マツタケは樹齢20年から8年のアカマツの幼根だけに寄生し、土壌湿度が30度以下の地表付近がやや乾燥し通気がいい環境で生長する。アカマツとともに常緑広葉樹が生えている湿潤な森林でマツタケが生長することはない。</p>\r\n\r\n<p>『気候で読み解く日本の歴史―異常気象との攻防1400年』\u3000田家 康  \u3000p.68</p>\r\n\r\n<p>画像3</p>\r\n\r\n<p>また、豊かな森林には、ヒラタケが育ちます。森林伐採が大々的に行なわれる前までは人々はヒラタケを食べており、森林伐採の後から松茸が食べられるようになったのです。</p>\r\n\r\n<p>平安時代後半に京都周辺でヒラタケが減少しマツタケが増加していった（略） ヒラタケが京都の森林から消え、一方でマツタケが食卓を潤す。日本人が食材としてマツタケを好む源流がここにある。マツタケの香りを好ましいと考えるのは日本人だけといっていい。欧米では松脂臭いとして嫌がられ、中でもマツタケは乾燥させて煎じて漢方薬として用いられる。</p>\r\n\r\n<p>『気候で読み解く日本の歴史―異常気象との攻防1400年』\u3000田家 康 \u3000p.69</p>\r\n\r\n<p>そんなわけで、日本では松茸がたくさん食べられるようになったというわけです。</p>\r\n\r\n<p>また、畳や漆喰は木材の不足によって使われ始めました。希少な木の板の代わりとして床には畳が敷かれ、壁には漆喰が塗られるようになりました。</p>\r\n\r\n<p>森林伐採が、日本の伝統食材や伝統建築を生み出していたんですね。</p>\r\n\r\n<p>＊</p>\r\n\r\n<p>最後までお読みいただきありがとうございました！</p>\r\n\r\n<p>他にも、色んな記事を書いています！</p>\r\n\r\n<p></p>\r\n\r\n<p>参考資料</p>\r\n\r\n<p>『気候で読み解く日本の歴史―異常気象との攻防1400年』\u3000田家 康 (著)</p>\r\n\r\n<p>使用させて頂いた写真</p>\r\n\r\n<p>photoAC</p>\r\n\r\n<p>Kon Karampelas on Pixabay</p>\r\n\r\n<p>chulmin park on Pixabay</p>\r\n\r\n<p>Let us unravel the history of matsutake mushrooms along with the history of Japan.</p>\r\n\r\n<p>Picture 3</p>\r\n\r\n<p>This picture shows Todaiji Temple.</p>\r\n\r\n<p>During the Nara and Heian periods, the capital was repeatedly relocated, and each time the capital was relocated, large amounts of wood were needed to rebuild the court, temples, and other structures.</p>\r\n\r\n<p>Wood, of course, came from the forests in the surrounding mountains. The forests of the Kansai and Kinki regions were therefore cut down and turned into barren mountains with no nutrients.</p>\r\n\r\n<p>It is difficult for trees to grow on land with no nutrients, but there is one type of tree that can grow even on such barren, barren land: the red pine.</p>\r\n\r\n<p>That is the red pine tree. In the Kansai and Kinki regions, red pine forests have increased in abundance.</p>\r\n\r\n<p>Image 2</p>\r\n\r\n<p>Matsutake mushrooms are also harvested in red pine forests because, like the red pine, they grow on thin, nutrient-poor land.</p>\r\n\r\n<p>Red pine forests are a symbol of forest lands in decline, as red pine trees thrive in barren lands where other tree species cannot grow. It was not until the Heian period (794-1185) that pure forests of red pine trees, such as those in the Higashiyama area of Kyoto, were established. （The matsutake mushroom is a parasite that grows only on the young roots of red pine trees between 20 and 8 years old, and grows in a slightly dry and well-ventilated environment near the ground surface with soil humidity below 30 degrees Celsius. Matsutake mushrooms do not grow in moist forests where evergreen broad-leaved trees grow along with red spruce.</p>\r\n\r\n<p>Japanese History through Climate - 1400 Years of Attack and Defense against Abnormal Weather," Yasushi Taya, p.68</p>\r\n\r\n<p>Image 3</p>\r\n\r\n<p>Flat leaved mushrooms also grow in rich forests. People used to eat oyster mushrooms before deforestation, and it was only after deforestation that matsutake mushrooms began to be eaten.</p>\r\n\r\n<p>In the latter half of the Heian period, hiratake mushrooms decreased and matsutake mushrooms increased in the Kyoto area (abbreviated). hiratake mushrooms disappeared from Kyoto\'s forests, while matsutake mushrooms enriched people\'s tables. This is the origin of Japanese people\'s preference for matsutake as an ingredient. It is fair to say that only Japanese people like the aroma of matsutake. In the West, the smell of matsutake is frowned upon as smelling of pine resin, while matsutake is dried and decocted for use in Chinese herbal medicine.</p>\r\n\r\n<p>Japanese History through Climate - 1400 Years of Attacks and Defenses against Abnormal Weather," Yasushi Taya, p.69</p>\r\n\r\n<p>This is why matsutake mushrooms are eaten in abundance in Japan.</p>\r\n\r\n<p>Also, tatami mats and plaster began to be used due to the shortage of wood. Tatami mats were laid on the floor as a substitute for scarce wooden planks, and plaster was applied to the walls.</p>\r\n\r\n<p>So deforestation gave birth to traditional Japanese foodstuffs and traditional architecture.</p>\r\n\r\n<p></p>', 'references': '', 'rating': 0.0, 'rating_count': None, 'published_date': dateutil.parser.parse("2023-07-03T02:53:18.366157+00:00"), 'updated_date': dateutil.parser.parse("2023-07-03T02:53:18.372662+00:00")} ) 
    knowledge_knowledge_81.author =  importer.locate_object(UserAccount, "id", UserAccount, "id", 1, {'id': 1, 'password': 'pbkdf2_sha256$600000$Q9AwSzFqEXF1ueS21sGGfz$rZo+NVruXU5Zf5vp00wtuwLn0Z333sn5NtvS8VWKqds=', 'last_login': dateutil.parser.parse("2023-06-30T06:03:10.086511+00:00"), 'is_superuser': True, 'email': 'yurinakanishi33@gmail.com', 'name': 'yuri', 'is_active': True, 'is_staff': True} ) 
    knowledge_knowledge_81 = importer.save_or_locate(knowledge_knowledge_81)

    knowledge_knowledge_82 = Knowledge()
    knowledge_knowledge_82.name = 'Matsutake mushrooms are a legacy of deforestation'
    knowledge_knowledge_82.slug = 'matsutake-mushrooms-are-a-legacy-of-deforestation'
    knowledge_knowledge_82.language =  importer.locate_object(Language, "id", Language, "id", 1, {'id': 1, 'name': 'en'} ) 
    knowledge_knowledge_82.genre_for_url =  importer.locate_object(GenreForURL, "id", GenreForURL, "id", 1, {'id': 1, 'name': 'knowledge'} ) 
    knowledge_knowledge_82.type = 'knowledge'
    knowledge_knowledge_82.notesite_url = 'https://note.com/argumented_world/n/n9d45b6239b89'
    knowledge_knowledge_82.article =  importer.locate_object(Article, "id", Article, "id", 6181, {'id': 6181, 'excerpt': 'Matsutake mushrooms are a legacy of deforestation', 'kicker': 'Matsutake mushrooms are a legacy of deforestation', 'content': '<p>The king of mushrooms in Japan is the matsutake mushroom! (Mandatory)</p>\r\n\r\n<p>Let us unravel the history of matsutake mushrooms along with the history of Japan.</p>\r\n\r\n<p>Picture 3</p>\r\n\r\n<p>This picture shows Todaiji Temple.</p>\r\n\r\n<p>During the Nara and Heian periods, the capital was repeatedly relocated, and each time the capital was relocated, large amounts of wood were needed to rebuild the court, temples, and other structures.</p>\r\n\r\n<p>Wood, of course, came from the forests in the surrounding mountains. The forests of the Kansai and Kinki regions were therefore cut down and turned into barren mountains with no nutrients.</p>\r\n\r\n<p>It is difficult for trees to grow on land with no nutrients, but there is one type of tree that can grow even on such barren, barren land: the red pine.</p>\r\n\r\n<p>That is the red pine tree. In the Kansai and Kinki regions, red pine forests have increased in abundance.</p>\r\n\r\n<p>Image 2</p>\r\n\r\n<p>Matsutake mushrooms are also harvested in red pine forests because, like the red pine, they grow on thin, nutrient-poor land.</p>\r\n\r\n<p>Red pine forests are a symbol of forest lands in decline, as red pine trees thrive in barren lands where other tree species cannot grow. It was not until the Heian period (794-1185) that pure forests of red pine trees, such as those in the Higashiyama area of Kyoto, were established. （The matsutake mushroom is a parasite that grows only on the young roots of red pine trees between 20 and 8 years old, and grows in a slightly dry and well-ventilated environment near the ground surface with soil humidity below 30 degrees Celsius. Matsutake mushrooms do not grow in moist forests where evergreen broad-leaved trees grow along with red spruce.</p>\r\n\r\n<p>Japanese History through Climate - 1400 Years of Attack and Defense against Abnormal Weather," Yasushi Taya, p.68</p>\r\n\r\n<p>Image 3</p>\r\n\r\n<p>Flat leaved mushrooms also grow in rich forests. People used to eat oyster mushrooms before deforestation, and it was only after deforestation that matsutake mushrooms began to be eaten.</p>\r\n\r\n<p>In the latter half of the Heian period, hiratake mushrooms decreased and matsutake mushrooms increased in the Kyoto area (abbreviated). hiratake mushrooms disappeared from Kyoto\'s forests, while matsutake mushrooms enriched people\'s tables. This is the origin of Japanese people\'s preference for matsutake as an ingredient. It is fair to say that only Japanese people like the aroma of matsutake. In the West, the smell of matsutake is frowned upon as smelling of pine resin, while matsutake is dried and decocted for use in Chinese herbal medicine.</p>\r\n\r\n<p>Japanese History through Climate - 1400 Years of Attacks and Defenses against Abnormal Weather," Yasushi Taya, p.69</p>\r\n\r\n<p>This is why matsutake mushrooms are eaten in abundance in Japan.</p>\r\n\r\n<p>Also, tatami mats and plaster began to be used due to the shortage of wood. Tatami mats were laid on the floor as a substitute for scarce wooden planks, and plaster was applied to the walls.</p>\r\n\r\n<p>So deforestation gave birth to traditional Japanese foodstuffs and traditional architecture.</p>\r\n\r\n<p></p>', 'references': '', 'rating': 0.0, 'rating_count': None, 'published_date': dateutil.parser.parse("2023-07-03T02:53:18.366157+00:00"), 'updated_date': dateutil.parser.parse("2023-07-03T02:53:18.372662+00:00")} ) 
    knowledge_knowledge_82.author =  importer.locate_object(UserAccount, "id", UserAccount, "id", 1, {'id': 1, 'password': 'pbkdf2_sha256$600000$Q9AwSzFqEXF1ueS21sGGfz$rZo+NVruXU5Zf5vp00wtuwLn0Z333sn5NtvS8VWKqds=', 'last_login': dateutil.parser.parse("2023-06-30T06:03:10.086511+00:00"), 'is_superuser': True, 'email': 'yurinakanishi33@gmail.com', 'name': 'yuri', 'is_active': True, 'is_staff': True} ) 
    knowledge_knowledge_82 = importer.save_or_locate(knowledge_knowledge_82)

    knowledge_knowledge_83 = Knowledge()
    knowledge_knowledge_83.name = '酒は水より安全な飲み物だった！？'
    knowledge_knowledge_83.slug = 'liquor-was-a-safer-drink-than-water-jp'
    knowledge_knowledge_83.language =  importer.locate_object(Language, "id", Language, "id", 2, {'id': 2, 'name': 'jp'} ) 
    knowledge_knowledge_83.genre_for_url =  importer.locate_object(GenreForURL, "id", GenreForURL, "id", 1, {'id': 1, 'name': 'knowledge'} ) 
    knowledge_knowledge_83.type = 'knowledge'
    knowledge_knowledge_83.notesite_url = 'https://note.com/argumented_world/n/n505195a9b5a3'
    knowledge_knowledge_83.article =  importer.locate_object(Article, "id", Article, "id", 6182, {'id': 6182, 'excerpt': '酒は水より安全な飲み物だった！？', 'kicker': '酒は水より安全な飲み物だった！？', 'content': '<p>私たちは、真水と呼ばれるきれいな水を当たり前に飲んでいて、安全な水を飲めるという権利があるのは当然のことだと感じられます。</p>\r\n\r\n<p>ですが一般家庭が良質な水を飲めるようになったのはごく最近のことで、浄水設備が整っていない時代には、水は危険な飲み物でした。</p>\r\n\r\n<p>アルコール</p>\r\n\r\n<p>ほんの200年くらい前は、水より、アルコール飲料の方が安全でした。（アルコール飲料とは、主に、ビール、ワイン、蒸留酒、りんご酒などです。）</p>\r\n\r\n<p>当時は浄水設備がないので、水を飲みたかったら、汚染されている川、湖の水や湧き水を直接飲むしかありません。それによって食中毒や病気が多発しました。</p>\r\n\r\n<p>それに対してアルコール飲料は、①熱や微生物による加工処理がされていることによって元々雑菌が少ないこと、②アルコールには殺菌作用があり、保存に適していることから、水よりかなり安全な飲み物でした。</p>\r\n\r\n<p>子供達もごく普通にアルコール飲料を飲んでいました。</p>\r\n\r\n<p>海賊がよく酒を飲むのも、腐りにくいアルコール飲料を船に積んでいたからだそうです。長い航海中に、水は腐ってしまいます。</p>\r\n\r\n<p>コレラ</p>\r\n\r\n<p>コレラは、コレラ菌に汚染された食べ物や飲み物を摂取することで感染する病気です。1800年代、コレラは浄水設備が不完全な都市で流行しました。</p>\r\n\r\n<p>感染者の排泄物にはコレラ菌が含まれています。その排泄物が流れている下水管から汚水が漏れ、飲み水に混入し、その水を都市に住む多くの人が飲んでしまい、感染が広がりました。</p>\r\n\r\n<p>よく知られていることですが、今の水道水にはコレラなどの病原菌が水道管の中で繁殖しないようにするために塩素が入っています。</p>\r\n\r\n<p>ローマの給水技術</p>\r\n\r\n<p>驚くべきことに、約2000年前に栄えたローマには複雑な水の管理システムがありました。９本の水道橋で水が運ばれ、貯水池や公共の噴水、公共浴場もつくられて効率的に貯水と給水を行ないました。</p>\r\n\r\n<p>しかし異民族の侵入などによってローマは衰退していき、水道橋などの給水システムを備えた建造物も破壊されていきました。</p>\r\n\r\n<p>そしてついに、ローマの人々は汚染された井戸水や下水も流れ込む川の水をひくようになり、文明は失われました。</p>\r\n\r\n<p>文明の衰退についてはこちらの記事もご覧下さい。</p>\r\n\r\n<p></p>\r\n\r\n<p>他の記事、参考文献など</p>\r\n\r\n<p>最後までお読みいただきありがとうございました！</p>\r\n\r\n<p>他にも、色んな記事を書いています！</p>\r\n\r\n<p></p>\r\n\r\n<p>参考資料</p>\r\n\r\n<p>水の歴史 \u3000イアン ミラー (著)、 甲斐 理恵子 (翻訳)</p>\r\n\r\n<p>使用させて頂いた画像</p>\r\n\r\n<p>congerdesign on Pixabay</p>\r\n\r\n<p>However, it is only recently that ordinary households have had access to good quality water, and in the days when water purification facilities were not available, water was a dangerous drink.</p>\r\n\r\n<p>Alcohol</p>\r\n\r\n<p>Only about 200 years ago, alcoholic beverages were safer than water. (Alcoholic beverages were mainly beer, wine, spirits, and cider.)</p>\r\n\r\n<p>) Since there was no water purification system in those days, if you wanted to drink water, you had to drink directly from contaminated rivers, lakes, or springs. This led to many cases of food poisoning and disease.</p>\r\n\r\n<p>In contrast, alcoholic beverages were considerably safer than water because (1) they were originally free of bacteria due to heat and microbiological processing and (2) alcohol has a sterilizing effect and is suitable for preservation.</p>\r\n\r\n<p>Children also drank alcoholic beverages very commonly.</p>\r\n\r\n<p>Pirates often drank alcohol because they carried alcoholic beverages on board their ships that did not spoil easily. During long voyages, water would spoil.</p>\r\n\r\n<p>Cholera</p>\r\n\r\n<p>Cholera is a disease transmitted by consuming food or drink contaminated with the cholera bacteria.</p>\r\n\r\n<p>The feces of infected people contained the cholera bacteria. The sewage leaked from the sewage pipes that carried the excrement and got into the drinking water, which was then drunk by many city dwellers, spreading the disease.</p>\r\n\r\n<p>As is well known, tap water today contains chlorine to prevent pathogens such as cholera from growing in the water pipes.</p>\r\n\r\n<p>Roman Water Supply Technology</p>\r\n\r\n<p>Surprisingly, Rome, which flourished some 2,000 years ago, had a complex water management system that efficiently stored and supplied water via nine aqueducts, cisterns, public fountains, and public baths.</p>\r\n\r\n<p>However, as Rome declined due to the invasion of foreign tribes, the aqueducts and other structures equipped with water supply systems were destroyed.</p>\r\n\r\n<p>Finally, the Roman people began to rely on polluted well water and river water that also flowed into the sewers, and civilization was lost.</p>\r\n\r\n<p>See also this article on the decline of civilization.</p>\r\n\r\n<p></p>', 'references': '', 'rating': 0.0, 'rating_count': None, 'published_date': dateutil.parser.parse("2023-07-03T02:53:18.366157+00:00"), 'updated_date': dateutil.parser.parse("2023-07-03T02:53:18.372662+00:00")} ) 
    knowledge_knowledge_83.author =  importer.locate_object(UserAccount, "id", UserAccount, "id", 1, {'id': 1, 'password': 'pbkdf2_sha256$600000$Q9AwSzFqEXF1ueS21sGGfz$rZo+NVruXU5Zf5vp00wtuwLn0Z333sn5NtvS8VWKqds=', 'last_login': dateutil.parser.parse("2023-06-30T06:03:10.086511+00:00"), 'is_superuser': True, 'email': 'yurinakanishi33@gmail.com', 'name': 'yuri', 'is_active': True, 'is_staff': True} ) 
    knowledge_knowledge_83 = importer.save_or_locate(knowledge_knowledge_83)

    knowledge_knowledge_84 = Knowledge()
    knowledge_knowledge_84.name = 'liquor-was-a-safer-drink-than-water'
    knowledge_knowledge_84.slug = 'liquor-was-a-safer-drink-than-water'
    knowledge_knowledge_84.language =  importer.locate_object(Language, "id", Language, "id", 1, {'id': 1, 'name': 'en'} ) 
    knowledge_knowledge_84.genre_for_url =  importer.locate_object(GenreForURL, "id", GenreForURL, "id", 1, {'id': 1, 'name': 'knowledge'} ) 
    knowledge_knowledge_84.type = 'knowledge'
    knowledge_knowledge_84.notesite_url = 'https://note.com/argumented_world/n/n505195a9b5a3'
    knowledge_knowledge_84.article =  importer.locate_object(Article, "id", Article, "id", 6183, {'id': 6183, 'excerpt': 'liquor-was-a-safer-drink-than-water', 'kicker': 'liquor-was-a-safer-drink-than-water', 'content': '<p>Water used to be a dangerous drink.</p>\r\n\r\n<p>We take clean water, called fresh water, for granted, and it seems natural that we have the right to drink safe water.</p>\r\n\r\n<p>However, it is only recently that ordinary households have had access to good quality water, and in the days when water purification facilities were not available, water was a dangerous drink.</p>\r\n\r\n<p>Alcohol</p>\r\n\r\n<p>Only about 200 years ago, alcoholic beverages were safer than water. (Alcoholic beverages were mainly beer, wine, spirits, and cider.)</p>\r\n\r\n<p>) Since there was no water purification system in those days, if you wanted to drink water, you had to drink directly from contaminated rivers, lakes, or springs. This led to many cases of food poisoning and disease.</p>\r\n\r\n<p>In contrast, alcoholic beverages were considerably safer than water because (1) they were originally free of bacteria due to heat and microbiological processing and (2) alcohol has a sterilizing effect and is suitable for preservation.</p>\r\n\r\n<p>Children also drank alcoholic beverages very commonly.</p>\r\n\r\n<p>Pirates often drank alcohol because they carried alcoholic beverages on board their ships that did not spoil easily. During long voyages, water would spoil.</p>\r\n\r\n<p>Cholera</p>\r\n\r\n<p>Cholera is a disease transmitted by consuming food or drink contaminated with the cholera bacteria.</p>\r\n\r\n<p>The feces of infected people contained the cholera bacteria. The sewage leaked from the sewage pipes that carried the excrement and got into the drinking water, which was then drunk by many city dwellers, spreading the disease.</p>\r\n\r\n<p>As is well known, tap water today contains chlorine to prevent pathogens such as cholera from growing in the water pipes.</p>\r\n\r\n<p>Roman Water Supply Technology</p>\r\n\r\n<p>Surprisingly, Rome, which flourished some 2,000 years ago, had a complex water management system that efficiently stored and supplied water via nine aqueducts, cisterns, public fountains, and public baths.</p>\r\n\r\n<p>However, as Rome declined due to the invasion of foreign tribes, the aqueducts and other structures equipped with water supply systems were destroyed.</p>\r\n\r\n<p>Finally, the Roman people began to rely on polluted well water and river water that also flowed into the sewers, and civilization was lost.</p>\r\n\r\n<p>See also this article on the decline of civilization.</p>\r\n\r\n<p></p>', 'references': '', 'rating': 0.0, 'rating_count': None, 'published_date': dateutil.parser.parse("2023-07-03T02:53:18.366157+00:00"), 'updated_date': dateutil.parser.parse("2023-07-03T02:53:18.372662+00:00")} ) 
    knowledge_knowledge_84.author =  importer.locate_object(UserAccount, "id", UserAccount, "id", 1, {'id': 1, 'password': 'pbkdf2_sha256$600000$Q9AwSzFqEXF1ueS21sGGfz$rZo+NVruXU5Zf5vp00wtuwLn0Z333sn5NtvS8VWKqds=', 'last_login': dateutil.parser.parse("2023-06-30T06:03:10.086511+00:00"), 'is_superuser': True, 'email': 'yurinakanishi33@gmail.com', 'name': 'yuri', 'is_active': True, 'is_staff': True} ) 
    knowledge_knowledge_84 = importer.save_or_locate(knowledge_knowledge_84)

    knowledge_knowledge_85 = Knowledge()
    knowledge_knowledge_85.name = '口紅には鉛が含まれているが、たぶん害はなさそう'
    knowledge_knowledge_85.slug = 'lipstick-contains-lead,-but-probably-not-harmful-jp'
    knowledge_knowledge_85.language =  importer.locate_object(Language, "id", Language, "id", 2, {'id': 2, 'name': 'jp'} ) 
    knowledge_knowledge_85.genre_for_url =  importer.locate_object(GenreForURL, "id", GenreForURL, "id", 1, {'id': 1, 'name': 'knowledge'} ) 
    knowledge_knowledge_85.type = 'knowledge'
    knowledge_knowledge_85.notesite_url = 'https://note.com/argumented_world/n/n217dc936cac6'
    knowledge_knowledge_85.article =  importer.locate_object(Article, "id", Article, "id", 6184, {'id': 6184, 'excerpt': '口紅には鉛が含まれているが、たぶん害はなさそう', 'kicker': '口紅には鉛が含まれているが、たぶん害はなさそう', 'content': '<p>口紅には人体に有毒な「鉛」などの重金属が含まれている可能性があります。鉛」は、長期間続けて摂取すると神経麻痺や腹痛を起こします。体内に蓄積すると排出されづらいのも特徴です。2000年代にアメリカでFDA（アメリカ食品医薬品局）が調査したところによると、平均すると許容量の約１０分の１の鉛が含まれていました。（まあ、かなり低いので大丈夫ってことです。）日本もアメリカのブランドの口紅を多く輸入しているので、例外ではありません。また、口紅は口に塗るので、そのまま飲み込んでしまうことがあり、体内に毒素を取り込みやすい化粧品です。</p>\r\n\r\n<p>口紅だけでなく、ファンデーションや美白クリームなどの化粧品にも重金属が含まれている可能性があります。また重金属は、鉛以外にもカドミウム、ヒ素、水銀などが含まれている可能性があります。</p>\r\n\r\n<p>化粧品は体に塗るので鉛は皮膚から吸収されるらしいですが、極々少量らしいです。</p>\r\n\r\n<p>鉛などの重金属は化粧品の成分ではなく、混入物としてなら製品に含まれることが認められています。 化粧品を作る際に使われる一部の着色料や水などの天然原料の中に含まれてしまっている重金属が意図せずに混入している場合は、成分表示しなくて良いということです。</p>\r\n\r\n<p>ここで、資生堂のホームページから引用します。</p>\r\n\r\n<p>資生堂では安全性や品質に対し影響を与える不純物が含まれる懸念がある場合は、不純物を取り除くなどして安全性を確認したものを使用することにしています。</p>\r\n\r\n<p>一方で、不純物を完全に取り除くことが難しい場合があります。その一例が、天然由来の原料に含まれる重金属です。</p>\r\n\r\n<p>鉛、水銀、ヒ素、カドミウムなどの重金属は大量に摂取するとヒトの健康に悪影響を及ぼすことが知られていますが、土壌、大気、水などの自然界に広く存在することから、食品や飲料水にもわずかに含まれることもあります。</p>\r\n\r\n<p>同様に、化粧品原料の中には天然由来のものもあり、そのため、原料の中に存在するごく微量の重金属が製品中に含まれる可能性があります。</p>\r\n\r\n<p>資生堂では、原料に含まれるごく微量の重金属の量を把握した上で、原料ごとに独自の基準を設定し、安全なレベルであることが確認されたものだけを使用しています。</p>\r\n\r\n<p>資生堂\u3000https://corp.shiseido.com/jp/rd/safety/material.html</p>\r\n\r\n<p>化粧品に含まれる重金属が人体に影響を及ぼす量は正確には分かっていません。個人差によって、一回の摂取量によっても変わってくるでしょう。許容量の約１０分の１だとはいえ、口紅などの化粧品には、鉛などの人体に有毒な金属が微量に含まれていると分かった上で使うのが良いのではないでしょうか。まあ、けどそんなこと言ったら、食品にも鉛はちょー微量に含まれていますけどねっ（笑）</p>\r\n\r\n<p>FDAが定めた鉛の許容量が以下です。</p>\r\n\r\n<p>口紅\u3000\u3000\u3000\u3000：\u300010ppb</p>\r\n\r\n<p>キャンデー\u3000：\u30000.1ppb</p>\r\n\r\n<p>ジュース\u3000\u3000：\u30000.05ppb</p>\r\n\r\n<p>（1ppbは、十億分の１含まれているということです。）</p>\r\n\r\n<p>食品は化粧品より摂取量が多いので、許容量が少なくなっています。</p>\r\n\r\n<p>Limiting Lead in Lipstick and Other Cosmetics</p>\r\n\r\n<p>As a part of FDA’s overall mission to protect public health,</p>\r\n\r\n<p>www.fda.gov</p>\r\n\r\n<p>Limiting Lead in Lipstick and Other Cosmetics</p>\r\n\r\n<p>As a part of FDA’s overall mission to protect public health,</p>\r\n\r\n<p>www.fda.gov</p>\r\n\r\n<p>Google 翻訳</p>\r\n\r\n<p>translate.google.com</p>\r\n\r\n<p>Protect Yourself from Lead in Lipstick</p>\r\n\r\n<p>Did you know that there may be lead in lipstick? This post is</p>\r\n\r\n<p>ireadlabelsforyou.com</p>\r\n\r\n<p>死を招くファッション 服飾とテクノロジーの危険な関係</p>\r\n\r\n<p>www.amazon.co.jp</p>\r\n\r\n<p>3,850円</p>\r\n\r\n<p>(2021年05月18日 12:12時点 詳しくはこちら)</p>\r\n\r\n<p>Amazon.co.jpで購入する</p>\r\n\r\n<p>Photo by Daria Gordova on Unsplash</p>', 'references': '', 'rating': 0.0, 'rating_count': None, 'published_date': dateutil.parser.parse("2023-07-03T02:53:18.366157+00:00"), 'updated_date': dateutil.parser.parse("2023-07-03T02:53:18.372662+00:00")} ) 
    knowledge_knowledge_85.author =  importer.locate_object(UserAccount, "id", UserAccount, "id", 1, {'id': 1, 'password': 'pbkdf2_sha256$600000$Q9AwSzFqEXF1ueS21sGGfz$rZo+NVruXU5Zf5vp00wtuwLn0Z333sn5NtvS8VWKqds=', 'last_login': dateutil.parser.parse("2023-06-30T06:03:10.086511+00:00"), 'is_superuser': True, 'email': 'yurinakanishi33@gmail.com', 'name': 'yuri', 'is_active': True, 'is_staff': True} ) 
    knowledge_knowledge_85 = importer.save_or_locate(knowledge_knowledge_85)

    knowledge_knowledge_86 = Knowledge()
    knowledge_knowledge_86.name = 'Lipstick contains lead, but probably not harmful'
    knowledge_knowledge_86.slug = 'lipstick-contains-lead,-but-probably-not-harmful'
    knowledge_knowledge_86.language =  importer.locate_object(Language, "id", Language, "id", 1, {'id': 1, 'name': 'en'} ) 
    knowledge_knowledge_86.genre_for_url =  importer.locate_object(GenreForURL, "id", GenreForURL, "id", 1, {'id': 1, 'name': 'knowledge'} ) 
    knowledge_knowledge_86.type = 'knowledge'
    knowledge_knowledge_86.notesite_url = 'https://note.com/argumented_world/n/n217dc936cac6'
    knowledge_knowledge_86.article =  importer.locate_object(Article, "id", Article, "id", 6185, {'id': 6185, 'excerpt': 'Lipstick contains lead, but probably not harmful', 'kicker': 'Lipstick contains lead, but probably not harmful', 'content': '<p>Lipsticks may contain heavy metals such as "lead" that are toxic to the human body.</p>\r\n\r\n<p>Lead" can cause nerve palsy and abdominal pain if ingested over a long period of time. Once accumulated in the body, it is also difficult to expel.</p>\r\n\r\n<p>According to an FDA (U.S. Food and Drug Administration) study in the 2000s in the U.S., on average, lead contained about one-tenth of the allowable amount. (Well, it\'s pretty low, so that means it\'s okay.)</p>\r\n\r\n<p>Japan is no exception, as it imports many American brand lipsticks. In addition, since lipstick is applied to the mouth, it can be swallowed as it is, making it a cosmetic product that can easily take in toxins into the body.</p>\r\n\r\n<p>In addition to lipstick, cosmetics such as foundation and whitening cream may also contain heavy metals. In addition to lead, heavy metals may also include cadmium, arsenic, and mercury.</p>\r\n\r\n<p>Since cosmetics are applied to the body, lead is said to be absorbed through the skin, but in very small amounts.</p>\r\n\r\n<p>Heavy metals such as lead are not ingredients in cosmetics, but are allowed to be included in products if they are adulterants.</p>\r\n\r\n<p>If a heavy metal is unintentionally included in a natural raw material such as some colorants or water used in the production of cosmetics, it does not have to be listed as an ingredient.</p>\r\n\r\n<p>Here is a quote from Shiseido\'s website.</p>\r\n\r\n<p>If there is a concern that an impurity that may affect safety or quality is contained in a product, Shiseido will remove the impurity or otherwise confirm the safety of the product before using it.</p>\r\n\r\n<p>On the other hand, there are cases where it is difficult to completely remove impurities. One example is heavy metals contained in naturally occurring raw materials.</p>\r\n\r\n<p>Heavy metals such as lead, mercury, arsenic, and cadmium are known to have adverse effects on human health if ingested in large quantities, but since they are widely present in nature, including soil, air, and water, they may also be present in food and drinking water in small amounts.</p>\r\n\r\n<p>Similarly, some cosmetic raw materials are naturally derived, and therefore, very small amounts of heavy metals present in raw materials may be contained in products.</p>\r\n\r\n<p>Shiseido sets its own standards for each raw material after ascertaining the amount of very small amounts of heavy metals contained in the raw material, and uses only those materials that have been confirmed to be at safe levels.</p>\r\n\r\n<p>Shiseido https://corp.shiseido.com/jp/rd/safety/material.html</p>\r\n\r\n<p>◇ ◇Cosmetics</p>\r\n\r\n<p>The exact amount of heavy metals contained in cosmetics that affect the human body is not known. It will vary from person to person, depending on the amount ingested at one time.</p>\r\n\r\n<p>Even though it is about one-tenth of the permissible amount, it would be better to use cosmetics such as lipstick knowing that they contain trace amounts of lead and other metals that are toxic to the human body.</p>\r\n\r\n<p>Well, if you put it that way, food products also contain trace amounts of lead (laughs).</p>\r\n\r\n<p>The FDA has set the following allowable levels of lead</p>\r\n\r\n<p>Lipstick: 10 ppb</p>\r\n\r\n<p>Candy: 0.1 ppb</p>\r\n\r\n<p>Juice: 0.05 ppb</p>\r\n\r\n<p>(1 ppb means it contains one part per billion.)</p>\r\n\r\n<p>Since the intake of food is higher than that of cosmetics, the allowable amount is lower.</p>\r\n\r\n<p></p>', 'references': '', 'rating': 0.0, 'rating_count': None, 'published_date': dateutil.parser.parse("2023-07-03T02:53:18.366157+00:00"), 'updated_date': dateutil.parser.parse("2023-07-03T02:53:18.372662+00:00")} ) 
    knowledge_knowledge_86.author =  importer.locate_object(UserAccount, "id", UserAccount, "id", 1, {'id': 1, 'password': 'pbkdf2_sha256$600000$Q9AwSzFqEXF1ueS21sGGfz$rZo+NVruXU5Zf5vp00wtuwLn0Z333sn5NtvS8VWKqds=', 'last_login': dateutil.parser.parse("2023-06-30T06:03:10.086511+00:00"), 'is_superuser': True, 'email': 'yurinakanishi33@gmail.com', 'name': 'yuri', 'is_active': True, 'is_staff': True} ) 
    knowledge_knowledge_86 = importer.save_or_locate(knowledge_knowledge_86)

    knowledge_knowledge_87 = Knowledge()
    knowledge_knowledge_87.name = 'レッドブルが出来たきっかけはリポビタンD'
    knowledge_knowledge_87.slug = 'lipovitan-d-was-the-inspiration-for-the-creation-of-red-bull-jp'
    knowledge_knowledge_87.language =  importer.locate_object(Language, "id", Language, "id", 2, {'id': 2, 'name': 'jp'} ) 
    knowledge_knowledge_87.genre_for_url =  importer.locate_object(GenreForURL, "id", GenreForURL, "id", 1, {'id': 1, 'name': 'knowledge'} ) 
    knowledge_knowledge_87.type = 'knowledge'
    knowledge_knowledge_87.notesite_url = 'https://note.com/argumented_world/n/n2c197a88481d'
    knowledge_knowledge_87.article =  importer.locate_object(Article, "id", Article, "id", 6186, {'id': 6186, 'excerpt': 'レッドブルが出来たきっかけはリポビタンD', 'kicker': 'レッドブルが出来たきっかけはリポビタンD', 'content': '<p>オーストリア出身のディートリヒ・マテシッツは、LUX（ラックス）Dove（ダヴ）、LIPTON（リプトン）などのブランドを持つユニリーバに勤めていました。給料はかなり良かったのですが、マネージャーとして多忙な生活を送っており、業績の重圧が重くのしかかっていました。そんな中、1982年に香港への出張に行った際に、雑誌「ニューズウィーク」に掲載されていた日本の高額納税者リストに大正製薬の経営者の名前があるのを発見しました。大正製薬は、リポビタンDという飲料を製造しており、日本のみならず、東南アジアにも進出していました。</p>\r\n\r\n<p>画像1</p>\r\n\r\n<p>リポビタンDは、滋養強壮成分といわれていたタウリンが入っていることを謳っていました。</p>\r\n\r\n<p>第2次世界大戦中、日本は兵士の体力回復を目的に、全国のタコの加工工場から、タコの煮汁を回収してタウリンを調達していたそうです。</p>\r\n\r\n<p>タウリンは、イカ、タコに多く含まれています。</p>\r\n\r\n<p>これを見たマテシッツは、当時世界第２位の経済大国（１位はアメリカ）であった日本で、栄養ドリンクによって高額納税者になることができるという事実に驚きました。</p>\r\n\r\n<p>そこから彼はエナジードリンクの事業構想を思いつき、リポビタンDの味を欧米の人々好みに改良したレッドブルを発売します。</p>\r\n\r\n<p>今ではレッドブルは、リポビタンDを抜き、世界中で販売されています。</p>\r\n\r\n<p>『レッドブルはなぜ世界で52億本も売れるのか』ヴォルフガング ヒュアヴェーガー</p>\r\n\r\n<p>09294jfErmita Paco Manila Buildings Unilever Avenues Bridges Landmarksfvf 02.jpg</p>\r\n\r\n<p>Hier und jetzt endet leider meine Reise auf Pixabay aber\u3000Pixabay</p>', 'references': '', 'rating': 0.0, 'rating_count': None, 'published_date': dateutil.parser.parse("2023-07-03T02:53:18.366157+00:00"), 'updated_date': dateutil.parser.parse("2023-07-03T02:53:18.372662+00:00")} ) 
    knowledge_knowledge_87.author =  importer.locate_object(UserAccount, "id", UserAccount, "id", 1, {'id': 1, 'password': 'pbkdf2_sha256$600000$Q9AwSzFqEXF1ueS21sGGfz$rZo+NVruXU5Zf5vp00wtuwLn0Z333sn5NtvS8VWKqds=', 'last_login': dateutil.parser.parse("2023-06-30T06:03:10.086511+00:00"), 'is_superuser': True, 'email': 'yurinakanishi33@gmail.com', 'name': 'yuri', 'is_active': True, 'is_staff': True} ) 
    knowledge_knowledge_87 = importer.save_or_locate(knowledge_knowledge_87)

    knowledge_knowledge_88 = Knowledge()
    knowledge_knowledge_88.name = 'Lipovitan D was the inspiration for the creation of Red Bull.'
    knowledge_knowledge_88.slug = 'lipovitan-d-was-the-inspiration-for-the-creation-of-red-bull'
    knowledge_knowledge_88.language =  importer.locate_object(Language, "id", Language, "id", 1, {'id': 1, 'name': 'en'} ) 
    knowledge_knowledge_88.genre_for_url =  importer.locate_object(GenreForURL, "id", GenreForURL, "id", 1, {'id': 1, 'name': 'knowledge'} ) 
    knowledge_knowledge_88.type = 'knowledge'
    knowledge_knowledge_88.notesite_url = 'https://note.com/argumented_world/n/n2c197a88481d'
    knowledge_knowledge_88.article =  importer.locate_object(Article, "id", Article, "id", 6187, {'id': 6187, 'excerpt': 'Lipovitan D was the inspiration for the creation of Red Bull.', 'kicker': 'Lipovitan D was the inspiration for the creation of Red Bull.', 'content': "<p>Dietrich Mateschitz, a native of Austria, worked for Unilever, whose brands include Lux Dove and Lipton.</p>\r\n\r\n<p>Image 1</p>\r\n\r\n<p>Although his salary was quite good, he led a busy life as a manager and the pressure of performance weighed heavily on him.</p>\r\n\r\n<p>In the midst of all this, during a business trip to Hong Kong in 1982, I discovered the name of Taisho Pharmaceutical's manager on a list of Japan's highest taxpayers published in Newsweek magazine.</p>\r\n\r\n<p>Taisho Pharmaceuticals manufactured a beverage called Lipovitan D, and had a presence not only in Japan but also in Southeast Asia.</p>\r\n\r\n<p>Lipovitan D was claimed to contain taurine, which was said to be a nourishing tonic.</p>\r\n\r\n<p>During World War II, Japan procured taurine by collecting boiled octopus juice from octopus processing plants across the country in order to restore the strength of its soldiers.</p>\r\n\r\n<p>Taurine is abundant in squid and octopus.</p>\r\n\r\n<p>Seeing this, Mateschitz was amazed at the fact that in Japan, then the second largest economy in the world (the U.S. ranked first), an energy drink could make one a high taxpayer.</p>\r\n\r\n<p>From there, he came up with the idea of an energy drink business and launched Red Bull, an improved version of Lipovitan D with a taste more suited to Westerners.</p>\r\n\r\n<p>Today, Red Bull has overtaken Lipovitan D and is sold worldwide.</p>\r\n\r\n<p></p>", 'references': '', 'rating': 0.0, 'rating_count': None, 'published_date': dateutil.parser.parse("2023-07-03T02:53:18.366157+00:00"), 'updated_date': dateutil.parser.parse("2023-07-03T02:53:18.372662+00:00")} ) 
    knowledge_knowledge_88.author =  importer.locate_object(UserAccount, "id", UserAccount, "id", 1, {'id': 1, 'password': 'pbkdf2_sha256$600000$Q9AwSzFqEXF1ueS21sGGfz$rZo+NVruXU5Zf5vp00wtuwLn0Z333sn5NtvS8VWKqds=', 'last_login': dateutil.parser.parse("2023-06-30T06:03:10.086511+00:00"), 'is_superuser': True, 'email': 'yurinakanishi33@gmail.com', 'name': 'yuri', 'is_active': True, 'is_staff': True} ) 
    knowledge_knowledge_88 = importer.save_or_locate(knowledge_knowledge_88)

    knowledge_knowledge_89 = Knowledge()
    knowledge_knowledge_89.name = 'ヒルに血を吸わせて病気を治す？！'
    knowledge_knowledge_89.slug = 'let-leeches-suck-blood-to-cure-diseases-jp'
    knowledge_knowledge_89.language =  importer.locate_object(Language, "id", Language, "id", 2, {'id': 2, 'name': 'jp'} ) 
    knowledge_knowledge_89.genre_for_url =  importer.locate_object(GenreForURL, "id", GenreForURL, "id", 1, {'id': 1, 'name': 'knowledge'} ) 
    knowledge_knowledge_89.type = 'knowledge'
    knowledge_knowledge_89.notesite_url = 'https://note.com/argumented_world/n/n4e9c24cd4273'
    knowledge_knowledge_89.article =  importer.locate_object(Article, "id", Article, "id", 6188, {'id': 6188, 'excerpt': 'ヒルに血を吸わせて病気を治す？！', 'kicker': 'ヒルに血を吸わせて病気を治す？！', 'content': '<p>19世紀以前には病気を治療する方法として、潟血（しゃけつ）療法とよばれるものが一般的に行なわれていました。潟血療法は、血を体の外に出すことによって病気を治すというもので、現代でも一部で使用されています。血を抜く際には、主にヒルに血を吸わせていました。なぜ、血を抜くことで病気が治るとされていたのでしょう？</p>\r\n\r\n<p>19世紀ごろまで、医学では人体のことはほとんど分かっていませんでした。もちろん、ウィルスや細菌が多くの病気をひき起こすことも、知られていませんでした。 宗教的タブーや法的制約のために、人体解剖もできなかった。そのため医師であっても人体の解剖学的知識は17世紀になるまでごくかぎられていた。体中に酸素と栄養を運ぶ血流の仕組みも、意識や思考、感覚をつかさどる脳 や神経経路の役割も理解していなかったのだ。（『図説 世界史を変えた50の動物 』）</p>\r\n\r\n<p>ローマ帝国時代のギリシャで有名だった医学者であるガレノス（129年頃~200年頃）は、血には心臓でつくられる動脈血と肝臓でつくられる静脈血</p>\r\n\r\n<p>のふたつの経路があり、血液は体のあちらこちらでよどんだりたまったりして病気をひき起こすが、その血を外に出すことによって病気が治る</p>\r\n\r\n<p>と考えました。</p>\r\n\r\n<p>ヒルは、現代の私たちにはあまりなじみがないですが、淡水の池や水路に住み、馬や牛、人間などの動物の皮膚に吸い付いて血を吸う生き物です。 また、血を吸うときはヒルジンという抗凝固剤物質を出して、傷口がかさぶたで固まらないようにします。ヒルの画像は、刺激的なので、調べたい方だけお調べ下さい。笑ヒルって瀉血治療の時に血を抜き取るのに使えるじゃん！ということで、ヒルを使った瀉血治療自体は紀元前から行なわれていましたが、ガレノスと彼の支持者がそれをさらに広く普及させたのです。ヒルによる瀉血治療は中世の時代に増え、 17世紀には全盛期を迎えました。</p>\r\n\r\n<p>ヒルによる血はさまざまな症状で推奨され、とくに 赤面、炎症、高熱といった症状は体内の過剰な血液が原因と考えられていたため、ヒル治療がよく用いられた。気持ちが過度に高揚し、元気で快活すぎる精神状態をひき起こす「多血質」の症状も、 高血によって治療された。 奇妙なことに、ヒルは外傷の手当にも使われている。すでに出血で弱っている患者はさらに断続的な高血をほどこされて衰弱が激しくなり、死にいたることもあった。瀉血は病気子防にも用いられ、 出産や手術の際は決まって使われた。（『図説 世界史を変えた50の動物 』）</p>\r\n\r\n<p>ヒルを使ったのは医者だけではありませんでした。イギリスでは、理髪師も外科手術や歯の治療を認められていたので、医者にかかることができない貧しい人や戦場で負傷した兵士に瀉血治療や外科手術を行なっていました。</p>\r\n\r\n<p>これは有名な雑学ですが、床屋さんの前に立っているサインポールは、理髪師がかつて行っていた瀉血治療や外科手術をあらわしていると言われています。ポールの赤は血を、白は腕に色かれる止血用の包帯を、そしてポール全体は静脈を広げって血を出しやすくするために患者に握らせた木の棒を表現しているらしいです。瀉血治療に使えるために乱獲されたことで、ヨーロッパの多くの地域でヒルは、ほぼいなくなってしまいました。医師や理髪師たちは、ヒルを遠くの地域からから持ち込んだり、捕まえて自分で繁殖させなくてはいけなくなっていました。モーツァルトは元々体調を崩していたところに医者が瀉血治療を行なったことにより、死期を早めてしまったといわれています。また、画像はイメージですが、こんな感じの壺に水を入れてヒルを飼育していたそうです。</p>\r\n\r\n<p>現代では1620年代に、科学医療の発展によって、心臓による血液循環の仕組みが解明され、 ガレノスの「2つの体液説」は誤りであるとされました。しかし、ヒルによる湾血治療は19 世紀末まで続きました。また、1980年代には、医療用ヒルが手術で使われていました。先ほど述べたように、ヒルの唾液には強力な抗凝固剤である「ヒルジン」が含まれているので、移植手術のときに、ヒルを移植にする部位につけて、血流の凝固を防止するのです。現在では人間がつくった「合成ヒルジン」が使われています。</p>\r\n\r\n<p>『図説 世界史を変えた50の動物 』エリック シャリーン (著)、甲斐 理恵子 (翻訳)</p>\r\n\r\n<p>Tim Mossholder on Unsplash</p>\r\n\r\n<p>Stephanie Allen on Pexels</p>\r\n\r\n<p>Susann Engqvist on Pixabay</p>', 'references': '', 'rating': 0.0, 'rating_count': None, 'published_date': dateutil.parser.parse("2023-07-03T02:53:18.366157+00:00"), 'updated_date': dateutil.parser.parse("2023-07-03T02:53:18.372662+00:00")} ) 
    knowledge_knowledge_89.author =  importer.locate_object(UserAccount, "id", UserAccount, "id", 1, {'id': 1, 'password': 'pbkdf2_sha256$600000$Q9AwSzFqEXF1ueS21sGGfz$rZo+NVruXU5Zf5vp00wtuwLn0Z333sn5NtvS8VWKqds=', 'last_login': dateutil.parser.parse("2023-06-30T06:03:10.086511+00:00"), 'is_superuser': True, 'email': 'yurinakanishi33@gmail.com', 'name': 'yuri', 'is_active': True, 'is_staff': True} ) 
    knowledge_knowledge_89 = importer.save_or_locate(knowledge_knowledge_89)

    knowledge_knowledge_90 = Knowledge()
    knowledge_knowledge_90.name = 'let-leeches-suck-blood-to-cure-diseases'
    knowledge_knowledge_90.slug = 'let-leeches-suck-blood-to-cure-diseases'
    knowledge_knowledge_90.language =  importer.locate_object(Language, "id", Language, "id", 1, {'id': 1, 'name': 'en'} ) 
    knowledge_knowledge_90.genre_for_url =  importer.locate_object(GenreForURL, "id", GenreForURL, "id", 1, {'id': 1, 'name': 'knowledge'} ) 
    knowledge_knowledge_90.type = 'knowledge'
    knowledge_knowledge_90.notesite_url = 'https://note.com/argumented_world/n/n4e9c24cd4273'
    knowledge_knowledge_90.article =  importer.locate_object(Article, "id", Article, "id", 6189, {'id': 6189, 'excerpt': 'let-leeches-suck-blood-to-cure-diseases', 'kicker': 'let-leeches-suck-blood-to-cure-diseases', 'content': '<p>Before the 19th century, a common method of treating disease by having leeches suck blood was called shakuhaedotherapy.</p>\r\n\r\n<p>Lagotherapy cures diseases by drawing blood out of the body, and is still used in some parts of the world today. The blood was drained mainly by having leeches suck the blood.</p>\r\n\r\n<p>Why was it believed that draining blood could cure diseases?</p>\r\n\r\n<p>Table of Contents</p>\r\n\r\n<p>Imbalance of body fluids leads to disease</p>\r\n\r\n<p>Letting leeches suck blood</p>\r\n\r\n<p>In modern times</p>\r\n\r\n<p>Other articles and references</p>\r\n\r\n<p>Imbalance of Body Fluids Leads to Disease</p>\r\n\r\n<p>Until around the 19th century, medicine knew very little about the human body. Of course, it was not known that viruses and bacteria could cause many diseases.</p>\r\n\r\n<p>Due to religious taboos and legal restrictions, it was not possible to perform human dissections. Therefore, even physicians had very limited knowledge of human anatomy until the 17th century. They did not understand the mechanism of blood flow that carried oxygen and nutrients throughout the body, nor the role of the brain and neural pathways that controlled consciousness, thought, and sensation. (Illustrated book: 50 Animals that Changed the Course of World History)</p>\r\n\r\n<p>Galen (c. 129 ~ 200), a famous Greek physician during the Roman Empire, explained that blood has two pathways: arterial blood produced by the heart and venous blood produced by the liver.</p>\r\n\r\n<p>Blood stagnates and accumulates in various parts of the body, causing illness, but by removing the blood, illness can be cured.</p>\r\n\r\n<p>By removing the blood, the disease can be cured.</p>\r\n\r\n<p>Letting leeches suck blood</p>\r\n\r\n<p>Although leeches are not familiar to us today, they live in freshwater ponds and waterways and suck the blood of animals such as horses, cattle, and humans by sucking on their skin.</p>\r\n\r\n<p>When they suck blood, they also produce an anticoagulant substance called hirudin to prevent the wound from hardening into a scab. The images of leeches are irritating, so please only look them up if you want to. LOL!</p>\r\n\r\n<p>You know, leeches can be used to draw blood during phlebotomy! So, phlebotomy with leeches itself had been practiced since BC, but Galen and his followers made it more widely spread.</p>\r\n\r\n<p>Phlebotomy with leeches increased during the Middle Ages and reached its zenith in the 17th century.</p>\r\n\r\n<p>Blood by leeches was recommended for a variety of conditions, especially blushing, inflammation, and high fever, which were believed to be caused by excess blood in the body, so leech therapy was often used. Hyperaemia, a condition that causes an overly exuberant, energetic, and overly vivacious state of mind, was also treated with high blood.</p>\r\n\r\n<p>Oddly enough, leeches were also used to treat trauma. Patients who were already weak from blood loss were subjected to intermittent high blood pressure, which caused severe weakness and even death. Purging blood was also used to prevent childbirth, and was a common practice during childbirth and surgery. (Illustrated book: 50 Animals that Changed World History)</p>\r\n\r\n<p>Doctors were not the only ones who used leeches.</p>\r\n\r\n<p>In England, barbers were also allowed to perform surgical and dental procedures, so they performed phlebotomy and surgery on poor people who could not afford to see a doctor and soldiers wounded on the battlefield.</p>\r\n\r\n<p>It is a well-known misconception that the sign pole standing in front of the barbershop represents the phlebotomy and surgical procedures that were once performed by barbers.</p>\r\n\r\n<p>The red color of the pole represents blood, the white color represents a tourniquet for the arm, and the entire pole is said to represent a wooden stick held by the patient to widen the veins and make it easier to draw blood.</p>\r\n\r\n<p>Leeches have all but disappeared in many parts of Europe due to overhunting for their use in phlebotomy. Doctors and barbers had to bring in leeches from distant areas or catch them and breed them themselves.</p>\r\n\r\n<p>It is said that Mozart\'s death was hastened by the doctor\'s use of phlebotomy when he was originally in poor health.</p>\r\n\r\n<p>Also, although the image is an image, it is said that he kept leeches by filling water in a jar like this.</p>\r\n\r\n<p>In Modern Times</p>\r\n\r\n<p>In the 1620s, the development of scientific medicine revealed the mechanism of blood circulation by the heart, and Galen\'s "two body fluid theory" was declared false.</p>\r\n\r\n<p>However, the treatment of blood in the gulf by leeches continued until the end of the 19th century.</p>\r\n\r\n<p>Also in the 1980s, medical leeches were used in surgery. As mentioned earlier, leech saliva contains hirudin, a powerful anticoagulant, so during transplant surgery, leeches were placed on the site of the transplant to prevent clotting of the bloodstream.</p>\r\n\r\n<p>Nowadays, "synthetic hirudin" made by humans is used. Cure the ?</p>\r\n\r\n<p></p>', 'references': '', 'rating': 0.0, 'rating_count': None, 'published_date': dateutil.parser.parse("2023-07-03T02:53:18.366157+00:00"), 'updated_date': dateutil.parser.parse("2023-07-03T02:53:18.372662+00:00")} ) 
    knowledge_knowledge_90.author =  importer.locate_object(UserAccount, "id", UserAccount, "id", 1, {'id': 1, 'password': 'pbkdf2_sha256$600000$Q9AwSzFqEXF1ueS21sGGfz$rZo+NVruXU5Zf5vp00wtuwLn0Z333sn5NtvS8VWKqds=', 'last_login': dateutil.parser.parse("2023-06-30T06:03:10.086511+00:00"), 'is_superuser': True, 'email': 'yurinakanishi33@gmail.com', 'name': 'yuri', 'is_active': True, 'is_staff': True} ) 
    knowledge_knowledge_90 = importer.save_or_locate(knowledge_knowledge_90)

    knowledge_knowledge_91 = Knowledge()
    knowledge_knowledge_91.name = '追い込まれた者の最後のあがき【帆船効果】'
    knowledge_knowledge_91.slug = 'last-gasp-of-the-cornered-sailboat-effect-jp'
    knowledge_knowledge_91.language =  importer.locate_object(Language, "id", Language, "id", 2, {'id': 2, 'name': 'jp'} ) 
    knowledge_knowledge_91.genre_for_url =  importer.locate_object(GenreForURL, "id", GenreForURL, "id", 1, {'id': 1, 'name': 'knowledge'} ) 
    knowledge_knowledge_91.type = 'knowledge'
    knowledge_knowledge_91.notesite_url = 'https://note.com/argumented_world/n/nc274a14c95a7'
    knowledge_knowledge_91.article =  importer.locate_object(Article, "id", Article, "id", 6190, {'id': 6190, 'excerpt': '追い込まれた者の最後のあがき【帆船効果】', 'kicker': '追い込まれた者の最後のあがき【帆船効果】', 'content': '<p>俺が一番だ。そう思ってた。あいつがやってくるまでは。けど、あいつはもう俺のすぐ後ろまで追いついてきた。あと少ししたら俺はあっという間に追い抜かれてしまうだろう。どうせ負け試合だ。だったら最後に一花咲かせてやろうじゃねえか！</p>\r\n\r\n<p>ある技術は、いつかは廃れ、新しい技術が取って代わります。１９世紀の初め、蒸気船が発明され普及していきました。それまでの風を受けて進んでいた帆船と違い、蒸気船は天候に左右されにくく、安定したスピードを出すことができます。 帆船が蒸気船に取って代わられるは時間の問題でした。そんな中、帆船は最後の進化を遂げます。 それまで蓄積されてきた技術が結集し、高速帆船（クリッパー）と呼ばれる帆船が登場しました。クリッパーは普通の帆船より縦長の細い船体となり、帆の位置を高くし、面積を２倍に広げて風の力を受けやすくしたという、とことん速さを追求した帆船でした。</p>\r\n\r\n<p>当時の普通の帆船はは時速１１km程度でしたが、クリッパーは、平均時速３４kmという驚異の速さを出しました。当時のまだ速度の遅い蒸気船は、競争相手にもなりませんでした。クリッパーは、長い帆船の歴史のなかでの最後の輝きでした。このような現象を帆船効果といいます。</p>\r\n\r\n<p>上の画像はカティーサーク号と呼ばれるクリッパーです。ウイスキーの名前にもなっているので、ご存じの方も多いかもしれません。下の画像のウイスキーのラベルの真ん中には、カティーサーク号が描かれています。</p>\r\n\r\n<p>帆船効果は、帆船以外にも様々なもので起っていますし、これからも起っていくでしょう。現代でいえば、ガスコンロがあります。ガスコンロは今、電気を使ったコンロに取って代わられようとしています。そしてここ最近、ガスコンロの性能や使い勝手は格段に進歩しています。最後に私の妄想ですが、YouTubeに取って代わられようとしているテレビが、帆船効果によって、最後に何かやってくれるんじゃないの？と思ったりしています。</p>\r\n\r\n<p>参考資料、使用させて頂いた画像</p>\r\n\r\n<p>『「白い光」を創る: 社会と技術の革新史』\u3000宮原 諄二</p>\r\n\r\n<p>File:StateLibQld 1 102497 Great Australia (ship).jpg</p>\r\n\r\n<p>Rolf Johansson on Pixabay</p>\r\n\r\n<p>File:Cutty sark1.jpg</p>\r\n\r\n<p>Bottle of Cutty Sark Scotch Whisky with box.JPG</p>', 'references': '', 'rating': 0.0, 'rating_count': None, 'published_date': dateutil.parser.parse("2023-07-03T02:53:18.366157+00:00"), 'updated_date': dateutil.parser.parse("2023-07-03T02:53:18.372662+00:00")} ) 
    knowledge_knowledge_91.author =  importer.locate_object(UserAccount, "id", UserAccount, "id", 1, {'id': 1, 'password': 'pbkdf2_sha256$600000$Q9AwSzFqEXF1ueS21sGGfz$rZo+NVruXU5Zf5vp00wtuwLn0Z333sn5NtvS8VWKqds=', 'last_login': dateutil.parser.parse("2023-06-30T06:03:10.086511+00:00"), 'is_superuser': True, 'email': 'yurinakanishi33@gmail.com', 'name': 'yuri', 'is_active': True, 'is_staff': True} ) 
    knowledge_knowledge_91 = importer.save_or_locate(knowledge_knowledge_91)

    knowledge_knowledge_92 = Knowledge()
    knowledge_knowledge_92.name = 'Last gasp of the cornered [sailboat effect].'
    knowledge_knowledge_92.slug = 'last-gasp-of-the-cornered-sailboat-effect'
    knowledge_knowledge_92.language =  importer.locate_object(Language, "id", Language, "id", 1, {'id': 1, 'name': 'en'} ) 
    knowledge_knowledge_92.genre_for_url =  importer.locate_object(GenreForURL, "id", GenreForURL, "id", 1, {'id': 1, 'name': 'knowledge'} ) 
    knowledge_knowledge_92.type = 'knowledge'
    knowledge_knowledge_92.notesite_url = 'https://note.com/argumented_world/n/nc274a14c95a7'
    knowledge_knowledge_92.article =  importer.locate_object(Article, "id", Article, "id", 6191, {'id': 6191, 'excerpt': 'Last gasp of the cornered [sailboat effect].', 'kicker': 'Last gasp of the cornered [sailboat effect].', 'content': "<p>I'm the best. That's what I thought. Until he came along. And he's already caught up with me. I'll be overtaken in no time. It's a losing game anyway, so let's give it one last shot!</p>\r\n\r\n<p>One technology will one day become obsolete and be replaced by a new one. At the beginning of the 19th century, steamships were invented and popularized. Unlike sailboats, which had been propelled by the wind, steamships were less susceptible to weather conditions and could achieve a steady speed. It was only a matter of time before sailing ships would be replaced by steamships.</p>\r\n\r\n<p>Under such circumstances, sailboats achieved their final evolution.The technology that had been accumulated up to that point was brought together to create the high-speed sailing ship (clipper). The clipper was a sailing ship that pursued speed to the utmost, with a narrower, longer hull, higher sails, and twice the sail area to better catch the force of the wind.</p>\r\n\r\n<p>--------Ordinary sailing ships of the time were capable of speeds of about 11 km/h, but the Clipper achieved an astonishing average speed of 34 km/h. Steamboats, which were still slow at the time, could not even compete.The clipper was the last bright spot in the long history of sailing ships. This phenomenon is called the sailing ship effect.</p>\r\n\r\n<p>The image above is a clipper called the Cutty Sark. You may know it as the name of the whiskey. The middle of the whiskey label in the image below shows the Cutty Sark.</p>\r\n\r\n<p>* The Sailing Ship Effect</p>\r\n\r\n<p>The sailing ship effect has occurred and will continue to occur in many other things besides sailing ships.</p>\r\n\r\n<p>In modern times, there is the gas stove. Gas stoves are now being replaced by electric stoves. And in recent years, the performance and ease of use of gas stoves has improved dramatically.Finally, in my fantasy, I wonder if TV, which is about to be replaced by YouTube, will finally do something about it due to the sailboat effect. I think so.</p>\r\n\r\n<p></p>", 'references': '', 'rating': 0.0, 'rating_count': None, 'published_date': dateutil.parser.parse("2023-07-03T02:53:18.366157+00:00"), 'updated_date': dateutil.parser.parse("2023-07-03T02:53:18.372662+00:00")} ) 
    knowledge_knowledge_92.author =  importer.locate_object(UserAccount, "id", UserAccount, "id", 1, {'id': 1, 'password': 'pbkdf2_sha256$600000$Q9AwSzFqEXF1ueS21sGGfz$rZo+NVruXU5Zf5vp00wtuwLn0Z333sn5NtvS8VWKqds=', 'last_login': dateutil.parser.parse("2023-06-30T06:03:10.086511+00:00"), 'is_superuser': True, 'email': 'yurinakanishi33@gmail.com', 'name': 'yuri', 'is_active': True, 'is_staff': True} ) 
    knowledge_knowledge_92 = importer.save_or_locate(knowledge_knowledge_92)

    knowledge_knowledge_93 = Knowledge()
    knowledge_knowledge_93.name = 'ジーンズと自由主義'
    knowledge_knowledge_93.slug = 'jeans-and-liberalism-jp'
    knowledge_knowledge_93.language =  importer.locate_object(Language, "id", Language, "id", 2, {'id': 2, 'name': 'jp'} ) 
    knowledge_knowledge_93.genre_for_url =  importer.locate_object(GenreForURL, "id", GenreForURL, "id", 1, {'id': 1, 'name': 'knowledge'} ) 
    knowledge_knowledge_93.type = 'knowledge'
    knowledge_knowledge_93.notesite_url = 'https://note.com/argumented_world/n/nc1b24c57b433'
    knowledge_knowledge_93.article =  importer.locate_object(Article, "id", Article, "id", 6192, {'id': 6192, 'excerpt': 'ジーンズと自由主義', 'kicker': 'ジーンズと自由主義', 'content': "<p>今回は、みなさんが一着は持っているであろうジーンズの歴史を紹介します。1848年、アメリカのカリフォルニア州で金（きん）がとれることが分かり、人々がカリフォルニアに一攫千金を狙って金を掘り当てるために殺到しました。この出来事をゴールドラッシュといいます。このゴールドラッシュのときに、土を掘る際に破れにくい丈夫な作業着としてジーンズが登場しました。当時、Levi's（リーヴァイス）は、すり切れやすい所を金具で補強したのジーンズの特許をとり、大成収を収めました。リーヴァイスは、今日までジーンズの代表的なメーカーとなっています。皆さんもこのロゴを見たことはあるかと思います。そしていつしか、ジーンズは一般的な労働者が着る作業着として定着していきました。</p>\r\n\r\n<p>月日が経ち1960年代、ベトナム反戦運動や公民権運動などを背景として、これまでの社会のあり方をひっくり返したいという反体制的な文化が盛り上がりました。カウンターカルチャーです。代表的なものとしては、LSD（麻薬）、ボブディラン、ロックミュージックなどがあります。こうして世界が自由主義へと移行していく中で、社会的な立場が低い労働者が履いていたことで「自由・反抗」の象徴ともなっていたジーンズをアメリカのカウンターカルチャーの人々が身につけるようになりました。 そこから一般の人々もジーンズを履くようになり、アメリカから世界へと広がっていきました。</p>\r\n\r\n<p>ロックンロールの歌手達の多くはジーンズを履いていました。レコードのカバー写真に、歌手がジーンズ姿で登場するのは、ボブディランの1963年のこのレコードが最初なようです。</p>\r\n\r\n<p>このようにジーンズは、ゴールドラッシュからカウンターカルチャーの時まで、多くの人々の夢と希望と一緒に履き継がれていきました。</p>\r\n\r\n<p>【歴史】モッズやヒッピー、カウンターカルチャーとジーンズ\u3000’https://www.fashion-press.net/news/25312’</p>\r\n\r\n<p>『朝日百科\u3000世界の歴史10\u3000ー19世紀ー』1991年\u3000朝日新聞社 D668</p>\r\n\r\n<p>PexelsのRogério Martinsによる写真</p>\r\n\r\n<p>Levi's Storefront (48105830541).jpg</p>", 'references': '', 'rating': 0.0, 'rating_count': None, 'published_date': dateutil.parser.parse("2023-07-03T02:53:18.366157+00:00"), 'updated_date': dateutil.parser.parse("2023-07-03T02:53:18.372662+00:00")} ) 
    knowledge_knowledge_93.author =  importer.locate_object(UserAccount, "id", UserAccount, "id", 1, {'id': 1, 'password': 'pbkdf2_sha256$600000$Q9AwSzFqEXF1ueS21sGGfz$rZo+NVruXU5Zf5vp00wtuwLn0Z333sn5NtvS8VWKqds=', 'last_login': dateutil.parser.parse("2023-06-30T06:03:10.086511+00:00"), 'is_superuser': True, 'email': 'yurinakanishi33@gmail.com', 'name': 'yuri', 'is_active': True, 'is_staff': True} ) 
    knowledge_knowledge_93 = importer.save_or_locate(knowledge_knowledge_93)

    knowledge_knowledge_94 = Knowledge()
    knowledge_knowledge_94.name = 'Jeans and Liberalism'
    knowledge_knowledge_94.slug = 'jeans-and-liberalism'
    knowledge_knowledge_94.language =  importer.locate_object(Language, "id", Language, "id", 1, {'id': 1, 'name': 'en'} ) 
    knowledge_knowledge_94.genre_for_url =  importer.locate_object(GenreForURL, "id", GenreForURL, "id", 1, {'id': 1, 'name': 'knowledge'} ) 
    knowledge_knowledge_94.type = 'knowledge'
    knowledge_knowledge_94.notesite_url = 'https://note.com/argumented_world/n/nc1b24c57b433'
    knowledge_knowledge_94.article =  importer.locate_object(Article, "id", Article, "id", 6193, {'id': 6193, 'excerpt': 'Jeans and Liberalism', 'kicker': 'Jeans and Liberalism', 'content': '<p>In this issue, I would like to introduce the history of jeans, a pair of which you probably own at least once. In 1848, when gold was discovered in the U.S. state of California, people rushed to California to get rich and dig for gold. This event is called the Gold Rush. During this gold rush, jeans were introduced as sturdy work clothes that would not tear easily when digging in the dirt. At the time, Levi\'s patented a pair of jeans that were reinforced with metal fittings in places where they were prone to fraying, and it was a great success. Levi\'s has become a leading manufacturer of jeans to this day. You have probably seen this logo before. And over time, jeans became the workwear of choice for the average worker.</p>\r\n\r\n<p>As time went by, in the 1960s, against the backdrop of the anti-war movement in Vietnam and the civil rights movement, a counterculture emerged that wanted to overturn the conventional way of society. This is the counterculture. Typical examples include LSD (narcotics), Bob Dylan, and rock music. As the world shifted toward liberalism, the American counterculture began to wear jeans, which had become a symbol of "freedom and rebellion" because they were worn by workers of low social standing. From there, the general public also began to wear jeans, and they spread from the U.S. to the rest of the world.</p>\r\n\r\n<p>Many rock and roll singers wore jeans. This 1963 record by Bob Dylan seems to be the first time a singer appeared in jeans in a record cover photo.\u3000Thus, jeans were worn with the dreams and hopes of many people from the gold rush to the counterculture.</p>\r\n\r\n<p>【歴史】モッズやヒッピー、カウンターカルチャーとジーンズ\u3000’https://www.fashion-press.net/news/25312’</p>\r\n\r\n<p>『朝日百科\u3000世界の歴史10\u3000ー19世紀ー』1991年\u3000朝日新聞社 D668</p>\r\n\r\n<p>PexelsのRogério Martinsによる写真</p>\r\n\r\n<p>Levi\'s Storefront (48105830541).jpg</p>', 'references': '', 'rating': 0.0, 'rating_count': None, 'published_date': dateutil.parser.parse("2023-07-03T02:53:18.366157+00:00"), 'updated_date': dateutil.parser.parse("2023-07-03T02:53:18.372662+00:00")} ) 
    knowledge_knowledge_94.author =  importer.locate_object(UserAccount, "id", UserAccount, "id", 1, {'id': 1, 'password': 'pbkdf2_sha256$600000$Q9AwSzFqEXF1ueS21sGGfz$rZo+NVruXU5Zf5vp00wtuwLn0Z333sn5NtvS8VWKqds=', 'last_login': dateutil.parser.parse("2023-06-30T06:03:10.086511+00:00"), 'is_superuser': True, 'email': 'yurinakanishi33@gmail.com', 'name': 'yuri', 'is_active': True, 'is_staff': True} ) 
    knowledge_knowledge_94 = importer.save_or_locate(knowledge_knowledge_94)

    knowledge_knowledge_95 = Knowledge()
    knowledge_knowledge_95.name = ''
    knowledge_knowledge_95.slug = 'is-the-probability-of-precipitation-heaped-up-and-predicted-jp'
    knowledge_knowledge_95.language =  importer.locate_object(Language, "id", Language, "id", 2, {'id': 2, 'name': 'jp'} ) 
    knowledge_knowledge_95.genre_for_url =  importer.locate_object(GenreForURL, "id", GenreForURL, "id", 1, {'id': 1, 'name': 'knowledge'} ) 
    knowledge_knowledge_95.type = 'knowledge'
    knowledge_knowledge_95.notesite_url = 'https://note.com/argumented_world/n/nfc67bb77698f'
    knowledge_knowledge_95.article =  importer.locate_object(Article, "id", Article, "id", 6194, {'id': 6194, 'excerpt': '', 'kicker': '', 'content': '<p>天気予報。皆さんもお出かけの日にはテレビやスマホで天気予報を確認されているかと思います。そして近年、天気予報の予測の精度はコンピュータの発達などによって格段に上がっています。そんな天気予報ですが、降水確率を多めに盛っている可能性があります。アメリカのウェザーチャンネルでは、過去のデータを見ると降水確率が20％と予想された内、実際には5％しか雨が降っておらず（※1）、日本でも降水確率は40％と予想されていた日のうち、実際に雨が降った日は20％だったというデータがあります。※2</p>\r\n\r\n<p>理由は、苦情を防止するためです。 天気予報で「雨ですよ」といわれてお出かけを中止しても、実際は雨が降らなかったら、「良かった」「ラッキー！」となりますが、「雨は降りませんよ」といわれて、お出かけしたのに雨が降ってしまったら、「えー！」となってしまいます。</p>\r\n\r\n<p>日本では、降水確率80％と予想された場合、ほぼ100％の確率で雨が降っています。降水確率100％と予想して雨が降らないことを恐れて、100％付近では降水確率を低く予想しているのかもしれません。</p>\r\n\r\n<p>台風などの災害だと話は別ですが、雨が降る、降らないくらいならば少しくらい予報を盛って伝えてもあまり影響はないかもしれません。本当に正しいデータを言うべきか、人々から苦情が来ないデータを言うべきか、悩ましいところです。</p>\r\n\r\n<p>シグナル&ノイズ 天才データアナリストの「予測学」 ※１</p>\r\n\r\n<p>ネイト・シルバー (著)、西内啓、川添節子 (翻訳)</p>\r\n\r\n<p>『「雨のバイアス」からみる 8 か国のリスク回避度 』世良多加紘\u3000※２</p>\r\n\r\n<p>www.abef.jp</p>\r\n\r\n<p>mohamed Hassan Pixabay</p>\r\n\r\n<p>Photo by Henrik Jacobson on Unsplash</p>', 'references': '', 'rating': 0.0, 'rating_count': None, 'published_date': dateutil.parser.parse("2023-07-03T02:53:18.366157+00:00"), 'updated_date': dateutil.parser.parse("2023-07-03T02:53:18.372662+00:00")} ) 
    knowledge_knowledge_95.author =  importer.locate_object(UserAccount, "id", UserAccount, "id", 1, {'id': 1, 'password': 'pbkdf2_sha256$600000$Q9AwSzFqEXF1ueS21sGGfz$rZo+NVruXU5Zf5vp00wtuwLn0Z333sn5NtvS8VWKqds=', 'last_login': dateutil.parser.parse("2023-06-30T06:03:10.086511+00:00"), 'is_superuser': True, 'email': 'yurinakanishi33@gmail.com', 'name': 'yuri', 'is_active': True, 'is_staff': True} ) 
    knowledge_knowledge_95 = importer.save_or_locate(knowledge_knowledge_95)

    knowledge_knowledge_96 = Knowledge()
    knowledge_knowledge_96.name = 'Is the probability of precipitation heaped up and predicted?'
    knowledge_knowledge_96.slug = 'is-the-probability-of-precipitation-heaped-up-and-predicted'
    knowledge_knowledge_96.language =  importer.locate_object(Language, "id", Language, "id", 1, {'id': 1, 'name': 'en'} ) 
    knowledge_knowledge_96.genre_for_url =  importer.locate_object(GenreForURL, "id", GenreForURL, "id", 1, {'id': 1, 'name': 'knowledge'} ) 
    knowledge_knowledge_96.type = 'knowledge'
    knowledge_knowledge_96.notesite_url = 'https://note.com/argumented_world/n/nfc67bb77698f'
    knowledge_knowledge_96.article =  importer.locate_object(Article, "id", Article, "id", 6195, {'id': 6195, 'excerpt': 'Is the probability of precipitation heaped up and predicted?', 'kicker': 'Is the probability of precipitation heaped up and predicted?', 'content': '<p>You probably check the weather forecast on your TV or smartphone on the day you go out. In recent years, the accuracy of weather forecasting has improved dramatically with the development of computers. However, there is a possibility that the probability of precipitation is overstated.</p>\r\n\r\n<p>In the past data of precipitation, the Weather Channel in the U.S. forecasted a 20% chance of precipitation, but only 5% actually rained (*1), and in Japan, of the days when a 40% chance of precipitation was forecasted, 20% actually rained. *2</p>\r\n\r\n<p>The reason is probably to prevent complaints. If you cancel an outing because the weather forecast says "It will rain," but it actually does not rain, you may think "Thank goodness" or "Lucky! But if you are told that it will not rain and you go out and it rains, you will say, "What!</p>\r\n\r\n<p>In Japan, when a rainfall probability of 80% is forecasted, there is almost a 100% chance of rain. They may forecast a lower probability of precipitation near 100% for fear of forecasting a 100% probability of precipitation and no rain.</p>\r\n\r\n<p>If it is a disaster such as a typhoon, it is a different story, but if it is just rain or no rain, it may not have much of an impact even if the forecast is slightly exaggerated. It is difficult to decide whether we should give truly accurate data or data that people will not complain about.</p>\r\n\r\n<p>シグナル&ノイズ 天才データアナリストの「予測学」 ※1</p>\r\n\r\n<p>ネイト・シルバー (著)、西内啓、川添節子 (翻訳)</p>\r\n\r\n<p>『「雨のバイアス」からみる 8 か国のリスク回避度 』世良多加紘\u3000※2</p>\r\n\r\n<p>www.abef.jp</p>\r\n\r\n<p>mohamed Hassan Pixabay</p>\r\n\r\n<p>Photo by Henrik Jacobson on Unsplash</p>', 'references': '', 'rating': 0.0, 'rating_count': None, 'published_date': dateutil.parser.parse("2023-07-03T02:53:18.366157+00:00"), 'updated_date': dateutil.parser.parse("2023-07-03T02:53:18.372662+00:00")} ) 
    knowledge_knowledge_96.author =  importer.locate_object(UserAccount, "id", UserAccount, "id", 1, {'id': 1, 'password': 'pbkdf2_sha256$600000$Q9AwSzFqEXF1ueS21sGGfz$rZo+NVruXU5Zf5vp00wtuwLn0Z333sn5NtvS8VWKqds=', 'last_login': dateutil.parser.parse("2023-06-30T06:03:10.086511+00:00"), 'is_superuser': True, 'email': 'yurinakanishi33@gmail.com', 'name': 'yuri', 'is_active': True, 'is_staff': True} ) 
    knowledge_knowledge_96 = importer.save_or_locate(knowledge_knowledge_96)

    knowledge_knowledge_97 = Knowledge()
    knowledge_knowledge_97.name = ''
    knowledge_knowledge_97.slug = 'inside-belarus-jp'
    knowledge_knowledge_97.language =  importer.locate_object(Language, "id", Language, "id", 2, {'id': 2, 'name': 'jp'} ) 
    knowledge_knowledge_97.genre_for_url =  importer.locate_object(GenreForURL, "id", GenreForURL, "id", 1, {'id': 1, 'name': 'knowledge'} ) 
    knowledge_knowledge_97.type = 'knowledge'
    knowledge_knowledge_97.notesite_url = ''
    knowledge_knowledge_97.article =  importer.locate_object(Article, "id", Article, "id", 6196, {'id': 6196, 'excerpt': '', 'kicker': '', 'content': '<p>ベラルーシは、ミンスクで飛行機を強制着陸させました。そして、その飛行機に乗っていた野党活動家でジャーナリストのロマン・プロタセビッチとその恋人ソフィア・サペガが当局に逮捕されまして。欧州の各国はこれは国家によるハイジャックと見ています。</p>\r\n\r\n<p>ベラルーシのアレクサンドル・ルカシェンコ大統領が80％の得票率で当選。</p>\r\n\r\n<p>ベラルーシ 中東 難民・移民 ポーランドと国境線。ベラルーシは、あなたがベラルーシを経由することができますに難民に言った</p>\r\n\r\n<p>ベラルーシからウクライナに侵攻したロシア軍部隊の一部</p>\r\n\r\n<p>INSIDE BELARUS: PUTIN’S PUPPET REGIME</p>\r\n\r\n<p>https://javafilms.fr/film/inside-belarus-putins-puppet-regime</p>', 'references': '', 'rating': 0.0, 'rating_count': None, 'published_date': dateutil.parser.parse("2023-07-03T02:53:18.366157+00:00"), 'updated_date': dateutil.parser.parse("2023-07-03T02:53:18.372662+00:00")} ) 
    knowledge_knowledge_97.author =  importer.locate_object(UserAccount, "id", UserAccount, "id", 1, {'id': 1, 'password': 'pbkdf2_sha256$600000$Q9AwSzFqEXF1ueS21sGGfz$rZo+NVruXU5Zf5vp00wtuwLn0Z333sn5NtvS8VWKqds=', 'last_login': dateutil.parser.parse("2023-06-30T06:03:10.086511+00:00"), 'is_superuser': True, 'email': 'yurinakanishi33@gmail.com', 'name': 'yuri', 'is_active': True, 'is_staff': True} ) 
    knowledge_knowledge_97 = importer.save_or_locate(knowledge_knowledge_97)

    knowledge_knowledge_98 = Knowledge()
    knowledge_knowledge_98.name = 'Inside belarus'
    knowledge_knowledge_98.slug = 'inside-belarus'
    knowledge_knowledge_98.language =  importer.locate_object(Language, "id", Language, "id", 1, {'id': 1, 'name': 'en'} ) 
    knowledge_knowledge_98.genre_for_url =  importer.locate_object(GenreForURL, "id", GenreForURL, "id", 1, {'id': 1, 'name': 'knowledge'} ) 
    knowledge_knowledge_98.type = 'knowledge'
    knowledge_knowledge_98.notesite_url = ''
    knowledge_knowledge_98.article =  importer.locate_object(Article, "id", Article, "id", 6197, {'id': 6197, 'excerpt': 'Inside belarus', 'kicker': 'Inside belarus', 'content': '<p>I watched a documentary movie "INSIDE BELARUS: PUTIN’S PUPPET REGIME"</p>\r\n\r\n<p>Belarus Forces Down Plane in Minsku. opposition activist and journalist Roman Protasevich and his girlfriend Sofia Sapega, were arrested by authorities.  up Europe Sees State Hijacking</p>\r\n\r\n<p>Belarusian president Alexander Lukashenko elected with 80% vote rate.</p>\r\n\r\n<p>Belarus Middle East Refugees and Migrants Porland and borderline</p>\r\n\r\n<p>Belarus said to the refugees to "You can via Belarus"</p>\r\n\r\n<p>freezing condition</p>\r\n\r\n<p>some of the troops Russian army invaded Ukrina from Belarus</p>\r\n\r\n<p>INSIDE BELARUS: PUTIN’S PUPPET REGIME</p>\r\n\r\n<p>https://javafilms.fr/film/inside-belarus-putins-puppet-regime</p>', 'references': '', 'rating': 0.0, 'rating_count': None, 'published_date': dateutil.parser.parse("2023-07-03T02:53:18.366157+00:00"), 'updated_date': dateutil.parser.parse("2023-07-03T02:53:18.372662+00:00")} ) 
    knowledge_knowledge_98.author =  importer.locate_object(UserAccount, "id", UserAccount, "id", 1, {'id': 1, 'password': 'pbkdf2_sha256$600000$Q9AwSzFqEXF1ueS21sGGfz$rZo+NVruXU5Zf5vp00wtuwLn0Z333sn5NtvS8VWKqds=', 'last_login': dateutil.parser.parse("2023-06-30T06:03:10.086511+00:00"), 'is_superuser': True, 'email': 'yurinakanishi33@gmail.com', 'name': 'yuri', 'is_active': True, 'is_staff': True} ) 
    knowledge_knowledge_98 = importer.save_or_locate(knowledge_knowledge_98)

    knowledge_knowledge_99 = Knowledge()
    knowledge_knowledge_99.name = '紙がないと戦争ができない！？'
    knowledge_knowledge_99.slug = 'indipendence-war-and-a-paper-jp'
    knowledge_knowledge_99.language =  importer.locate_object(Language, "id", Language, "id", 2, {'id': 2, 'name': 'jp'} ) 
    knowledge_knowledge_99.genre_for_url =  importer.locate_object(GenreForURL, "id", GenreForURL, "id", 1, {'id': 1, 'name': 'knowledge'} ) 
    knowledge_knowledge_99.type = 'knowledge'
    knowledge_knowledge_99.notesite_url = 'https://note.com/argumented_world/n/n38bfa7ebeb51'
    knowledge_knowledge_99.article =  importer.locate_object(Article, "id", Article, "id", 6198, {'id': 6198, 'excerpt': '紙がないと戦争ができない！？', 'kicker': '紙がないと戦争ができない！？', 'content': '<p>今回は、アメリカ独立戦争のときのお話しです。アメリカがイギリスの植民地だった頃、アメリカ国民には「印紙税」や「茶税」などの様々な税金や経済規制がかけられました。とうとう我慢できなくなったアメリカ人は独立を決意し、ついに1775年にイギリスと戦争をすることになります。これが独立戦争です。しかし当時、紙をイギリスやオランダなどからの輸入に頼り切っていたアメリカは、戦争をするに当たって困難にぶつかります。</p>\r\n\r\n<p>困った政府は、紙の生産量を増やそうと、お達しや呼びかけを行ないました。 当時は、着古した衣服などのぼろ布から紙がつくられていたので、住民に、製紙に使える白いぼろ布を、いかに少ない量であっても溜めることを義務づけました。ノースカロライナの製紙場は、若い女性に向かって「布は、雪のように白い胸を隠すにはもはやふさわしくない」「古いハンカチを自分のところに売ってもらえれば、 いつの日かそれがラブレターとなって戻ってくるかもしれない」</p>\r\n\r\n<p>というキャッチコピーで、製紙場にぼろ布を売ってくれるように、訴えました。</p>\r\n\r\n<p>軍隊の方は、なんとか紙を入手しようとしました。本もバラバラにしたら紙として使えるということで、たくさんの本が破かれ、紙としてマスケット銃に使われました。 戦争の年に出版した「聖書」の三千部のほとんどがマスケット銃の発砲のために使われたそうです。また、未製本の『殉教者列伝』（キリシタンの殉教者達の記録書）が荷馬車二台で製本所へ向かう途中、大陸軍の部隊に捕らえられ、ブランディワインの戦いに用いられました（略奪じゃん！）。新聞社は「もっとたくさんの記事を載せたくてもそのための紙がありません！」と謝罪していたそうです。このような苦難を乗り越えて、アメリカはイギリスとの戦いに勝ち、独立を勝ち取ったのでした。</p>\r\n\r\n<p>マーク カーランスキー(著)\u3000川副 智子 (翻訳)\u3000徳間書店</p>\r\n\r\n<p>『 紙の世界史: PAPER 歴史に突き動かされた技術』</p>\r\n\r\n<p>Andrik Langfield on Unsplash</p>\r\n\r\n<p>Hasan Almasi on Unsplash</p>\r\n\r\n<p>Pixabay on Pexels</p>\r\n\r\n<p>Dmitrii Fursov on Pexels</p>', 'references': '', 'rating': 0.0, 'rating_count': None, 'published_date': dateutil.parser.parse("2023-07-03T02:53:18.366157+00:00"), 'updated_date': dateutil.parser.parse("2023-07-03T02:53:18.372662+00:00")} ) 
    knowledge_knowledge_99.author =  importer.locate_object(UserAccount, "id", UserAccount, "id", 1, {'id': 1, 'password': 'pbkdf2_sha256$600000$Q9AwSzFqEXF1ueS21sGGfz$rZo+NVruXU5Zf5vp00wtuwLn0Z333sn5NtvS8VWKqds=', 'last_login': dateutil.parser.parse("2023-06-30T06:03:10.086511+00:00"), 'is_superuser': True, 'email': 'yurinakanishi33@gmail.com', 'name': 'yuri', 'is_active': True, 'is_staff': True} ) 
    knowledge_knowledge_99 = importer.save_or_locate(knowledge_knowledge_99)

    knowledge_knowledge_100 = Knowledge()
    knowledge_knowledge_100.name = 'Indipendence war and a paper'
    knowledge_knowledge_100.slug = 'indipendence-war-and-a-paper'
    knowledge_knowledge_100.language =  importer.locate_object(Language, "id", Language, "id", 1, {'id': 1, 'name': 'en'} ) 
    knowledge_knowledge_100.genre_for_url =  importer.locate_object(GenreForURL, "id", GenreForURL, "id", 1, {'id': 1, 'name': 'knowledge'} ) 
    knowledge_knowledge_100.type = 'knowledge'
    knowledge_knowledge_100.notesite_url = 'https://note.com/argumented_world/n/n38bfa7ebeb51'
    knowledge_knowledge_100.article =  importer.locate_object(Article, "id", Article, "id", 6199, {'id': 6199, 'excerpt': 'Indipendence war and a paper', 'kicker': 'Indipendence war and a paper', 'content': '<p>In this issue, I would like to talk about the American Revolutionary War. When the U.S. was a British colony, the American people were subjected to various taxes and economic restrictions, such as the "stamp tax" and the "tea tax. Finally, the Americans could not take it anymore and decided to become independent, and finally went to war with the British in 1775. This was the War of Independence. However, the U.S., which at the time relied heavily on imports of paper from England, Netherland, and other countries, ran into difficulties when it came time to fight the war.</p>\r\n\r\n<p>Troubled by the situation, the government issued a series of announcements and calls for increased paper production. Since paper was made from rags from used clothing, residents were required to accumulate as little white rags as possible for use in papermaking. North Carolina\'s paper mills would tell young women, "Cloth is no longer fit to hide your snow-white breasts," and "Sell your old handkerchiefs to yourself, and they may one day come back as love letters. With the catchphrase, "If you sell your old handkerchiefs to me, they may one day come back as love letters," they appealed to the paper mills to sell their rags.</p>\r\n\r\n<p>In the war, many books were torn up and used as paper for musket firing. Most of the 3,000 copies of "The Bible" published during the war years were used to fire muskets. Also, an unbound copy of the "Martyrology of the Martyrs" (a record of Christian martyrs) was captured by a Continental Army unit on its way to the bookbinders in two wagons and used in the Battle of Brandywine (that\'s looting!). ). The newspaper apologized, saying, "We\'d love to run more stories, but we don\'t have the paper for it!" They apologized. Through these hardships, the U.S. won the battle against the British and gained its independence.</p>\r\n\r\n<p>マーク カーランスキー(著)\u3000川副 智子 (翻訳)\u3000徳間書店</p>\r\n\r\n<p>『 紙の世界史: PAPER 歴史に突き動かされた技術』</p>\r\n\r\n<p>Andrik Langfield on Unsplash</p>\r\n\r\n<p>Hasan Almasi on Unsplash</p>\r\n\r\n<p>Pixabay on Pexels</p>\r\n\r\n<p>Dmitrii Fursov on Pexels</p>', 'references': '', 'rating': 0.0, 'rating_count': None, 'published_date': dateutil.parser.parse("2023-07-03T02:53:18.366157+00:00"), 'updated_date': dateutil.parser.parse("2023-07-03T02:53:18.372662+00:00")} ) 
    knowledge_knowledge_100.author =  importer.locate_object(UserAccount, "id", UserAccount, "id", 1, {'id': 1, 'password': 'pbkdf2_sha256$600000$Q9AwSzFqEXF1ueS21sGGfz$rZo+NVruXU5Zf5vp00wtuwLn0Z333sn5NtvS8VWKqds=', 'last_login': dateutil.parser.parse("2023-06-30T06:03:10.086511+00:00"), 'is_superuser': True, 'email': 'yurinakanishi33@gmail.com', 'name': 'yuri', 'is_active': True, 'is_staff': True} ) 
    knowledge_knowledge_100 = importer.save_or_locate(knowledge_knowledge_100)

    knowledge_knowledge_101 = Knowledge()
    knowledge_knowledge_101.name = ' スプーンが重いと料理が美味しい？'
    knowledge_knowledge_101.slug = 'if-the-spoon-is-heavy-the-food-tastes-better-jp'
    knowledge_knowledge_101.language =  importer.locate_object(Language, "id", Language, "id", 2, {'id': 2, 'name': 'jp'} ) 
    knowledge_knowledge_101.genre_for_url =  importer.locate_object(GenreForURL, "id", GenreForURL, "id", 1, {'id': 1, 'name': 'knowledge'} ) 
    knowledge_knowledge_101.type = 'knowledge'
    knowledge_knowledge_101.notesite_url = 'https://note.com/argumented_world/n/n012e09b96f9d'
    knowledge_knowledge_101.article =  importer.locate_object(Article, "id", Article, "id", 6200, {'id': 6200, 'excerpt': ' スプーンが重いと料理が美味しい？', 'kicker': ' スプーンが重いと料理が美味しい？', 'content': '<p>皆さんは、重いものか軽いもの、どっちの方がいいと思いますか？軽い方が持ち運びしやすくて便利ですが、意外にも重いことが良い結果をもたらすこともあるようです。</p>\r\n\r\n<p>重さが人の印象をどう変えるかについて調べた海外の実験を紹介します。道を歩いている人に、履歴書を渡して、書かれた内容を元に履歴書の人物を評価してもらいました。このとき、履歴書は軽いクリップボードか重いクリップボードのどちらかに挟んで渡されました。その結果、履歴書の内容は同じなのにも関わらず、重たいクリップボードを渡された人のほうが、履歴書の人物を高く評価しました。クリップボードが重い＝人物に重みがある＝重要人物な気がするということです。人の行動は、本人が自覚していなくても見た目などの第一印象に左右されてしまいますが、このことは重さでも同じなようです。</p>\r\n\r\n<p>重いスプーンでものを食べたときの方が、同じものを軽いスプーンで食べたときよりもその食品の味を高く評価するという研究もあります。箸が重い＝重要な料理を食べている＝美味しい料理を食べている気がするということです。</p>\r\n\r\n<p>こんな話もあります。ある人が世界最高峰に数えられるレストランで食事をしたときのことです。そのとき、そのレストランでは木製食器を試していました。なので、その人は最高級の木の食器を使って料理を食べました。感想は「テイクアウト料理を先割れスプーンで食べた気になった」らしいです。また、私は韓国料理が大好きですが、韓国料理店ではとても重い鉄の箸が出てくることが多いですよね。箸の重さが、韓国料理の味を引き立てているのかもしれません。皆さんも、自分の名刺や履歴書の紙を厚紙にしてみたり、友人に料理を振る舞うときには重いお皿や重い箸を使ってみてはいかがでしょうか。</p>\r\n\r\n<p>『「おいしさ」の錯覚\u3000最新科学でわかった、美味の真実 』チャールズ・スペンス\u3000長谷川 圭</p>\r\n\r\n<p>『「重い」と思うことは印象評価を変えるのか ―印象評価における重量刺激の主観量と物理量の影響―』\u3000阿部慶賀</p>\r\n\r\n<p>使用させて頂いた画像</p>\r\n\r\n<p>Pexels\u3000Navada Ra</p>\r\n\r\n<p>Pexels\u3000Sora Shimazaki</p>', 'references': '', 'rating': 0.0, 'rating_count': None, 'published_date': dateutil.parser.parse("2023-07-03T02:53:18.366157+00:00"), 'updated_date': dateutil.parser.parse("2023-07-03T02:53:18.372662+00:00")} ) 
    knowledge_knowledge_101.author =  importer.locate_object(UserAccount, "id", UserAccount, "id", 1, {'id': 1, 'password': 'pbkdf2_sha256$600000$Q9AwSzFqEXF1ueS21sGGfz$rZo+NVruXU5Zf5vp00wtuwLn0Z333sn5NtvS8VWKqds=', 'last_login': dateutil.parser.parse("2023-06-30T06:03:10.086511+00:00"), 'is_superuser': True, 'email': 'yurinakanishi33@gmail.com', 'name': 'yuri', 'is_active': True, 'is_staff': True} ) 
    knowledge_knowledge_101 = importer.save_or_locate(knowledge_knowledge_101)

    knowledge_knowledge_102 = Knowledge()
    knowledge_knowledge_102.name = 'If the spoon is heavy, the food tastes better?'
    knowledge_knowledge_102.slug = 'if-the-spoon-is-heavy-the-food-tastes-better'
    knowledge_knowledge_102.language =  importer.locate_object(Language, "id", Language, "id", 1, {'id': 1, 'name': 'en'} ) 
    knowledge_knowledge_102.genre_for_url =  importer.locate_object(GenreForURL, "id", GenreForURL, "id", 1, {'id': 1, 'name': 'knowledge'} ) 
    knowledge_knowledge_102.type = 'knowledge'
    knowledge_knowledge_102.notesite_url = 'https://note.com/argumented_world/n/n012e09b96f9d'
    knowledge_knowledge_102.article =  importer.locate_object(Article, "id", Article, "id", 6201, {'id': 6201, 'excerpt': 'If the spoon is heavy, the food tastes better?', 'kicker': 'If the spoon is heavy, the food tastes better?', 'content': "<p>Which do you think is better, heavy or light? Lighter ones are easier to carry and more convenient, but surprisingly, heavier ones sometimes bring better results.</p>\r\n\r\n<p>Here is an experiment that investigated how weight can change people's impressions. A person walking down the street was given a resume and asked to rate the person on the resume based on what was written on it. At this time, the resumes were handed between either a light clipboard or a heavy clipboard.</p>\r\n\r\n<p>As a result, the person who was given the heavier clipboard rated the person on the resume higher than the person who was given the lighter clipboard, even though the content of the resumes were the same.</p>\r\n\r\n<p>Heavy clipboard associates person has more weight(value). And they feel like the person in the resume is an important person. This means people's behavior is influenced by their appearance and other first impressions, even if they are not aware of it, and this seems to be the same with the weight.</p>\r\n\r\n<p>Some studies have shown that people who eat with a heavy spoon rate the taste of the food higher than those who eat the same food with a light spoon. Heavy chopsticks = important food = you feel you are eating good food.</p>\r\n\r\n<p>There is also this story. A person ate at one of the world's finest restaurants. At that time, the restaurant was experimenting with wooden tableware. So the person ate his food using the finest wooden tableware. He said that he felt like he was eating take-out food with a broken tip spoon.</p>\r\n\r\n<p>Also, I love Korean food, but Korean restaurants often serve very heavy iron chopsticks. Perhaps the weight of the chopsticks enhances the taste of Korean food. Why don't you all try using thick paper for your own business cards and resumes, or use heavy plates and heavy chopsticks when serving food to friends?</p>\r\n\r\n<p>『「重い」と思うことは印象評価を変えるのか ―印象評価における重量刺激の主観量と物理量の影響―』\u3000阿部慶賀</p>\r\n\r\n<p>Gastrophysics: The New Science of Eating by Charles Spence</p>\r\n\r\n<p>Pexels\u3000Navada Ra</p>\r\n\r\n<p>Pexels\u3000Sora Shimazaki</p>", 'references': '', 'rating': 0.0, 'rating_count': None, 'published_date': dateutil.parser.parse("2023-07-03T02:53:18.366157+00:00"), 'updated_date': dateutil.parser.parse("2023-07-03T02:53:18.372662+00:00")} ) 
    knowledge_knowledge_102.author =  importer.locate_object(UserAccount, "id", UserAccount, "id", 1, {'id': 1, 'password': 'pbkdf2_sha256$600000$Q9AwSzFqEXF1ueS21sGGfz$rZo+NVruXU5Zf5vp00wtuwLn0Z333sn5NtvS8VWKqds=', 'last_login': dateutil.parser.parse("2023-06-30T06:03:10.086511+00:00"), 'is_superuser': True, 'email': 'yurinakanishi33@gmail.com', 'name': 'yuri', 'is_active': True, 'is_staff': True} ) 
    knowledge_knowledge_102 = importer.save_or_locate(knowledge_knowledge_102)

    knowledge_knowledge_103 = Knowledge()
    knowledge_knowledge_103.name = '座りにくい椅子の使い方'
    knowledge_knowledge_103.slug = 'how-to-use-a-chair-that-is-difficult-to-sit-in-jp'
    knowledge_knowledge_103.language =  importer.locate_object(Language, "id", Language, "id", 2, {'id': 2, 'name': 'jp'} ) 
    knowledge_knowledge_103.genre_for_url =  importer.locate_object(GenreForURL, "id", GenreForURL, "id", 1, {'id': 1, 'name': 'knowledge'} ) 
    knowledge_knowledge_103.type = 'knowledge'
    knowledge_knowledge_103.notesite_url = 'https://note.com/argumented_world/n/n4f2e64a66c8f'
    knowledge_knowledge_103.article =  importer.locate_object(Article, "id", Article, "id", 6202, {'id': 6202, 'excerpt': '座りにくい椅子の使い方', 'kicker': '座りにくい椅子の使い方', 'content': '<p>ちょっと予定より速く来ちゃったので、時間を潰せそうなところはないかと探していると、ちょうど良さそうなカフェを見つけました。 中に入ってみると少し暗めのオシャレな雰囲気で、棚には本やゼンマイ式の時計などが並んでいます。レジでコーヒーを頼んだ店員さんは愛想良く丁寧に対応してくれました。 しかし、いざ椅子に座ろうとすると、堅くて高さがあり得ないほど高くて、なんか落ち着けない。結局、15分くらいでコーヒーを飲み干してしまって、店を出てしまいました。こんな経験ありませんか？</p>\r\n\r\n<p>なんでもっと座り心地のいい椅子にしてくれないんでしょう？その理由は、お客さんの回転率を上げて利益を上げるためといわれています。わざと居心地を悪くさせることで、滞在時間を短くさせているというわけです。</p>\r\n\r\n<p>滞在時間を短くする方法としては他にもあります。音量の大きい音楽をかけたり、テンポの速い音楽をかけたりすると、お客さんが飲んだり食べたりするスピードが上がるという研究結果があります。</p>\r\n\r\n<p>テンポの遅い曲をかけると、滞在時間が長くなるのと同時に、注文の量も多くなるらしいです。なので忙しい時間帯はテンポの遅い曲、平常時はテンポの遅い曲を流すのが良さそうです。</p>\r\n\r\n<p>昔、よくマクドナルドのテーブル席で友達とゲームをしていました。テーブル席の階は換気がされておらず、むっとした暑さで、しかも独特の匂いが立ちこめていたのを覚えています。 これも、僕たちみたいなゲームで居座る人を帰らせるための戦略だったでしょうか？</p>\r\n\r\n<p>『「おいしさ」の錯覚\u3000最新科学でわかった、美味の真実 』チャールズ・スペンス\u3000長谷川 圭</p>\r\n\r\n<p>JayMantri on Pixabay</p>', 'references': '', 'rating': 0.0, 'rating_count': None, 'published_date': dateutil.parser.parse("2023-07-03T02:53:18.366157+00:00"), 'updated_date': dateutil.parser.parse("2023-07-03T02:53:18.372662+00:00")} ) 
    knowledge_knowledge_103.author =  importer.locate_object(UserAccount, "id", UserAccount, "id", 1, {'id': 1, 'password': 'pbkdf2_sha256$600000$Q9AwSzFqEXF1ueS21sGGfz$rZo+NVruXU5Zf5vp00wtuwLn0Z333sn5NtvS8VWKqds=', 'last_login': dateutil.parser.parse("2023-06-30T06:03:10.086511+00:00"), 'is_superuser': True, 'email': 'yurinakanishi33@gmail.com', 'name': 'yuri', 'is_active': True, 'is_staff': True} ) 
    knowledge_knowledge_103 = importer.save_or_locate(knowledge_knowledge_103)

    knowledge_knowledge_104 = Knowledge()
    knowledge_knowledge_104.name = 'How to use a chair that is difficult to sit in'
    knowledge_knowledge_104.slug = 'how-to-use-a-chair-that-is-difficult-to-sit-in'
    knowledge_knowledge_104.language =  importer.locate_object(Language, "id", Language, "id", 1, {'id': 1, 'name': 'en'} ) 
    knowledge_knowledge_104.genre_for_url =  importer.locate_object(GenreForURL, "id", GenreForURL, "id", 1, {'id': 1, 'name': 'knowledge'} ) 
    knowledge_knowledge_104.type = 'knowledge'
    knowledge_knowledge_104.notesite_url = 'https://note.com/argumented_world/n/n4f2e64a66c8f'
    knowledge_knowledge_104.article =  importer.locate_object(Article, "id", Article, "id", 6203, {'id': 6203, 'excerpt': 'How to use a chair that is difficult to sit in', 'kicker': 'How to use a chair that is difficult to sit in', 'content': "<p>I arrived a little earlier than planned, so I was looking for a place where I When I entered the cafe, I found it to be a little dark and stylish, with books and spring clocks on the shelves. I asked for coffee at the cash register, and the clerk was friendly and courteous.\u3000However, when I finally tried to sit down on a chair, it was hard, impossibly high, and somehow uncomfortable. In the end, I finished my coffee in about 15 minutes and left the store.</p>\r\n\r\n<p>Have you ever had an experience like this? Why can't they make the chairs more comfortable? It is said that the reason for this is to increase customer turnover and increase profits. By making them uncomfortable on purpose, they are shortening the time spent in the store.</p>\r\n\r\n<p>There are other ways to shorten the length of stay. Studies have shown that playing loud or fast-paced music increases the speed at which customers drink and eat.</p>\r\n\r\n<p>If you play slower tempo music, they say they stay longer and order more at the same time. So it seems to be a good idea to play fast tempo songs during busy times and slow tempo songs during normal times. I used to play games with friends at McDonald's tables. I remember that the table seating floor was not ventilated, and it was sweltering hot and also filled with a peculiar smell. Was this also a strategy to make people like us who stayed for games leave?</p>\r\n\r\n<p>Gastrophysics: The New Science of Eating by Charles Spence</p>", 'references': '', 'rating': 0.0, 'rating_count': None, 'published_date': dateutil.parser.parse("2023-07-03T02:53:18.366157+00:00"), 'updated_date': dateutil.parser.parse("2023-07-03T02:53:18.372662+00:00")} ) 
    knowledge_knowledge_104.author =  importer.locate_object(UserAccount, "id", UserAccount, "id", 1, {'id': 1, 'password': 'pbkdf2_sha256$600000$Q9AwSzFqEXF1ueS21sGGfz$rZo+NVruXU5Zf5vp00wtuwLn0Z333sn5NtvS8VWKqds=', 'last_login': dateutil.parser.parse("2023-06-30T06:03:10.086511+00:00"), 'is_superuser': True, 'email': 'yurinakanishi33@gmail.com', 'name': 'yuri', 'is_active': True, 'is_staff': True} ) 
    knowledge_knowledge_104 = importer.save_or_locate(knowledge_knowledge_104)

    knowledge_knowledge_105 = Knowledge()
    knowledge_knowledge_105.name = ''
    knowledge_knowledge_105.slug = 'how-to-feeling-happy-jp'
    knowledge_knowledge_105.language =  importer.locate_object(Language, "id", Language, "id", 2, {'id': 2, 'name': 'jp'} ) 
    knowledge_knowledge_105.genre_for_url =  importer.locate_object(GenreForURL, "id", GenreForURL, "id", 1, {'id': 1, 'name': 'knowledge'} ) 
    knowledge_knowledge_105.type = 'knowledge'
    knowledge_knowledge_105.notesite_url = ''
    knowledge_knowledge_105.article =  importer.locate_object(Article, "id", Article, "id", 6204, {'id': 6204, 'excerpt': '', 'kicker': '', 'content': '<p>トリプトファンを多く含む食品を摂取することが大切です。 トリプトファンは、タンパク質を作るのに欠かせない物質です。牛肉、豚肉、鶏肉はすべてすべてトリプトファンを含んでいます。</p>\r\n\r\n<p>お粥や麺類など、あまり噛まなくてよい柔らかいものを食べた後。</p>\r\n\r\n<p>就寝中は、電気を全て消した暗い部屋で寝てください。これは、翌朝、SsecNがより敏感に反応するためです。これは、翌朝のセロトニン分泌準備に影響を与える生活習慣や環境を確保するためです。太陽が出ていても、光が遮断されている部屋での睡眠では、セロトニンはほとんど分泌されません。</p>\r\n\r\n<p>juan mendez on Pexels</p>', 'references': '', 'rating': 0.0, 'rating_count': None, 'published_date': dateutil.parser.parse("2023-07-03T02:53:18.366157+00:00"), 'updated_date': dateutil.parser.parse("2023-07-03T02:53:18.372662+00:00")} ) 
    knowledge_knowledge_105.author =  importer.locate_object(UserAccount, "id", UserAccount, "id", 1, {'id': 1, 'password': 'pbkdf2_sha256$600000$Q9AwSzFqEXF1ueS21sGGfz$rZo+NVruXU5Zf5vp00wtuwLn0Z333sn5NtvS8VWKqds=', 'last_login': dateutil.parser.parse("2023-06-30T06:03:10.086511+00:00"), 'is_superuser': True, 'email': 'yurinakanishi33@gmail.com', 'name': 'yuri', 'is_active': True, 'is_staff': True} ) 
    knowledge_knowledge_105 = importer.save_or_locate(knowledge_knowledge_105)

    knowledge_knowledge_106 = Knowledge()
    knowledge_knowledge_106.name = 'How to feeling happy'
    knowledge_knowledge_106.slug = 'how-to-feeling-happy'
    knowledge_knowledge_106.language =  importer.locate_object(Language, "id", Language, "id", 1, {'id': 1, 'name': 'en'} ) 
    knowledge_knowledge_106.genre_for_url =  importer.locate_object(GenreForURL, "id", GenreForURL, "id", 1, {'id': 1, 'name': 'knowledge'} ) 
    knowledge_knowledge_106.type = 'knowledge'
    knowledge_knowledge_106.notesite_url = ''
    knowledge_knowledge_106.article =  importer.locate_object(Article, "id", Article, "id", 6205, {'id': 6205, 'excerpt': 'How to feeling happy', 'kicker': 'How to feeling happy', 'content': '<p>Having a happy feeling time is one of the biggest purpose of our life. But How to feel happy? This below is the example from the research study.</p>\r\n\r\n<p>It is important to consume foods high in tryptophan. Tryptophan is a substance that is originally based on proteins. Proteins required to sustain life. Beef, pork, and chicken are all proteins.</p>\r\n\r\n<p>Rhythmic exercise After eating something soft and not requiring much chewing, such as rice porridge or noodles.</p>\r\n\r\n<p>During bedtime, sleep in a dark room with all the lights off. This is because the SsecN will be more sensitive to the following morning. This is to ensure Lifestyle and environment affecting serotonin secretion preparation for the next morning. Even when the sun is up, light is blocked out.Serotonin is rarely secreted when sleeping in a room with blocked light, even when the sun is up.</p>\r\n\r\n<p>juan mendez on Pexels</p>', 'references': '', 'rating': 0.0, 'rating_count': None, 'published_date': dateutil.parser.parse("2023-07-03T02:53:18.366157+00:00"), 'updated_date': dateutil.parser.parse("2023-07-03T02:53:18.372662+00:00")} ) 
    knowledge_knowledge_106.author =  importer.locate_object(UserAccount, "id", UserAccount, "id", 1, {'id': 1, 'password': 'pbkdf2_sha256$600000$Q9AwSzFqEXF1ueS21sGGfz$rZo+NVruXU5Zf5vp00wtuwLn0Z333sn5NtvS8VWKqds=', 'last_login': dateutil.parser.parse("2023-06-30T06:03:10.086511+00:00"), 'is_superuser': True, 'email': 'yurinakanishi33@gmail.com', 'name': 'yuri', 'is_active': True, 'is_staff': True} ) 
    knowledge_knowledge_106 = importer.save_or_locate(knowledge_knowledge_106)

    knowledge_knowledge_107 = Knowledge()
    knowledge_knowledge_107.name = 'プレゼントの中身を誰かに見られないように送るには、どうする？'
    knowledge_knowledge_107.slug = 'how-do-i-send-a-gift-without-someone-seeing-whats-inside-jp'
    knowledge_knowledge_107.language =  importer.locate_object(Language, "id", Language, "id", 2, {'id': 2, 'name': 'jp'} ) 
    knowledge_knowledge_107.genre_for_url =  importer.locate_object(GenreForURL, "id", GenreForURL, "id", 1, {'id': 1, 'name': 'knowledge'} ) 
    knowledge_knowledge_107.type = 'knowledge'
    knowledge_knowledge_107.notesite_url = 'https://note.com/argumented_world/n/ne20a20f8dd80'
    knowledge_knowledge_107.article =  importer.locate_object(Article, "id", Article, "id", 6206, {'id': 6206, 'excerpt': 'プレゼントの中身を誰かに見られないように送るには、どうする？', 'kicker': 'プレゼントの中身を誰かに見られないように送るには、どうする？', 'content': '<p>問題です。AさんはBさんに宅急便でプレゼントを送りたいと思っています。けれど、送る途中で誰かに中身を見られたくありません。プレゼントは箱に入っていて箱には南京錠をかけることができます。 AさんとBさんはお互いに自分の南京錠とその鍵を持っています。お互いに相手の南京錠の鍵は持っていません。この南京錠をどのように使えば、Aさんが安全にBさんにプレゼントを送り、Bさんは箱を開けてプレゼントを見ることがでしょうか？</p>\r\n\r\n<p>皆さんも、もし良ければ考えてみてください。ちなみに、とんち問題ではありません。</p>\r\n\r\n<p>答えは、</p>\r\n\r\n<p>1，Aさんがプレゼントに自分の南京錠をかけてBさんに送ります</p>\r\n\r\n<p>2，Bさんは、それにさらに自分の南京錠をかけてAさんに送り返します</p>\r\n\r\n<p>3，Aさんは、鍵で自分の南京錠を外してBさんに送り返します</p>\r\n\r\n<p>4，Bさんは、鍵で自分の南京錠を外して、プレゼントを空けることが出来ます</p>\r\n\r\n<p>です。 こうすれば、お互い自分の南京錠の鍵しか持っていなくても、安全にプレゼントを送ることができます。</p>\r\n\r\n<p>Photo by Markus Spiske on Unsplash</p>\r\n\r\n<p>暗号解読』サイモン シン (著)\u3000青木 薫 (翻訳)</p>', 'references': '', 'rating': 0.0, 'rating_count': None, 'published_date': dateutil.parser.parse("2023-07-03T02:53:18.366157+00:00"), 'updated_date': dateutil.parser.parse("2023-07-03T02:53:18.372662+00:00")} ) 
    knowledge_knowledge_107.author =  importer.locate_object(UserAccount, "id", UserAccount, "id", 1, {'id': 1, 'password': 'pbkdf2_sha256$600000$Q9AwSzFqEXF1ueS21sGGfz$rZo+NVruXU5Zf5vp00wtuwLn0Z333sn5NtvS8VWKqds=', 'last_login': dateutil.parser.parse("2023-06-30T06:03:10.086511+00:00"), 'is_superuser': True, 'email': 'yurinakanishi33@gmail.com', 'name': 'yuri', 'is_active': True, 'is_staff': True} ) 
    knowledge_knowledge_107 = importer.save_or_locate(knowledge_knowledge_107)

    knowledge_knowledge_108 = Knowledge()
    knowledge_knowledge_108.name = 'AAA'
    knowledge_knowledge_108.slug = 'how-do-i-send-a-gift-without-someone-seeing-whats-inside'
    knowledge_knowledge_108.language =  importer.locate_object(Language, "id", Language, "id", 1, {'id': 1, 'name': 'en'} ) 
    knowledge_knowledge_108.genre_for_url =  importer.locate_object(GenreForURL, "id", GenreForURL, "id", 1, {'id': 1, 'name': 'knowledge'} ) 
    knowledge_knowledge_108.type = 'knowledge'
    knowledge_knowledge_108.notesite_url = 'https://note.com/argumented_world/n/ne20a20f8dd80'
    knowledge_knowledge_108.article =  importer.locate_object(Article, "id", Article, "id", 6207, {'id': 6207, 'excerpt': 'AAA', 'kicker': 'AAA', 'content': '<p>Question. Mr. A wants to send a present to Mr. B by package delivery service. However, he does not want someone to see the contents of the gift on the way. The present comes in a box and the box can be padlocked. Mr. A and Mr. B both have their own padlocks and their own keys. Neither has the key to the other\'s padlock. How can these padlocks be used so that Mr. A can safely send the gift to Mr. B and Mr. B can open the box and see the gift? Please think about it, if you like. This is not a trick question.</p>\r\n\r\n<p>The answers are</p>\r\n\r\n<p>1.Mr. A puts his own padlock on the present and sends it to Mr. B.</p>\r\n\r\n<p>2.Mr. B puts his own padlock on it and sends it back to Mr. A.</p>\r\n\r\n<p>3.Mr. A unlocks his own padlock with a key and sends it back to Mr. B.</p>\r\n\r\n<p>4.Mr. B can unlock his own padlock with the key and open the present.</p>\r\n\r\n<p>In this way, even if both parties have only the key to their own padlocks, they can safely send presents to each other. Whoever thought of this is very clever. When I saw the answer, I thought "I see! I thought, "I see.</p>\r\n\r\n<p>Photo by Markus Spiske on Unsplash</p>\r\n\r\n<p>暗号解読』サイモン シン (著)\u3000青木 薫 (翻訳)</p>', 'references': '', 'rating': 0.0, 'rating_count': None, 'published_date': dateutil.parser.parse("2023-07-03T02:53:18.366157+00:00"), 'updated_date': dateutil.parser.parse("2023-07-03T02:53:18.372662+00:00")} ) 
    knowledge_knowledge_108.author =  importer.locate_object(UserAccount, "id", UserAccount, "id", 1, {'id': 1, 'password': 'pbkdf2_sha256$600000$Q9AwSzFqEXF1ueS21sGGfz$rZo+NVruXU5Zf5vp00wtuwLn0Z333sn5NtvS8VWKqds=', 'last_login': dateutil.parser.parse("2023-06-30T06:03:10.086511+00:00"), 'is_superuser': True, 'email': 'yurinakanishi33@gmail.com', 'name': 'yuri', 'is_active': True, 'is_staff': True} ) 
    knowledge_knowledge_108 = importer.save_or_locate(knowledge_knowledge_108)

    knowledge_knowledge_109 = Knowledge()
    knowledge_knowledge_109.name = '「地位の象徴」としてのメイド'
    knowledge_knowledge_109.slug = 'hiring-maids-as-status-symbols-jp'
    knowledge_knowledge_109.language =  importer.locate_object(Language, "id", Language, "id", 2, {'id': 2, 'name': 'jp'} ) 
    knowledge_knowledge_109.genre_for_url =  importer.locate_object(GenreForURL, "id", GenreForURL, "id", 1, {'id': 1, 'name': 'knowledge'} ) 
    knowledge_knowledge_109.type = 'knowledge'
    knowledge_knowledge_109.notesite_url = 'https://note.com/argumented_world/n/n48d0dddafa15'
    knowledge_knowledge_109.article =  importer.locate_object(Article, "id", Article, "id", 6208, {'id': 6208, 'excerpt': '「地位の象徴」としてのメイド', 'kicker': '「地位の象徴」としてのメイド', 'content': '<p>メイドと聞くと、今の日本では喫茶店で働いて「おかえりなさいませ」と言う女性の従業員を思い浮かべますが、元々の意味は「家事使用人」「家政婦」のことです。古くからあったメイドという職業が急増したのは19世紀末でした。メイドは150万人近くに増え、当時のイギリスで最も人口の多い職業グループとなりました。</p>\r\n\r\n<p>理由は、工業化とともに成長してきた中流階級の生活水準が上昇したことです。</p>\r\n\r\n<p>ヴィクトリア時代後期には、15~20歳の女性のおおよそ3人に1人がメイドとして働いていたそうです。そして当時、その家庭にメイドがいるかいないかは社会的地位の目に見える判断材料となりました。メイドを雇える＝上流階級 というわけです。</p>\r\n\r\n<p>19 世紀末にイギリスのヨーク市の貧困調査を行ったS. ラウントリは、家事使用人雇用の有無によって、 労働者階級とそれ以上の階級を区別したそうです。当時の上流階級の家庭では、メイドを雇い、女性は特に何もせずに暇をもてあまして、男性の稼ぎに依存するのが常識でした。そして、上流階級のまねをすることによって自分を少しでも良く見せたい中流最下層の家庭では、生活が苦しいのにもかかわらずメイドを雇い、奥さんは働かないでいるという状況が多かったそうです。</p>\r\n\r\n<p>上の絵は1870年頃の風刺画です。原題は『Dinner Locust』。Locustはイナゴのことで、右に立っている食事をたかりに来た男を指しています。この男も、奥に座っている主人も、裕福ではない中流下層市民だと思われます。奥に座っている主人の表情は「こっちも生活苦しいんだから、たかりに来るなよ！」という本音を隠して平静さを装っているように見えます。</p>\r\n\r\n<p>彼らは、たとえカーペットは擦り切れ、 家具はみすぼらしくても、なんとかして1人のメイドを雇っておきたいと苦しい努力をしたのでした。</p>\r\n\r\n<p>Pexels cottonbro</p>\r\n\r\n<p>朝日百科世界の歴史\u300019世紀\u3000B648\u3000(河村貞枝)</p>', 'references': '', 'rating': 0.0, 'rating_count': None, 'published_date': dateutil.parser.parse("2023-07-03T02:53:18.366157+00:00"), 'updated_date': dateutil.parser.parse("2023-07-03T02:53:18.372662+00:00")} ) 
    knowledge_knowledge_109.author =  importer.locate_object(UserAccount, "id", UserAccount, "id", 1, {'id': 1, 'password': 'pbkdf2_sha256$600000$Q9AwSzFqEXF1ueS21sGGfz$rZo+NVruXU5Zf5vp00wtuwLn0Z333sn5NtvS8VWKqds=', 'last_login': dateutil.parser.parse("2023-06-30T06:03:10.086511+00:00"), 'is_superuser': True, 'email': 'yurinakanishi33@gmail.com', 'name': 'yuri', 'is_active': True, 'is_staff': True} ) 
    knowledge_knowledge_109 = importer.save_or_locate(knowledge_knowledge_109)

    knowledge_knowledge_110 = Knowledge()
    knowledge_knowledge_110.name = 'Hiring maids as "status symbols"'
    knowledge_knowledge_110.slug = 'hiring-maids-as-status-symbols'
    knowledge_knowledge_110.language =  importer.locate_object(Language, "id", Language, "id", 1, {'id': 1, 'name': 'en'} ) 
    knowledge_knowledge_110.genre_for_url =  importer.locate_object(GenreForURL, "id", GenreForURL, "id", 1, {'id': 1, 'name': 'knowledge'} ) 
    knowledge_knowledge_110.type = 'knowledge'
    knowledge_knowledge_110.notesite_url = 'https://note.com/argumented_world/n/n48d0dddafa15'
    knowledge_knowledge_110.article =  importer.locate_object(Article, "id", Article, "id", 6209, {'id': 6209, 'excerpt': 'Hiring maids as "status symbols"', 'kicker': 'Hiring maids as "status symbols"', 'content': '<p>When we hear the word "maid" in Japan today, we think of a female employee who works in a coffee shop and says "Welcome home," but the original meaning of the word was "domestic servant" or "housekeeper.</p>\r\n\r\n<p>It was at the end of the 19th century that the ancient profession of maids experienced a rapid increase. The number of maids grew to nearly 1.5 million, making them the most populous occupational group in England at that time. The reason was the rising standard of living of a middle class that had grown with industrialization.</p>\r\n\r\n<p>In the late Victorian era, roughly one in three women aged 15~20 worked as a maid. In those days, the presence or absence of a maid in a family was a visible indicator of social status. Having a maid show upper class.</p>\r\n\r\n<p>S. Rountree, who conducted a survey of poverty in the English city of York at the end of the 19th century, distinguished between the working class and the upper class based on whether or not a household employed a maid. At that time, it was common practice for upper class families to hire maids and for women to spend their spare time doing nothing in particular and to depend on men\'s earnings.</p>\r\n\r\n<p>And in families of the lowest middle class, who wanted to make themselves look as good as possible by imitating the upper class, many of them hired maids despite the fact that they were struggling to make ends meet, and the wives did not work.</p>\r\n\r\n<p>The above picture is a caricature from around 1870. The original title is "Dinner Locust. Locust refers to the man standing to the right who has come to ask for a meal. Both the man and the owner seated in the back of the room are probably lower-middle-class citizens who are not wealthy.</p>\r\n\r\n<p>The owner sitting in the back of the room looks as if he is trying to hide his true intention of "I\'m struggling too, so don\'t come and rob me!". They made a painful effort to keep a maid, even if the carpets were worn and the furniture shabby.</p>\r\n\r\n<p>Pexels cottonbro</p>\r\n\r\n<p>朝日百科世界の歴史\u300019世紀\u3000B648\u3000(河村貞枝)</p>', 'references': '', 'rating': 0.0, 'rating_count': None, 'published_date': dateutil.parser.parse("2023-07-03T02:53:18.366157+00:00"), 'updated_date': dateutil.parser.parse("2023-07-03T02:53:18.372662+00:00")} ) 
    knowledge_knowledge_110.author =  importer.locate_object(UserAccount, "id", UserAccount, "id", 1, {'id': 1, 'password': 'pbkdf2_sha256$600000$Q9AwSzFqEXF1ueS21sGGfz$rZo+NVruXU5Zf5vp00wtuwLn0Z333sn5NtvS8VWKqds=', 'last_login': dateutil.parser.parse("2023-06-30T06:03:10.086511+00:00"), 'is_superuser': True, 'email': 'yurinakanishi33@gmail.com', 'name': 'yuri', 'is_active': True, 'is_staff': True} ) 
    knowledge_knowledge_110 = importer.save_or_locate(knowledge_knowledge_110)

    knowledge_knowledge_111 = Knowledge()
    knowledge_knowledge_111.name = '花崗岩からは放射線が出ている'
    knowledge_knowledge_111.slug = 'granite-emits-radiation-jp'
    knowledge_knowledge_111.language =  importer.locate_object(Language, "id", Language, "id", 2, {'id': 2, 'name': 'jp'} ) 
    knowledge_knowledge_111.genre_for_url =  importer.locate_object(GenreForURL, "id", GenreForURL, "id", 1, {'id': 1, 'name': 'knowledge'} ) 
    knowledge_knowledge_111.type = 'knowledge'
    knowledge_knowledge_111.notesite_url = 'https://note.com/argumented_world/n/na8bfb6746d51'
    knowledge_knowledge_111.article =  importer.locate_object(Article, "id", Article, "id", 6210, {'id': 6210, 'excerpt': '花崗岩からは放射線が出ている', 'kicker': '花崗岩からは放射線が出ている', 'content': '<p>花崗岩は御影石とも呼ばれ、墓石や建物などによく使われます。 花崗岩にはカリウム、ウラン、トリウムなどの放射線同位体が多く含まれているので、放射線が出ていることが多いです。</p>\r\n\r\n<p>ウランやトリウムは固体ですが、それらが崩壊してラドンという元素になると、気体になり、肺から体内に吸入してしまう恐れがあります。なので、花崗岩が多く含まれる洞窟や石造りの建物では、換気をした方がいいです。ちなみにラドンは重い元素で下にたまりやすいので、そこも考慮して換気をするといいでしょう。</p>\r\n\r\n<p>海外は石造りの建物が多いのでラドンなどの吸入による被曝量が比較的多いです。日本は木材建築が多く換気もしやすいため、吸入による被曝量は少なめです。しかし海産物を多く食べるため摂取による被曝が多くなっています。</p>\r\n\r\n<p>そして、花崗岩は、私たちの住んでいる地面の下にもあるので、私たちはみんな、地面から出ている放射線浴びています。関西地区では花崗岩が多く存在するので、関東地方より平均被ばく量は多くなっています。御影石は、岡山県や香川県、宮城県などが主な名産地です。</p>\r\n\r\n<p>日本人の一年間の自然放射線（食品、宇宙線、ラドンなどの吸入、大地など）の平均被曝量は、年間2.1ミリシーベルトです。</p>\r\n\r\n<p>地面に埋まっている花崗岩から放射線が出ているなら、あんまり地上にいない方がいいんじゃないか？と思います。しかし上空に行けば行くほど、宇宙線という放射線を浴びやすくなります。飛行機に乗ると放射線の被曝は多くなるのはこれが理由です。 宇宙線は宇宙を飛び交っている放射線で、地球にもたくさん飛んできています。しかし地球には大気があるので、宇宙線から私たちを守ってくれているというわけです。</p>\r\n\r\n<p>放射線といえば原爆、原子力発電やX線撮影（レントゲン撮影）などの特殊な場合がすぐに思い浮かばれますが、同時にもっと私たちの身近にある物でもあります。</p>\r\n\r\n<p>『放射線について考えよう。』多田将 (著)</p>\r\n\r\n<p>日本地質学会 - 日本の自然放射線量</p>\r\n\r\n<p>環境省_年間当たりの被ばく線量の比較</p>\r\n\r\n<p>環境省_大地の放射線（日本）</p>\r\n\r\n<p>Engin Akyurt on Pixabay</p>\r\n\r\n<p>写真AC</p>', 'references': '', 'rating': 0.0, 'rating_count': None, 'published_date': dateutil.parser.parse("2023-07-03T02:53:18.366157+00:00"), 'updated_date': dateutil.parser.parse("2023-07-03T02:53:18.372662+00:00")} ) 
    knowledge_knowledge_111.author =  importer.locate_object(UserAccount, "id", UserAccount, "id", 1, {'id': 1, 'password': 'pbkdf2_sha256$600000$Q9AwSzFqEXF1ueS21sGGfz$rZo+NVruXU5Zf5vp00wtuwLn0Z333sn5NtvS8VWKqds=', 'last_login': dateutil.parser.parse("2023-06-30T06:03:10.086511+00:00"), 'is_superuser': True, 'email': 'yurinakanishi33@gmail.com', 'name': 'yuri', 'is_active': True, 'is_staff': True} ) 
    knowledge_knowledge_111 = importer.save_or_locate(knowledge_knowledge_111)

    knowledge_knowledge_112 = Knowledge()
    knowledge_knowledge_112.name = 'Granite emits radiation'
    knowledge_knowledge_112.slug = 'granite-emits-radiation'
    knowledge_knowledge_112.language =  importer.locate_object(Language, "id", Language, "id", 1, {'id': 1, 'name': 'en'} ) 
    knowledge_knowledge_112.genre_for_url =  importer.locate_object(GenreForURL, "id", GenreForURL, "id", 1, {'id': 1, 'name': 'knowledge'} ) 
    knowledge_knowledge_112.type = 'knowledge'
    knowledge_knowledge_112.notesite_url = 'https://note.com/argumented_world/n/na8bfb6746d51'
    knowledge_knowledge_112.article =  importer.locate_object(Article, "id", Article, "id", 6211, {'id': 6211, 'excerpt': 'Granite emits radiation', 'kicker': 'Granite emits radiation', 'content': "<p>Granite, also called granite, is often used in tombstones and buildings. Granite often emits radiation because it contains high levels of radioactive isotopes such as potassium, uranium, and thorium. Uranium and thorium are solids, but when they decay to the element radon, they become gases and can be inhaled into the body through the lungs.</p>\r\n\r\n<p>Therefore, it is better to ventilate caves and stone buildings that contain a lot of granite. Incidentally, radon is a heavy element and tends to accumulate below the ground, so it is advisable to ventilate with this in mind as well.</p>\r\n\r\n<p>Many buildings in the world are built of stone, so radiation exposure due to inhalation of radon and other elements is relatively high. Regarding in Japan, where most buildings are made of wood and ventilation is easy, radiation exposure through ---------inhalation is relatively low. However, because of the abundance of marine products, radiation exposure through ingestion is higher.</p>\r\n\r\n<p>Granite is also found under the ground where we live, so we are all exposed to radiation emitted from the ground. In the Kansai region in Japan, the average exposure is higher than in the Kanto region because of the large amount of granite present. Okayama, Kagawa, and Miyagi prefectures are the main producers of granite.</p>\r\n\r\n<p>Taken from the website of the Ministry of the Environment in Japan. The average annual exposure of Japanese people to natural radiation (food, cosmic rays, inhalation of radon and other substances, the earth, etc.) is 2.1 millisieverts per year.</p>\r\n\r\n<p>If the granite buried in the ground is emitting radiation, shouldn't we stay off the ground too much? The answer is No. Because the higher you go up in the sky, the more likely you are to be exposed to radiation called cosmic rays. This is the reason why the exposure to radiation is higher when flying. Cosmic rays are radiation that travels through space, and many of them come to Earth. However, the Earth has an atmosphere that protects us from cosmic rays.</p>\r\n\r\n<p>When we think of radiation, we immediately think of special cases such as atomic bombs, nuclear power, and X-rays (x-rays), but it is also something that is more familiar to us.</p>\r\n\r\n<p>『放射線について考えよう。』多田将 (著)</p>\r\n\r\n<p>日本地質学会 - 日本の自然放射線量</p>\r\n\r\n<p>環境省_年間当たりの被ばく線量の比較</p>\r\n\r\n<p>環境省_大地の放射線（日本）</p>\r\n\r\n<p>Engin Akyurt on Pixabay</p>\r\n\r\n<p>写真AC</p>", 'references': '', 'rating': 0.0, 'rating_count': None, 'published_date': dateutil.parser.parse("2023-07-03T02:53:18.366157+00:00"), 'updated_date': dateutil.parser.parse("2023-07-03T02:53:18.372662+00:00")} ) 
    knowledge_knowledge_112.author =  importer.locate_object(UserAccount, "id", UserAccount, "id", 1, {'id': 1, 'password': 'pbkdf2_sha256$600000$Q9AwSzFqEXF1ueS21sGGfz$rZo+NVruXU5Zf5vp00wtuwLn0Z333sn5NtvS8VWKqds=', 'last_login': dateutil.parser.parse("2023-06-30T06:03:10.086511+00:00"), 'is_superuser': True, 'email': 'yurinakanishi33@gmail.com', 'name': 'yuri', 'is_active': True, 'is_staff': True} ) 
    knowledge_knowledge_112 = importer.save_or_locate(knowledge_knowledge_112)

    knowledge_knowledge_113 = Knowledge()
    knowledge_knowledge_113.name = '速く情報を得ることが富を生む'
    knowledge_knowledge_113.slug = 'getting-information-fast-creates-wealth-jp'
    knowledge_knowledge_113.language =  importer.locate_object(Language, "id", Language, "id", 2, {'id': 2, 'name': 'jp'} ) 
    knowledge_knowledge_113.genre_for_url =  importer.locate_object(GenreForURL, "id", GenreForURL, "id", 1, {'id': 1, 'name': 'knowledge'} ) 
    knowledge_knowledge_113.type = 'knowledge'
    knowledge_knowledge_113.notesite_url = 'https://note.com/argumented_world/n/n2efde7c878f7'
    knowledge_knowledge_113.article =  importer.locate_object(Article, "id", Article, "id", 6212, {'id': 6212, 'excerpt': '速く情報を得ることが富を生む', 'kicker': '速く情報を得ることが富を生む', 'content': '<p>情報化社会といわれる現代ですが、200年前にネイサン・ロスチャイルドが、情報がいかに大事かを示した出来事があります。</p>\r\n\r\n<p>当時、今のベルギーのあたりでワーテルローの戦いが起こっていました。フランスVSイギリス、オランダ、プロイセンの同盟軍の戦いです。フランスを率いるのはかの有名なナポレオンで、イギリスの同盟国を率いるのは、名将ウェリントン将軍でした。</p>\r\n\r\n<p>そしてそのころ、イギリスの取引所でも静かな戦いが起こっていました。 戦っていたのは投資家たちです。ワーテルローの戦いの結果によって、大きなお金が動きます。というのは、ナポレオンが勝てばコンソル公債（イギリスの代表的な国債）は暴落、ウェリントン将軍が勝てばコンソル公債は暴騰するだろうと言われていたからです。国債が暴落するとわかれば、早く国債を売った人が損を避けることができますし、国債が暴騰するとわかれば、早く国債を買った人が儲けることができます。</p>\r\n\r\n<p>戦いの結果を周りより早く知ったものが勝者となる状況で、売るべきか、買うべきか、取引所の人々は今か今かと情報を待っていました。今は通信が発達しているのでネットを使って瞬時に情報を送ることができますが、当時はまだ電話もない時代です。新聞などの情報か、人が直接情報を運んでくるのを待つしかありませんでした。</p>\r\n\r\n<p>そんな中、ネイサンはロスチャイルド家の素早い情報伝達体制を使って、イギリスの南方の港町でいち早くイギリス勝利のニュースを伝えるオランダの新聞を手に入れていました。これは、ロスチャイルド家の代理人が前の夜にベルギーの港から海峡を渡る船に飛び乗って運んできたものでした。さすが、ロスチャイルド家って感じですよね。ロスチャイルド家の優れた情報伝達体制は金融界に知れ渡っていた為、みなネイサンの動きに注目していました。ネイサンは、すぐにロンドンの取引所に戻りました。しかし、彼は公債を買いに出ずに売りに出ました。ネイサンの動きを見た投資家たちには「イギリスは負けた」という噂が広がりみんな一斉に売りに入りました。公債は大暴落、それを見たネイサンはすぐに公債を安値で大量に買いました。それの少し後に、ウェリントン将軍が勝ったという本当のニュースが伝えられ、公債は大暴騰しました。</p>\r\n\r\n<p>ネイサンが最初に売りに出たのは彼が仕掛けた罠だったのです。こうして一芝居を打ってみんなを欺いたネイサンは、巨万の富を手に入れました。ずる賢く、かなり頭いいですよね。この事件は「ネイサンの逆売り」として言い伝えられるようになりました。（この出来事は作り話という説もあります。）ネイサンのように人を騙すことまではしなくても、人よりも先に情報を得て行動して人が成功を手に入れているのは、今も変わらないと思います。</p>\r\n\r\n<p>『朝日百科\u3000世界の歴史10\u3000ー19世紀ー』1991年\u3000朝日新聞社 D728</p>\r\n\r\n<p>Pexels Skitterphoto</p>\r\n\r\n<p>File:Nathan Rothschild.jpg</p>\r\n\r\n<p>Battle of Waterloo 1815.PNG</p>', 'references': '', 'rating': 0.0, 'rating_count': None, 'published_date': dateutil.parser.parse("2023-07-03T02:53:18.366157+00:00"), 'updated_date': dateutil.parser.parse("2023-07-03T02:53:18.372662+00:00")} ) 
    knowledge_knowledge_113.author =  importer.locate_object(UserAccount, "id", UserAccount, "id", 1, {'id': 1, 'password': 'pbkdf2_sha256$600000$Q9AwSzFqEXF1ueS21sGGfz$rZo+NVruXU5Zf5vp00wtuwLn0Z333sn5NtvS8VWKqds=', 'last_login': dateutil.parser.parse("2023-06-30T06:03:10.086511+00:00"), 'is_superuser': True, 'email': 'yurinakanishi33@gmail.com', 'name': 'yuri', 'is_active': True, 'is_staff': True} ) 
    knowledge_knowledge_113 = importer.save_or_locate(knowledge_knowledge_113)

    knowledge_knowledge_114 = Knowledge()
    knowledge_knowledge_114.name = 'Getting information fast creates wealth.'
    knowledge_knowledge_114.slug = 'getting-information-fast-creates-wealth'
    knowledge_knowledge_114.language =  importer.locate_object(Language, "id", Language, "id", 1, {'id': 1, 'name': 'en'} ) 
    knowledge_knowledge_114.genre_for_url =  importer.locate_object(GenreForURL, "id", GenreForURL, "id", 1, {'id': 1, 'name': 'knowledge'} ) 
    knowledge_knowledge_114.type = 'knowledge'
    knowledge_knowledge_114.notesite_url = 'https://note.com/argumented_world/n/n2efde7c878f7'
    knowledge_knowledge_114.article =  importer.locate_object(Article, "id", Article, "id", 6213, {'id': 6213, 'excerpt': 'Getting information fast creates wealth.', 'kicker': 'Getting information fast creates wealth.', 'content': '<p>Today, we live in an information society, but 200 years ago, Nathan Rothschild demonstrated how important information is.</p>\r\n\r\n<p>At the time, the Battle of Waterloo was taking place in what is now Belgium. It was a battle between France and the allied forces of England, the Netherlands, and Prussia. France was led by the famous Napoleon, and the British allies were led by the famous General Wellington.</p>\r\n\r\n<p>At the same time, a quiet battle was also taking place on the British trading floors. It was the investors who were fighting. The outcome of the Battle of Waterloo would move big money, because it was said that if Napoleon won, the consols would plummet, and if General Wellington won, the consols would soar.</p>\r\n\r\n<p>If it was known that the government bonds would collapse, those who sold them early could avoid losses, and if it was known that the government bonds would soar, those who bought them early could make money. The winner was the one who knew the outcome of the battle earlier than others, and people on the trading floor were waiting for information on whether they should sell or buy.</p>\r\n\r\n<p>Nowadays, with the development of telecommunications, information can be sent instantly via the Internet, but back then there were no Internet. The only way to get information was to wait for information from newspapers or other sources, or for people to bring information directly to us. In such a situation, Nathan used the Rothschild family\'s quick information transmission system to obtain a Dutch newspaper in a southern port town in England, which was the first to report the news of the British victory. This was brought to him by an agent of the Rothschilds who had jumped on a ship across the channel from a Belgian port the night before. That\'s what the Rothschilds are all about, isn\'t it?</p>\r\n\r\n<p>The Rothschilds were known throughout the financial world for their excellent communication system, so everyone was watching Nathan\'s every move. Nathan soon returned to the London exchanges. But instead of going out to buy public bonds, he went out to sell them.</p>\r\n\r\n<p>Rumors spread among investors who saw Nathan\'s move that the British had lost, and they all began to sell at once. Bonds fell sharply, and Nathan saw this and immediately bought a lot of bonds at low prices. A short time later, the real news came that General Wellington had won, and the bonds soared.</p>\r\n\r\n<p>Nathan\'s initial selling was a trap he had set. Nathan thus made a play, fooled everyone, and made a fortune. He was cunning and quite clever. This incident became known as "Nathan\'s Reverse Sellout. (Some say this incident is a myth.)</p>\r\n\r\n<p>It is still the same today that people are obtaining success by getting information and acting on it before others do, even if they don\'t go so far as to deceive people like Nathan did.</p>\r\n\r\n<p>『朝日百科\u3000世界の歴史10\u3000ー19世紀ー』1991年\u3000朝日新聞社 D728</p>\r\n\r\n<p>Pexels Skitterphoto</p>\r\n\r\n<p>File:Nathan Rothschild.jpg</p>\r\n\r\n<p>Battle of Waterloo 1815.PNG</p>', 'references': '', 'rating': 0.0, 'rating_count': None, 'published_date': dateutil.parser.parse("2023-07-03T02:53:18.366157+00:00"), 'updated_date': dateutil.parser.parse("2023-07-03T02:53:18.372662+00:00")} ) 
    knowledge_knowledge_114.author =  importer.locate_object(UserAccount, "id", UserAccount, "id", 1, {'id': 1, 'password': 'pbkdf2_sha256$600000$Q9AwSzFqEXF1ueS21sGGfz$rZo+NVruXU5Zf5vp00wtuwLn0Z333sn5NtvS8VWKqds=', 'last_login': dateutil.parser.parse("2023-06-30T06:03:10.086511+00:00"), 'is_superuser': True, 'email': 'yurinakanishi33@gmail.com', 'name': 'yuri', 'is_active': True, 'is_staff': True} ) 
    knowledge_knowledge_114 = importer.save_or_locate(knowledge_knowledge_114)

    knowledge_knowledge_115 = Knowledge()
    knowledge_knowledge_115.name = '象牙からプラスチックへ'
    knowledge_knowledge_115.slug = 'from-ivory-to-plastic-jp'
    knowledge_knowledge_115.language =  importer.locate_object(Language, "id", Language, "id", 2, {'id': 2, 'name': 'jp'} ) 
    knowledge_knowledge_115.genre_for_url =  importer.locate_object(GenreForURL, "id", GenreForURL, "id", 1, {'id': 1, 'name': 'knowledge'} ) 
    knowledge_knowledge_115.type = 'knowledge'
    knowledge_knowledge_115.notesite_url = 'https://note.com/argumented_world/n/n3e63e69650b5'
    knowledge_knowledge_115.article =  importer.locate_object(Article, "id", Article, "id", 6214, {'id': 6214, 'excerpt': '象牙からプラスチックへ', 'kicker': '象牙からプラスチックへ', 'content': '<p>象牙はその名の通り、象の牙です。美しいクリーム色で加工もしやすいため、装飾品などの材料として人気の素材です。象牙は印鑑や三味線、ピアノの白鍵などにも加工されてきました。英語圏では「アイボリー」と呼ばれます。 高度経済成長期の日本は、高給のサラリーマンが増えたので、高値で取引される象牙の輸入大国となりました。また、日本の印鑑文化も輸入を助長しました。象牙は朱肉が染みこみやすく、印鑑の高級材料らしいです。象牙の需要が増えるにつれて、アフリカなどで象が乱獲され、個体数が減少し世界的な問題となりました。国際的な象牙の取引は1989年のワシントン条約から違法となっています。そして1996年、セルロイドが象牙の代替品として開発されました。セルロイドは天然原料からつくられる、プラスチックの一種です。 20世紀前半には生活用品等に多く使われましたが、とても燃えやすく、危険な素材でもありました。</p>\r\n\r\n<p>現在は、人工原料から作られた燃えにくいプラスチックが開発され、セルロイドはほとんど生産されていません。一方で、象牙は現在も密輸され続けています。アフリカの現地では、象が人と接触して人を殺してしまう事件が起ったり、象が農作物を荒らしたりすることがあるらしく、地元の人々は象を殺すことに賛成しているようです。事情は複雑ですね。</p>\r\n\r\n<p>また、今の象は、象牙がなかったり短かったりする個体の割合が多いらしいです。</p>\r\n\r\n<p>象牙目当ての人間に殺されなかった象が子孫を残していった結果だといわれています。これも進化といえば進化なんですけどね。</p>\r\n\r\n<p>図説世界史を変えた50の鉱物</p>\r\n\r\n<p>著者 エリック・シャリーン 著</p>\r\n\r\n<p>เอกลักษณ์ มะลิซ้อน Pixabay</p>\r\n\r\n<p>ゾウをめぐるアフリカ各国の異なる事情と割れる議論</p>\r\n\r\n<p>象牙を持たないアフリカゾウが増加中 密猟の圧力にさらされ進化か</p>', 'references': '', 'rating': 0.0, 'rating_count': None, 'published_date': dateutil.parser.parse("2023-07-03T02:53:18.366157+00:00"), 'updated_date': dateutil.parser.parse("2023-07-03T02:53:18.372662+00:00")} ) 
    knowledge_knowledge_115.author =  importer.locate_object(UserAccount, "id", UserAccount, "id", 1, {'id': 1, 'password': 'pbkdf2_sha256$600000$Q9AwSzFqEXF1ueS21sGGfz$rZo+NVruXU5Zf5vp00wtuwLn0Z333sn5NtvS8VWKqds=', 'last_login': dateutil.parser.parse("2023-06-30T06:03:10.086511+00:00"), 'is_superuser': True, 'email': 'yurinakanishi33@gmail.com', 'name': 'yuri', 'is_active': True, 'is_staff': True} ) 
    knowledge_knowledge_115 = importer.save_or_locate(knowledge_knowledge_115)

    knowledge_knowledge_116 = Knowledge()
    knowledge_knowledge_116.name = 'From Ivory to Plastic'
    knowledge_knowledge_116.slug = 'from-ivory-to-plastic'
    knowledge_knowledge_116.language =  importer.locate_object(Language, "id", Language, "id", 1, {'id': 1, 'name': 'en'} ) 
    knowledge_knowledge_116.genre_for_url =  importer.locate_object(GenreForURL, "id", GenreForURL, "id", 1, {'id': 1, 'name': 'knowledge'} ) 
    knowledge_knowledge_116.type = 'knowledge'
    knowledge_knowledge_116.notesite_url = 'https://note.com/argumented_world/n/n3e63e69650b5 '
    knowledge_knowledge_116.article =  importer.locate_object(Article, "id", Article, "id", 6215, {'id': 6215, 'excerpt': 'From Ivory to Plastic', 'kicker': 'From Ivory to Plastic', 'content': "<p>Ivory is the tusk of an elephant. Because of its beautiful cream color and ease of processing, it is a popular material for decorative items. Ivory has also been processed into seals, shamisen (three-stringed Japanese musical instrument), and white piano keys.</p>\r\n\r\n<p>During the period of rapid economic growth, Japan became a major importer of ivory, which is traded at a high price, because of the increase in the number of well-paid businessmen. Japan's seal culture also contributed to imports. Ivory is said to be a high-grade material for seals because it easily soaks up red ink. As the demand for ivory increased, elephants were overhunted in Africa and other parts of the world, resulting in a decrease in their population, which became a global problem. International ivory trade has been illegal since the Washington Convention of 1989.</p>\r\n\r\n<p>In 1996, celluloid was developed as an alternative to ivory. Celluloid is a type of plastic made from natural raw materials. In the first half of the 20th century, celluloid was widely used for household goods, but it was also a highly flammable and dangerous material.</p>\r\n\r\n<p>Today, celluloid is rarely produced due to the development of non-flammable plastics made from man-made raw materials. Ivory, on the other hand, continues to be smuggled today.</p>\r\n\r\n<p>In Africa, there have been incidents of elephants coming into contact with people and killing them, and elephants sometimes destroy crops, so the local people seem to be in favor of killing elephants. The situation is complicated.</p>\r\n\r\n<p>Also, it is said that a large percentage of today's elephants have no ivory or short tusks. It is said that this is the result of elephants that were not killed by humans who wanted their ivory and can left their offspring behind. This is also evolution, though.</p>\r\n\r\n<p>Fifty Minerals that Changed the Course of History by Eric Chaline</p>\r\n\r\n<p>เอกลักษณ์ มะลิซ้อน Pixabay</p>\r\n\r\n<p>ゾウをめぐるアフリカ各国の異なる事情と割れる議論</p>\r\n\r\n<p>象牙を持たないアフリカゾウが増加中 密猟の圧力にさらされ進化か</p>", 'references': '', 'rating': 0.0, 'rating_count': None, 'published_date': dateutil.parser.parse("2023-07-03T02:53:18.366157+00:00"), 'updated_date': dateutil.parser.parse("2023-07-03T02:53:18.372662+00:00")} ) 
    knowledge_knowledge_116.author =  importer.locate_object(UserAccount, "id", UserAccount, "id", 1, {'id': 1, 'password': 'pbkdf2_sha256$600000$Q9AwSzFqEXF1ueS21sGGfz$rZo+NVruXU5Zf5vp00wtuwLn0Z333sn5NtvS8VWKqds=', 'last_login': dateutil.parser.parse("2023-06-30T06:03:10.086511+00:00"), 'is_superuser': True, 'email': 'yurinakanishi33@gmail.com', 'name': 'yuri', 'is_active': True, 'is_staff': True} ) 
    knowledge_knowledge_116 = importer.save_or_locate(knowledge_knowledge_116)

    knowledge_knowledge_117 = Knowledge()
    knowledge_knowledge_117.name = ''
    knowledge_knowledge_117.slug = 'four-dimensional-figures-jp'
    knowledge_knowledge_117.language =  importer.locate_object(Language, "id", Language, "id", 2, {'id': 2, 'name': 'jp'} ) 
    knowledge_knowledge_117.genre_for_url =  importer.locate_object(GenreForURL, "id", GenreForURL, "id", 1, {'id': 1, 'name': 'knowledge'} ) 
    knowledge_knowledge_117.type = 'knowledge'
    knowledge_knowledge_117.notesite_url = 'https://note.com/argumented_world/n/nd069d954ce04'
    knowledge_knowledge_117.article =  importer.locate_object(Article, "id", Article, "id", 6216, {'id': 6216, 'excerpt': '', 'kicker': '', 'content': '<p>４次元ポケットからは何でも出てきますが、そもそも４次元ってどんな感じなのでしょうか？この疑問は、誰もが思ったことがあると思います。私たちは３次元の世界に存在しています。縦、横、奥行きがある世界です。３次元空間しか認識できない私たちには４次元の世界を完全に理解するのは無理だと言われています。しかし、４次元の世界のことを考えて４次元と親しくなることはできます。今回は「展開図」を使ってちょっとだけ４次元を分かった気になる方法を紹介します。まず、次元はこのようになっています。</p>\r\n\r\n<p>０次元＝点</p>\r\n\r\n<p>１次元=線</p>\r\n\r\n<p>２次元=面</p>\r\n\r\n<p>３次元＝立体</p>\r\n\r\n<p>展開については、小中学校で習われたかと思います。展開するということは、次元を一つ下げるということをやっています。２次元の図形を展開すると、１次元の線になります。</p>\r\n\r\n<p>３次元の立方体を展開すると、２次元の面になります。</p>\r\n\r\n<p>この流れで行くと、４次元の立方体を展開すると３次元の立体になります。ということで、４次元の立方体描くことは難しいですが、その展開図であれば私たちにも認識できます。それが右の立体です。（カラフルに色づけしているのは、わかりやすくするためです。）</p>\r\n\r\n<p>このように、４次元立方体の展開図は８つの３次元立方体がこのように組み合わさったものになるらしいです。展開する前の４次元立方体では、下の展開図のa同士、b同士、c同士、は展開する前は空間的につながっています。</p>\r\n\r\n<p>え？って感じで直感的には理解できませんが、そういうことらしいです。</p>\r\n\r\n<p>サルバドールダリは、1954年に『Crucifixion (Corpus Hypercubus)』（磔刑\u3000超立法的人体）を発表しました。これには、４次元図形の展開図が描かれています。</p>\r\n\r\n<p>４次元の空間と宗教的な意味とを掛け合わせているように見えますね。他にも、４次元は多くの科学者、数学者、芸術家のインスピレーションの源となってきました。 あると分かっているんだけど理解できないものは、人々の探究心をかき立てます。今後も４次元という概念は、私たちの想像力を膨らませてくれるでしょう。</p>\r\n\r\n<p>Dali Crucifixion hypercube</p>\r\n\r\n<p>『カオスとアクシデントを操る数学 難解なテーマがサラリとわかるガイドブック』エドワード・Ｂ．バーガー 、マイケル・スターバード （著）熊谷 玲美、松井 信彦 （訳）</p>\r\n\r\n<p></p>', 'references': '', 'rating': 0.0, 'rating_count': None, 'published_date': dateutil.parser.parse("2023-07-03T02:53:18.366157+00:00"), 'updated_date': dateutil.parser.parse("2023-07-03T02:53:18.372662+00:00")} ) 
    knowledge_knowledge_117.author =  importer.locate_object(UserAccount, "id", UserAccount, "id", 1, {'id': 1, 'password': 'pbkdf2_sha256$600000$Q9AwSzFqEXF1ueS21sGGfz$rZo+NVruXU5Zf5vp00wtuwLn0Z333sn5NtvS8VWKqds=', 'last_login': dateutil.parser.parse("2023-06-30T06:03:10.086511+00:00"), 'is_superuser': True, 'email': 'yurinakanishi33@gmail.com', 'name': 'yuri', 'is_active': True, 'is_staff': True} ) 
    knowledge_knowledge_117 = importer.save_or_locate(knowledge_knowledge_117)

    knowledge_knowledge_118 = Knowledge()
    knowledge_knowledge_118.name = 'Four dimensional figures'
    knowledge_knowledge_118.slug = 'four-dimensional-figures'
    knowledge_knowledge_118.language =  importer.locate_object(Language, "id", Language, "id", 1, {'id': 1, 'name': 'en'} ) 
    knowledge_knowledge_118.genre_for_url =  importer.locate_object(GenreForURL, "id", GenreForURL, "id", 1, {'id': 1, 'name': 'knowledge'} ) 
    knowledge_knowledge_118.type = 'knowledge'
    knowledge_knowledge_118.notesite_url = 'https://note.com/argumented_world/n/nd069d954ce04'
    knowledge_knowledge_118.article =  importer.locate_object(Article, "id", Article, "id", 6217, {'id': 6217, 'excerpt': 'Four dimensional figures', 'kicker': 'Four dimensional figures', 'content': '<p>Anything can come out of a 4D pocket, but what does the 4th dimension look like in the first place? I think we have all wondered this question. We exist in a three-dimensional world. It is a world of length, width, and depth, and those of us who can only perceive three-dimensional space are told that it is impossible to fully understand the four-dimensional world.</p>\r\n\r\n<p>However, we can think about the 4-dimensional world and become familiar with the 4-dimensional world. In this article, I will show you how to use "expansion diagrams" to feel like you understand the 4th dimension a little better.</p>\r\n\r\n<p>First, the dimensions are like this. You may have learned about expansion in elementary or junior high school. To expand means to lower one dimension.</p>\r\n\r\n<p>0 dimension = point</p>\r\n\r\n<p>1 dimension = line</p>\r\n\r\n<p>2 dimension = surface</p>\r\n\r\n<p>3 dimension = 3 dimensional</p>\r\n\r\n<p>When a 2-dimensional figure is expanded, it becomes a 1-dimensional line.</p>\r\n\r\n<p>When a 3-dimensional cube is expanded, it becomes a 2-dimensional surface.</p>\r\n\r\n<p>Going in this vein, if we expand a 4-dimensional cube, it becomes a 3-dimensional cube. So, it is difficult to draw a 4-dimensional cube, but we can recognize its expansion. This is the right figure. (The colorful colors are for the sake of clarity.)</p>\r\n\r\n<p>As you can see, the expansion of a 4D cube is said to be a combination of eight 3D cubes like this. In the 4D cube before expansion, a to a, b to b, and c to c, in the expansion below, are spatially connected before expansion.</p>\r\n\r\n<p>I want to say "What?". It is not intuitive, but that seems to be the case.</p>\r\n\r\n<p>Salvador Dali published "Crucifixion (Corpus Hypercubus)" in 1954. This depicts the development of a four-dimensional figure.</p>\r\n\r\n<p>It looks like a cross between 4-dimensional space and religious significance.Other than that, the 4th dimension has been a source of inspiration for many scientists, mathematicians, and artists. What we know to be there, but don\'t understand, stirs people\'s spirit of inquiry. The concept of the 4th dimension will continue to fuel our imagination.</p>\r\n\r\n<p>Dali Crucifixion hypercube</p>\r\n\r\n<p>Coincidences, Chaos, and All That Math Jazz: Making Light of Weighty Ideas by Edward B. Burger, Michael Starbird.</p>', 'references': '', 'rating': 0.0, 'rating_count': None, 'published_date': dateutil.parser.parse("2023-07-03T02:53:18.366157+00:00"), 'updated_date': dateutil.parser.parse("2023-07-03T02:53:18.372662+00:00")} ) 
    knowledge_knowledge_118.author =  importer.locate_object(UserAccount, "id", UserAccount, "id", 1, {'id': 1, 'password': 'pbkdf2_sha256$600000$Q9AwSzFqEXF1ueS21sGGfz$rZo+NVruXU5Zf5vp00wtuwLn0Z333sn5NtvS8VWKqds=', 'last_login': dateutil.parser.parse("2023-06-30T06:03:10.086511+00:00"), 'is_superuser': True, 'email': 'yurinakanishi33@gmail.com', 'name': 'yuri', 'is_active': True, 'is_staff': True} ) 
    knowledge_knowledge_118 = importer.save_or_locate(knowledge_knowledge_118)

    knowledge_knowledge_119 = Knowledge()
    knowledge_knowledge_119.name = '船が速くなることは、良いことばかりではなかった'
    knowledge_knowledge_119.slug = 'boats-becoming-faster-were-not-always-a-good-thing-jp'
    knowledge_knowledge_119.language =  importer.locate_object(Language, "id", Language, "id", 2, {'id': 2, 'name': 'jp'} ) 
    knowledge_knowledge_119.genre_for_url =  importer.locate_object(GenreForURL, "id", GenreForURL, "id", 1, {'id': 1, 'name': 'knowledge'} ) 
    knowledge_knowledge_119.type = 'knowledge'
    knowledge_knowledge_119.notesite_url = ''
    knowledge_knowledge_119.article =  importer.locate_object(Article, "id", Article, "id", 6218, {'id': 6218, 'excerpt': '船が速くなることは、良いことばかりではなかった', 'kicker': '船が速くなることは、良いことばかりではなかった', 'content': '<p>１９世紀後半、産業革命の時代の蒸気船の出現は世界の交易を大きく変えました。帆船では風任せだったので大西洋横断には40日ほどかかっていたところを、蒸気船が発明され使われ始めたことで航海の時間は大幅に短くなり、10日くらいで行けるようになりました。 交易がさらに盛んになり、世の中は便利になっていきました。一方で、航海の時間が短くなったことが原因となってヨーロッパのワイン産業は壊滅的な被害を受けることになります。</p>\r\n\r\n<p>フィロキセラは、ぶどうの根に付いて、ぶどうを枯れさせてしまう害虫です。学名でphylloxéra vastatrix（フィロキセラ・ヴァスタトリクス）と表され「破壊者」という意味をもちます。（ちなみに、フィロキセラは日本語ではブドウネアブラムシと呼ばれ、漢字では「葡萄根油虫」と書きます。）元々フィロキセラはアメリカに生息しており、ヨーロッパにはいませんでした。アメリカのぶどうの木は、フィロキセラに対して耐性を持っていたので、被害はなかったのですが、、、</p>\r\n\r\n<p>Tヨーロッパの人々は、帆船の時代の時からアメリカからぶどうの苗木を船で輸入していました。目的は品種改良のためです。帆船の時代は、ぶどうの苗木についたフィロキセラがヨーロッパ行きの船に乗ったとしても、長い船旅の間に死んでしまっていました。しかし、蒸気船によって航海の時間が大幅に短くなったことで、フィロキセラが死ぬ前にヨーロッパに着いてしまいます。そして、生きて上陸したフィロキセラは、瞬く間にヨーロッパ全土に広がり、ヨーロッパのワイン産業に壊滅的な被害を与えたのでした。</p>\r\n\r\n<p>写真は、フィロキセラがワインをたしなんでいる風刺画で、イギリスの 週刊誌「パンチ」に1890年に掲載されたものです。このイラストのコメントには、「フィロキセラこそは本物のグルメ、最高のブドウ園を探し出し最高のブドウにくらいつく」 と書いてあります。</p>\r\n\r\n<p>『図説 世界史を変えた50の植物 』\u3000ビル ローズ (著)、柴田 譲治 (翻訳)</p>\r\n\r\n<p>『ワインの歴史---自然の恵みと人間の知恵の歩み』\u3000山本 博 (著)</p>\r\n\r\n<p>使用させて頂いた画像</p>\r\n\r\n<p>Jill Wellington on Pixabay</p>\r\n\r\n<p>wikimedia.org/w/index.php?curid=958921</p>', 'references': '', 'rating': 0.0, 'rating_count': None, 'published_date': dateutil.parser.parse("2023-07-03T02:53:18.366157+00:00"), 'updated_date': dateutil.parser.parse("2023-07-03T02:53:18.372662+00:00")} ) 
    knowledge_knowledge_119.author =  importer.locate_object(UserAccount, "id", UserAccount, "id", 1, {'id': 1, 'password': 'pbkdf2_sha256$600000$Q9AwSzFqEXF1ueS21sGGfz$rZo+NVruXU5Zf5vp00wtuwLn0Z333sn5NtvS8VWKqds=', 'last_login': dateutil.parser.parse("2023-06-30T06:03:10.086511+00:00"), 'is_superuser': True, 'email': 'yurinakanishi33@gmail.com', 'name': 'yuri', 'is_active': True, 'is_staff': True} ) 
    knowledge_knowledge_119 = importer.save_or_locate(knowledge_knowledge_119)

    knowledge_knowledge_120 = Knowledge()
    knowledge_knowledge_120.name = 'びっくりすると、転んで動けなくなってしてしまう「気絶ヤギ」'
    knowledge_knowledge_120.slug = 'fainting-goat-jp'
    knowledge_knowledge_120.language =  importer.locate_object(Language, "id", Language, "id", 2, {'id': 2, 'name': 'jp'} ) 
    knowledge_knowledge_120.genre_for_url =  importer.locate_object(GenreForURL, "id", GenreForURL, "id", 1, {'id': 1, 'name': 'knowledge'} ) 
    knowledge_knowledge_120.type = 'knowledge'
    knowledge_knowledge_120.notesite_url = 'https://note.com/argumented_world/n/n03441b89a345'
    knowledge_knowledge_120.article =  importer.locate_object(Article, "id", Article, "id", 6219, {'id': 6219, 'excerpt': 'びっくりすると、転んで動けなくなってしてしまう「気絶ヤギ」', 'kicker': 'びっくりすると、転んで動けなくなってしてしまう「気絶ヤギ」', 'content': '<p>気絶ヤギと呼ばれるヤギがいます。アメリカのテネシー州が原産のヤギの品種で、英語では、fainting goats（フェインティング ゴート）と呼ばれます。 このヤギは、驚くと筋肉が10秒ほど凍りついたように動かなくなってしまうという特性を持っています。足がまっすぐにピンと伸びたままになってしまい、横向きにごろんと倒れてしまうのです。これ、実は気絶しているわけではなく、意識はちゃんとあるんです。痛みはなく、10秒ほど転んだ後は、何事もなかったかのように普通に動けるようになります。</p>\r\n\r\n<p>この特徴は、先天性ミオトニーと呼ばれる遺伝的の疾患が原因です。ミオトニーとは、「筋肉が一時的にこわばったままになる」という意味です。気絶ヤギは「ミオトニック・ゴート」とも呼ばれます。そして大人のヤギより、子供のヤギのほうが倒れやすいんです。大人のヤギは長年ミオトニーを経験しており、慣れているので、ぎこちない足どりでも走りつづけることもあります。先天性ミオトニーと呼ばれる、このような遺伝的性質は、ヤギに限らず、馬、犬、猫や人間にも起ることがあります。</p>\r\n\r\n<p>なぜ絶滅していないのか？</p>\r\n\r\n<p>びっくりすると動けなくなるということは、天敵に捕まりやすいと言うことです。天敵にすぐに食べられてしまうこの性質を持ったヤギが、なぜ生き残ってきたのでしょう？1つめの理由は、羊を育てていた農家が気絶ヤギのびっくりすると動けなくなる性質を利用したからです。羊の群れといっしょに気絶山羊を置いて、狼やコヨーテに襲われた場合の引きつけ役にしました。気絶ヤギは驚いて動けなくなり天敵に食べられてしまうのですが、そのあいだに羊は逃げることができます。 2つめの理由は、何かに登ったりジャンプしたりすることでも失神を引き起こすことが多いため、牧場や飼育小屋のフェンスを越えて脱走する可能性がとても低いからです。ペットや家畜として飼育しやすいんですね。この2つの理由から、気絶ヤギは人の立場から見て都合が良かったので、繁殖を助けられました。</p>\r\n\r\n<p>また、今では気絶ヤギが気絶する姿が見世物として注目されています。私たちは思わず笑ってしまいますが、ヤギたちにとってはとんだ迷惑ですね。気絶ヤギのYouTube動画は一千万回以上も再生されているものもあります。</p>\r\n\r\n<p>こちらが「気絶ヤギ」が倒れている動画です。</p>\r\n\r\n<p>気絶ヤギをペットにして見世物にすることに反対する人もいますが、人間が家畜やペットとして保護しながら飼育していなければ、天敵に殺されて絶滅してしまいます。気絶ヤギの見たさに人が集まることによって、牧場の利益につながり、ヤギが保護できています。ここは、難しい問題ですね。 以上、かわいらしくも悲しい気絶ヤギのお話しでした。</p>\r\n\r\n<p>『図説 世界史を変えた50の動物 』\u3000エリック シャリーン (著)、甲斐 理恵子 (翻訳)</p>\r\n\r\n<p>Ashley Jaynes on Unsplash</p>\r\n\r\n<p>bill fairs on Unsplash</p>\r\n\r\n<p>Viola on Pixabay</p>', 'references': '', 'rating': 0.0, 'rating_count': None, 'published_date': dateutil.parser.parse("2023-07-03T02:53:18.366157+00:00"), 'updated_date': dateutil.parser.parse("2023-07-03T02:53:18.372662+00:00")} ) 
    knowledge_knowledge_120.author =  importer.locate_object(UserAccount, "id", UserAccount, "id", 1, {'id': 1, 'password': 'pbkdf2_sha256$600000$Q9AwSzFqEXF1ueS21sGGfz$rZo+NVruXU5Zf5vp00wtuwLn0Z333sn5NtvS8VWKqds=', 'last_login': dateutil.parser.parse("2023-06-30T06:03:10.086511+00:00"), 'is_superuser': True, 'email': 'yurinakanishi33@gmail.com', 'name': 'yuri', 'is_active': True, 'is_staff': True} ) 
    knowledge_knowledge_120 = importer.save_or_locate(knowledge_knowledge_120)

    knowledge_knowledge_121 = Knowledge()
    knowledge_knowledge_121.name = 'Fainting goat'
    knowledge_knowledge_121.slug = 'fainting-goat'
    knowledge_knowledge_121.language =  importer.locate_object(Language, "id", Language, "id", 1, {'id': 1, 'name': 'en'} ) 
    knowledge_knowledge_121.genre_for_url =  importer.locate_object(GenreForURL, "id", GenreForURL, "id", 1, {'id': 1, 'name': 'knowledge'} ) 
    knowledge_knowledge_121.type = 'knowledge'
    knowledge_knowledge_121.notesite_url = 'https://note.com/argumented_world/n/n03441b89a345'
    knowledge_knowledge_121.article =  importer.locate_object(Article, "id", Article, "id", 6220, {'id': 6220, 'excerpt': 'Fainting goat', 'kicker': 'Fainting goat', 'content': '<p>There is a goat called the "fainting goat". It is a breed of goat native to Tennessee, USA. When startled, the goats\' muscles freeze for about 10 seconds. Their legs stay straight and pinned up, and they fall flat on their sides. They are not actually passed out, but is conscious. There is no pain, and after a 10-second fall, the goats can move normally as if nothing had happened.</p>\r\n\r\n<p>This feature is caused by a genetic disorder called congenital myotonia.  Myotonia means "the muscles remain temporarily stiff". Therefore, fainting goats are also called "myotonic goats. And kid goats are more prone to collapse than adult goats. Adult goats have experienced myotonia for many years and are used to it, so they may continue to run even with awkward gait. This genetic trait, called congenital myotonia, can occur not only in goats, but also in horses, dogs, cats, and humans.</p>\r\n\r\n<p>The fact that they get stuck when startled means that they are easily caught by their natural enemies. How is it that goats, with this propensity to be quickly eaten by their natural enemies, have survived? Why have they survived?</p>\r\n\r\n<p>The reason is people were helping them to reproduce. So, why are people helping fainting goats to reproduce? There are two reasons.</p>\r\n\r\n<p>The first reason is the farmers who raised sheep used the fainting goat\'s ability that they can\'t move when startled. They put fainting goats with their flocks of sheep to attract wolves and coyotes if they attacked them. The fainting goats would be so startled that they would be unable to move and would be eaten by their natural enemies while another sheep can escape.</p>\r\n\r\n<p>The second reason is climbing or jumping on something can also cause fainting spells. And The possibility of escaping over the fence of a pasture or corral is very low. So they are easy to keep as pets or livestock.</p>\r\n\r\n<p>For these two reasons, fainting goats are being helped to breed because it was convenient from a human standpoint.</p>\r\n\r\n<p>In addition, the fainting goat has become a spectacle. We can\'t help but laugh, but the goats are quite annoyed. Some YouTube videos of fainting goats have been viewed more than 10 million times. Here is a video of a "fainting goat" falling over.</p>\r\n\r\n<p>Some people object to the idea of making fainting goats into pets and a freak show. If humans did not keep them as livestock or pets while protecting them, they would be killed by their natural enemies and become extinct. This is a difficult issue and this is a cute and sad story about a fainting goat.</p>\r\n\r\n<p>The 50 Animals that Changed World History</p>\r\n\r\n<p>Eric Charlene (Author), Rieko Kai (Translator)</p>\r\n\r\n<p>Ashley Jaynes on Unsplash</p>\r\n\r\n<p>Bill fairs on Unsplash</p>\r\n\r\n<p>Viola \' on Pixabay</p>', 'references': '', 'rating': 0.0, 'rating_count': None, 'published_date': dateutil.parser.parse("2023-07-03T02:53:18.366157+00:00"), 'updated_date': dateutil.parser.parse("2023-07-03T02:53:18.372662+00:00")} ) 
    knowledge_knowledge_121.author =  importer.locate_object(UserAccount, "id", UserAccount, "id", 1, {'id': 1, 'password': 'pbkdf2_sha256$600000$Q9AwSzFqEXF1ueS21sGGfz$rZo+NVruXU5Zf5vp00wtuwLn0Z333sn5NtvS8VWKqds=', 'last_login': dateutil.parser.parse("2023-06-30T06:03:10.086511+00:00"), 'is_superuser': True, 'email': 'yurinakanishi33@gmail.com', 'name': 'yuri', 'is_active': True, 'is_staff': True} ) 
    knowledge_knowledge_121 = importer.save_or_locate(knowledge_knowledge_121)

    knowledge_knowledge_122 = Knowledge()
    knowledge_knowledge_122.name = ''
    knowledge_knowledge_122.slug = 'even-with-apples-china-is-still-strong-jp'
    knowledge_knowledge_122.language =  importer.locate_object(Language, "id", Language, "id", 2, {'id': 2, 'name': 'jp'} ) 
    knowledge_knowledge_122.genre_for_url =  importer.locate_object(GenreForURL, "id", GenreForURL, "id", 1, {'id': 1, 'name': 'knowledge'} ) 
    knowledge_knowledge_122.type = 'knowledge'
    knowledge_knowledge_122.notesite_url = 'https://note.com/argumented_world/n/n60aa6761a8ed'
    knowledge_knowledge_122.article =  importer.locate_object(Article, "id", Article, "id", 6221, {'id': 6221, 'excerpt': '', 'kicker': '', 'content': '<p>リンゴと言えば、 おいしい果実であり、 ニュートンが万有引力をひらめいたきっかけであり、 iphoneの裏にあり、 聖書やケルト神話にも出てくる果実でもあります。</p>\r\n\r\n<p>ヨーロッパでは古くから多くの国がリンゴを生産していましたが、第2次世界大戦によって大打撃を受けます。ヨーロッパの戦場になった多くの国々の農場は戦車で踏みにじられ、敵軍の侵略を阻止するために地雷が農場にまで埋められていて容易に農作業が再開出来ない状態となっていました。もちろんヨーロッパのリンゴ園も経営が苦しくなりました。 そこで戦争の被害をほとんど受けていないアメリカはヨーロッパに向けてリンゴを売りこみ、アメリカのリンゴ栽培は急成長しました。このままアメリカの成長が続くと思われましたが、、、</p>\r\n\r\n<p>1990年代になると、中国の果樹栽培の事業が成長してきます。政府が農業市場を世界に向けて開放し、 生産性や品質の向上に投資しました。 最初、中国は果物ジュース市場に参入していましたが、20世紀の終わりにはリンゴ輸出においてもヨーロッパやインド、 アメリカを抜いて世界第1位となります。他の国の生産者は、中国の安価な労働力によって国内市場が脅かされていると訴えましたが、実際は、そういう彼らもリンゴ収穫に移民労働者を使っていたのでした（フランスやイギリスへは東ヨーロ ッパからの移民、アメリカは、ラテンアメリカからの移民です）。 現在でも中国はリンゴの生産量でダントツの一位です。2019年のデータによると、世界のリンゴの約56％が中国で生産されています。（2位がEUの15％、3位がアメリカの6％（※1））産業、経済的に中国がアメリカを脅かしてきている昨今ですが、30年前にリンゴにおいても同じようなことが起っていました。 ちなみに輸出量においては、2019年のデータによると中国が17％、EU全体16％、アメリカが14％、チリが11％となっています。（※1）ということは、中国のリンゴの国内消費がめちゃ多いということですね。 中国の家庭では、りんごは健康的な食品として位置づけられており、最も消費量の多い果実だそうです。</p>\r\n\r\n<p>『リンゴの歴史 (「食」の図書館)』  エリカ ジャニク (著)\u3000 甲斐 理恵子 (訳)</p>\r\n\r\n<p>『図説 世界史を変えた50の植物 』\u3000ビル ローズ (著)、柴田 譲治 (訳)</p>\r\n\r\n<p>世界のりんご（生産量、消費量、輸出量、輸入量の推移）</p>\r\n\r\n<p>https://www.maff.go.jp/j/shokusan/export/h19_zigyou/enkatu/market/china/pdf/ringo_sizyo.pdf</p>\r\n\r\n<p>Image by lumix2004 from Pixabay</p>', 'references': '', 'rating': 0.0, 'rating_count': None, 'published_date': dateutil.parser.parse("2023-07-03T02:53:18.366157+00:00"), 'updated_date': dateutil.parser.parse("2023-07-03T02:53:18.372662+00:00")} ) 
    knowledge_knowledge_122.author =  importer.locate_object(UserAccount, "id", UserAccount, "id", 1, {'id': 1, 'password': 'pbkdf2_sha256$600000$Q9AwSzFqEXF1ueS21sGGfz$rZo+NVruXU5Zf5vp00wtuwLn0Z333sn5NtvS8VWKqds=', 'last_login': dateutil.parser.parse("2023-06-30T06:03:10.086511+00:00"), 'is_superuser': True, 'email': 'yurinakanishi33@gmail.com', 'name': 'yuri', 'is_active': True, 'is_staff': True} ) 
    knowledge_knowledge_122 = importer.save_or_locate(knowledge_knowledge_122)

    knowledge_knowledge_123 = Knowledge()
    knowledge_knowledge_123.name = 'Even with apples, China is still strong.'
    knowledge_knowledge_123.slug = 'even-with-apples-china-is-still-strong'
    knowledge_knowledge_123.language =  importer.locate_object(Language, "id", Language, "id", 1, {'id': 1, 'name': 'en'} ) 
    knowledge_knowledge_123.genre_for_url =  importer.locate_object(GenreForURL, "id", GenreForURL, "id", 1, {'id': 1, 'name': 'knowledge'} ) 
    knowledge_knowledge_123.type = 'knowledge'
    knowledge_knowledge_123.notesite_url = 'https://note.com/argumented_world/n/n60aa6761a8ed'
    knowledge_knowledge_123.article =  importer.locate_object(Article, "id", Article, "id", 6222, {'id': 6222, 'excerpt': 'Even with apples, China is still strong.', 'kicker': 'Even with apples, China is still strong.', 'content': "<p>When it comes to apples, it's a delicious fruit, Newton's inspiration for universal gravitation, behind the iphone and mentioned in biblical and Celtic mythology. In this article, we will look at the history of apple producing countries.</p>\r\n\r\n<p>Farms in many of Europe's war-torn countries were trampled by tanks, and landmines were even buried in farms to deter enemy invaders, making it impossible to easily resume farming. Of course, apple orchards in Europe were also struggling.</p>\r\n\r\n<p>The United States, which had suffered little damage from the war, marketed apples to Europe, and American apple cultivation grew rapidly. It was thought that the U.S. growth would continue, but...</p>\r\n\r\n<p>In the 1990s, China's fruit-growing business began to grow. The government opened its agricultural market to the world and invested in improving productivity and quality. Initially, China entered the fruit juice market, but by the end of the 20th century, it was also the world's number one exporter of apples, surpassing Europe, India, and the United States.</p>\r\n\r\n<p>Producers from other countries complained that their domestic market was threatened by cheap Chinese labor, but in fact, they too used migrant workers to harvest apples (immigrants from Eastern Europe to France and the UK, and from Latin America to the US). Today, China is still the number one producer of apples; according to 2019 data, about 56% of the world's apples are produced in China. (The EU comes in second with 15% and the U.S. third with 6%)(*1).</p>\r\n\r\n<p>China is now threatening the US in terms of industry and economy, and the same thing happened with apples 30 years ago. In terms of export volume, according to 2019 data, China accounted for 17%, the EU 16%, the U.S. 14%, and Chile 11%. (*1). It leads the domestic consumption of apples in China is crazy high. In Chinese households, apples are considered a healthy food and are the most consumed fruit.</p>\r\n\r\n<p>『リンゴの歴史 (「食」の図書館)』  エリカ ジャニク (著)\u3000 甲斐 理恵子 (訳)</p>\r\n\r\n<p>『図説 世界史を変えた50の植物 』\u3000ビル ローズ (著)、柴田 譲治 (訳)</p>\r\n\r\n<p>(*1)世界のりんご（生産量、消費量、輸出量、輸入量の推移）</p>\r\n\r\n<p>https://www.maff.go.jp/j/shokusan/export/h19_zigyou/enkatu/market/china/pdf/ringo_sizyo.pdf</p>\r\n\r\n<p>Image by lumix2004 from Pixabay</p>", 'references': '', 'rating': 0.0, 'rating_count': None, 'published_date': dateutil.parser.parse("2023-07-03T02:53:18.366157+00:00"), 'updated_date': dateutil.parser.parse("2023-07-03T02:53:18.372662+00:00")} ) 
    knowledge_knowledge_123.author =  importer.locate_object(UserAccount, "id", UserAccount, "id", 1, {'id': 1, 'password': 'pbkdf2_sha256$600000$Q9AwSzFqEXF1ueS21sGGfz$rZo+NVruXU5Zf5vp00wtuwLn0Z333sn5NtvS8VWKqds=', 'last_login': dateutil.parser.parse("2023-06-30T06:03:10.086511+00:00"), 'is_superuser': True, 'email': 'yurinakanishi33@gmail.com', 'name': 'yuri', 'is_active': True, 'is_staff': True} ) 
    knowledge_knowledge_123 = importer.save_or_locate(knowledge_knowledge_123)

    knowledge_knowledge_124 = Knowledge()
    knowledge_knowledge_124.name = 'アールグレイは、人工的に香りが付けられている'
    knowledge_knowledge_124.slug = 'earl-grey-is-artificially-flavored-jp'
    knowledge_knowledge_124.language =  importer.locate_object(Language, "id", Language, "id", 2, {'id': 2, 'name': 'jp'} ) 
    knowledge_knowledge_124.genre_for_url =  importer.locate_object(GenreForURL, "id", GenreForURL, "id", 1, {'id': 1, 'name': 'knowledge'} ) 
    knowledge_knowledge_124.type = 'knowledge'
    knowledge_knowledge_124.notesite_url = 'https://note.com/argumented_world/n/n803de9d6fd71'
    knowledge_knowledge_124.article =  importer.locate_object(Article, "id", Article, "id", 6223, {'id': 6223, 'excerpt': 'アールグレイは、人工的に香りが付けられている', 'kicker': 'アールグレイは、人工的に香りが付けられている', 'content': '<p>アールグレイは、紅茶の種類の一つです。独特の香りがして、牛乳に良く合うので、ミルクティーとしてもよく飲まれます。Liptonのミルクティーとかも、アールグレイです。 この香りは、ベルガモットという柑橘系の香料で人工的に付けられています。どんな茶葉が使われているかは特に決まりがないので、ベルガモットで香りが付けられていれば、アールグレイと呼ぶそうです。</p>\r\n\r\n<p>アールグレイ（Earl Gray）と言う名前は、1830年代のイギリス首相、チャールズ・グレイ伯爵に由来すると言われています。伯爵は英語でアール（Earl）なので、アールグレイです。</p>\r\n\r\n<p>gerdinekによるPixabayからの画像</p>\r\n\r\n<p>File:Bergamotti (Bergamot fruits) - (1).jpg</p>', 'references': '', 'rating': 0.0, 'rating_count': None, 'published_date': dateutil.parser.parse("2023-07-03T02:53:18.372662+00:00"), 'updated_date': dateutil.parser.parse("2023-07-03T02:53:18.372662+00:00")} ) 
    knowledge_knowledge_124.author =  importer.locate_object(UserAccount, "id", UserAccount, "id", 1, {'id': 1, 'password': 'pbkdf2_sha256$600000$Q9AwSzFqEXF1ueS21sGGfz$rZo+NVruXU5Zf5vp00wtuwLn0Z333sn5NtvS8VWKqds=', 'last_login': dateutil.parser.parse("2023-06-30T06:03:10.086511+00:00"), 'is_superuser': True, 'email': 'yurinakanishi33@gmail.com', 'name': 'yuri', 'is_active': True, 'is_staff': True} ) 
    knowledge_knowledge_124 = importer.save_or_locate(knowledge_knowledge_124)

    knowledge_knowledge_125 = Knowledge()
    knowledge_knowledge_125.name = 'Earl Grey is artificially flavored.'
    knowledge_knowledge_125.slug = 'earl-grey-is-artificially-flavored'
    knowledge_knowledge_125.language =  importer.locate_object(Language, "id", Language, "id", 1, {'id': 1, 'name': 'en'} ) 
    knowledge_knowledge_125.genre_for_url =  importer.locate_object(GenreForURL, "id", GenreForURL, "id", 1, {'id': 1, 'name': 'knowledge'} ) 
    knowledge_knowledge_125.type = 'knowledge'
    knowledge_knowledge_125.notesite_url = 'https://note.com/argumented_world/n/n803de9d6fd71'
    knowledge_knowledge_125.article =  importer.locate_object(Article, "id", Article, "id", 6224, {'id': 6224, 'excerpt': 'Earl Grey is artificially flavored.', 'kicker': 'Earl Grey is artificially flavored.', 'content': '<p>Earl Grey is a type of black tea. The aroma of Earl Grey tea is artificially added with a citrus flavoring called bergamot. There are no rules as to what kind of tea leaves are used, so as long as the tea is flavored with bergamot, it is called Earl Grey.</p>\r\n\r\n<p>The name Earl Gray is said to derive from the Earl Charles Gray, Prime Minister of England in the 1830s.</p>\r\n\r\n<p>gerdinek on Pixabay</p>\r\n\r\n<p>File:Bergamotti (Bergamot fruits) - (1).jpg</p>', 'references': '', 'rating': 0.0, 'rating_count': None, 'published_date': dateutil.parser.parse("2023-07-03T02:53:18.372662+00:00"), 'updated_date': dateutil.parser.parse("2023-07-03T02:53:18.393911+00:00")} ) 
    knowledge_knowledge_125.author =  importer.locate_object(UserAccount, "id", UserAccount, "id", 1, {'id': 1, 'password': 'pbkdf2_sha256$600000$Q9AwSzFqEXF1ueS21sGGfz$rZo+NVruXU5Zf5vp00wtuwLn0Z333sn5NtvS8VWKqds=', 'last_login': dateutil.parser.parse("2023-06-30T06:03:10.086511+00:00"), 'is_superuser': True, 'email': 'yurinakanishi33@gmail.com', 'name': 'yuri', 'is_active': True, 'is_staff': True} ) 
    knowledge_knowledge_125 = importer.save_or_locate(knowledge_knowledge_125)

    knowledge_knowledge_126 = Knowledge()
    knowledge_knowledge_126.name = 'Drawbacks of lightweight plastic Bottles'
    knowledge_knowledge_126.slug = 'drawbacks-of-lightweight-plastic-bottle'
    knowledge_knowledge_126.language =  importer.locate_object(Language, "id", Language, "id", 1, {'id': 1, 'name': 'en'} ) 
    knowledge_knowledge_126.genre_for_url =  importer.locate_object(GenreForURL, "id", GenreForURL, "id", 1, {'id': 1, 'name': 'knowledge'} ) 
    knowledge_knowledge_126.type = 'knowledge'
    knowledge_knowledge_126.notesite_url = 'https://note.com/argumented_world/n/n0cd53bbbde5d'
    knowledge_knowledge_126.article =  importer.locate_object(Article, "id", Article, "id", 6225, {'id': 6225, 'excerpt': 'Drawbacks of lightweight plastic Bottles', 'kicker': 'Drawbacks of lightweight plastic Bottles', 'content': '<p>Lightweight PET bottles are convenient because they can be crushed into small, squishable pieces. These PET bottles have many good points: they are light, easy to crush when discarding, and use less plastic. On the other hand, the disadvantages are that they make noise or are too thin to be stable. And there may be another psychological drawback.</p>\r\n\r\n<p>That is, it might be less tasty than a solid plastic bottle. Studies overseas have shown that water drunk from a flimsy container tastes less tasty than water drunk from a solid, firm container. In the same way, the weight and quality of the container or receptacle can change the perception of taste. Resource reduction is important, but deliciousness would reduce when  using lightweight PET bottles.</p>\r\n\r\n<p>『「重い」と思うことは印象評価を変えるのか ―印象評価における重量刺激の主観量と物理量の影響―』\u3000阿部慶賀</p>\r\n\r\n<p>『Does Touch Affect Taste? The Perceptual Transfer of Product Container Haptic Cues』 (ARADHNA KRISHNA MAUREEN MORRIN)</p>\r\n\r\n<p>Photo by Serenity Mitchell on Unsplash</p>', 'references': '', 'rating': 0.0, 'rating_count': None, 'published_date': dateutil.parser.parse("2023-07-03T02:53:18.372662+00:00"), 'updated_date': dateutil.parser.parse("2023-07-03T02:53:18.393911+00:00")} ) 
    knowledge_knowledge_126.author =  importer.locate_object(UserAccount, "id", UserAccount, "id", 1, {'id': 1, 'password': 'pbkdf2_sha256$600000$Q9AwSzFqEXF1ueS21sGGfz$rZo+NVruXU5Zf5vp00wtuwLn0Z333sn5NtvS8VWKqds=', 'last_login': dateutil.parser.parse("2023-06-30T06:03:10.086511+00:00"), 'is_superuser': True, 'email': 'yurinakanishi33@gmail.com', 'name': 'yuri', 'is_active': True, 'is_staff': True} ) 
    knowledge_knowledge_126 = importer.save_or_locate(knowledge_knowledge_126)

    knowledge_knowledge_127 = Knowledge()
    knowledge_knowledge_127.name = 'Dig for Victory【勝利のために耕そう】'
    knowledge_knowledge_127.slug = 'dig-for-victory-lets-plow-for-victory-jp'
    knowledge_knowledge_127.language =  importer.locate_object(Language, "id", Language, "id", 2, {'id': 2, 'name': 'jp'} ) 
    knowledge_knowledge_127.genre_for_url =  importer.locate_object(GenreForURL, "id", GenreForURL, "id", 1, {'id': 1, 'name': 'knowledge'} ) 
    knowledge_knowledge_127.type = 'knowledge'
    knowledge_knowledge_127.notesite_url = 'https://note.com/argumented_world/n/n1500b7460d12'
    knowledge_knowledge_127.article =  importer.locate_object(Article, "id", Article, "id", 6226, {'id': 6226, 'excerpt': 'Dig for Victory【勝利のために耕そう】', 'kicker': 'Dig for Victory【勝利のために耕そう】', 'content': "<p>第２次世界大戦時、イギリスは食糧難に陥りました。ドイツの潜水艦（Uボート）が食糧をイギリスへ輸送する商船を標的にしたのでした。 イギリス政府は、市民にキャベツなどの野菜を作るようにうながしました。「Dig for Victory （勝利のために耕そう）」と農業大臣が宣言しました。使われていない土地を利用して至る所ににアロットメントと呼ばれる市民農園が作られました。余っている土地はどこでも利用され、鉄道線路のそばの土地なども耕されました。当時発売された「菜園家ハンドブック (Vegetable Grower's Handbook)」では、このように読者に訴えました。</p>\r\n\r\n<p>ちなみに、第１次世界大戦時にもイギリスでは、ドイツによる経済制裁を受け食糧難となり、市民にアロットメントを作るように呼びかけました。アロットメントで野菜を栽培するときに、クローシュ（chroshu、日本語で鐘の意味）と呼ばれるビニールハウスの小さい版みたいなものが開発され、農園の生産量を上げました。クローシュを使えば、畑を増やさなくても野菜の収穫が倍増し、栽培日数も数週間は短縮でき一年中新鮮な野菜が手に入る、とされました。</p>\r\n\r\n<p>学校にも農園が作られ、児童たちは授業の一環としてキャベツなどを育てて収穫しました。そして彼らは、のちに新しい戦後世代の農園家となりました。また、戦時下にキャベツなどの野菜を多く消費したことによって、大部分の市民の食生活が改善され、肥満も少なくなりました。イギリス国民がとても健康になったのは、 市民農園のおかげでもありました。</p>\r\n\r\n<p>アロットメント：イギリス市民農園の人気再復活</p>\r\n\r\n<p>『図説 世界史を変えた50の植物 』\u3000ビル ローズ (著)、柴田 譲治 (翻訳)</p>\r\n\r\n<p>Wolfgang Eckert on Pixabay</p>\r\n\r\n<p>Andreas on Pixabay</p>", 'references': '', 'rating': 0.0, 'rating_count': None, 'published_date': dateutil.parser.parse("2023-07-03T02:53:18.372662+00:00"), 'updated_date': dateutil.parser.parse("2023-07-03T02:53:18.393911+00:00")} ) 
    knowledge_knowledge_127.author =  importer.locate_object(UserAccount, "id", UserAccount, "id", 1, {'id': 1, 'password': 'pbkdf2_sha256$600000$Q9AwSzFqEXF1ueS21sGGfz$rZo+NVruXU5Zf5vp00wtuwLn0Z333sn5NtvS8VWKqds=', 'last_login': dateutil.parser.parse("2023-06-30T06:03:10.086511+00:00"), 'is_superuser': True, 'email': 'yurinakanishi33@gmail.com', 'name': 'yuri', 'is_active': True, 'is_staff': True} ) 
    knowledge_knowledge_127 = importer.save_or_locate(knowledge_knowledge_127)

    knowledge_knowledge_128 = Knowledge()
    knowledge_knowledge_128.name = 'Dig for Victory.'
    knowledge_knowledge_128.slug = 'dig-for-victory-lets-plow-for-victory'
    knowledge_knowledge_128.language =  importer.locate_object(Language, "id", Language, "id", 1, {'id': 1, 'name': 'en'} ) 
    knowledge_knowledge_128.genre_for_url =  importer.locate_object(GenreForURL, "id", GenreForURL, "id", 1, {'id': 1, 'name': 'knowledge'} ) 
    knowledge_knowledge_128.type = 'knowledge'
    knowledge_knowledge_128.notesite_url = 'https://note.com/argumented_world/n/n1500b7460d12'
    knowledge_knowledge_128.article =  importer.locate_object(Article, "id", Article, "id", 6227, {'id': 6227, 'excerpt': 'Dig for Victory.', 'kicker': 'Dig for Victory.', 'content': '<p>During World War II, Britain faced food shortages. German submarines (U-boats) targeted merchant ships transporting food to England. So the British government encouraged its citizens to grow cabbage and other vegetables. #34;Dig for Victory," declared the Minister of Agriculture.</p>\r\n\r\n<p>Allotments, or citizen farms, were set up everywhere on unused land. Wherever there was surplus land, it was changed to Allotments, including land near the railroad tracks. The Vegetable Grower\'s Handbook, published at the time, made this appeal to its readers.</p>\r\n\r\n<p>Incidentally, even during World War I, Britain faced food shortages due to economic sanctions imposed by Germany, which encouraged citizens to make allotments.</p>\r\n\r\n<p>When growing vegetables on allotments, a kind of small version of a plastic greenhouse called a cloche was developed, which increased the farm\'s production. It was believed that the use of a cloche would double the vegetable harvest without increasing the number of fields and shorten the growing season by several weeks, making fresh vegetables available all year round.</p>\r\n\r\n<p>Farms were also built at schools, where children grew and harvested cabbage and other vegetables as part of their classes. They later became the new postwar generation of farmers.</p>\r\n\r\n<p>In addition, the consumption of cabbage and other vegetables during the war improved the diet of most citizens and reduced obesity. It was also thanks to citizen farms that the British people became so much healthier.</p>\r\n\r\n<p>アロットメント：イギリス市民農園の人気再復活</p>\r\n\r\n<p>Fifty Plants that Changed the Course of History by Bill Rose</p>\r\n\r\n<p>Wolfgang Eckert on Pixabay</p>\r\n\r\n<p>Andreas on Pixabay</p>', 'references': '', 'rating': 0.0, 'rating_count': None, 'published_date': dateutil.parser.parse("2023-07-03T02:53:18.372662+00:00"), 'updated_date': dateutil.parser.parse("2023-07-03T02:53:18.393911+00:00")} ) 
    knowledge_knowledge_128.author =  importer.locate_object(UserAccount, "id", UserAccount, "id", 1, {'id': 1, 'password': 'pbkdf2_sha256$600000$Q9AwSzFqEXF1ueS21sGGfz$rZo+NVruXU5Zf5vp00wtuwLn0Z333sn5NtvS8VWKqds=', 'last_login': dateutil.parser.parse("2023-06-30T06:03:10.086511+00:00"), 'is_superuser': True, 'email': 'yurinakanishi33@gmail.com', 'name': 'yuri', 'is_active': True, 'is_staff': True} ) 
    knowledge_knowledge_128 = importer.save_or_locate(knowledge_knowledge_128)

    knowledge_knowledge_129 = Knowledge()
    knowledge_knowledge_129.name = '飢饉は、リーダーの人徳が無いから起こる！'
    knowledge_knowledge_129.slug = 'desaster-due-to-the-emperors-lack-of-personal-virtue-jp'
    knowledge_knowledge_129.language =  importer.locate_object(Language, "id", Language, "id", 2, {'id': 2, 'name': 'jp'} ) 
    knowledge_knowledge_129.genre_for_url =  importer.locate_object(GenreForURL, "id", GenreForURL, "id", 1, {'id': 1, 'name': 'knowledge'} ) 
    knowledge_knowledge_129.type = 'knowledge'
    knowledge_knowledge_129.notesite_url = 'https://note.com/argumented_world/n/nd2898a6a9852'
    knowledge_knowledge_129.article =  importer.locate_object(Article, "id", Article, "id", 6228, {'id': 6228, 'excerpt': '飢饉は、リーダーの人徳が無いから起こる！', 'kicker': '飢饉は、リーダーの人徳が無いから起こる！', 'content': '<p>日本の歴史においては、その時代ならではの価値観がありました。今回は奈良、平安時代の特有の価値観を紹介します。 それは、飢饉や災害が起るのは、天皇の人徳がないからだというものです。干ばつによって飢饉が起ると、まずは、社寺で雨乞い（あまごい）を行なって、天に、雨を降らせてくれるように祈ります。しかし、それでも干ばつが収まらないと、天皇は大赦を行ないました。大赦とは、刑務所に入っている人を釈放することです。</p>\r\n\r\n<p>天皇が罪人の罪を許して解放する＝天皇に人徳がある＝干ばつが収まるという理屈です。</p>\r\n\r\n<p>こういった考え方は、中国から伝わってきたものです。古代中国では国を統治する者に徳がないと天災が起きると考えられており、これが、王朝を交代する主な理由となっていました。日本では王朝の交代までははなかったものの、このような中国の徳治政治の影響が強く、天災が起きるたびに、天皇は自分が不徳だからではないかと悩んでいたそうです。 もちろん、直接的な飢饉への対応も行なっています。主な対応は3つありました。1つめは、租庸調（税として納める米や布、特産品など）の軽減。2つめは、米だけでなく、干ばつに強い「雑穀」も積極的に栽培するように農民達に伝える。3つめは、人々へ米を給付する。です。「へー、昔ってこんな考え方をしていたんだ」と思う一方で、現代の私たちも、似たような考えを持っているのではないかな、とも思います。 首相や大統領が世の中を全て変えることは出来ないのに、あの首相やあの大統領を交代させれば世の中が良くなるんじゃないか？と思うことは誰にでもありますよね？</p>\r\n\r\n<p>『気候で読み解く日本の歴史―異常気象との攻防1400年』\u3000田家 康 (著)</p>\r\n\r\n<p>Free-Photos on Pixabay</p>\r\n\r\n<p>photoAC</p>', 'references': '', 'rating': 0.0, 'rating_count': None, 'published_date': dateutil.parser.parse("2023-07-03T02:53:18.372662+00:00"), 'updated_date': dateutil.parser.parse("2023-07-03T02:53:18.393911+00:00")} ) 
    knowledge_knowledge_129.author =  importer.locate_object(UserAccount, "id", UserAccount, "id", 1, {'id': 1, 'password': 'pbkdf2_sha256$600000$Q9AwSzFqEXF1ueS21sGGfz$rZo+NVruXU5Zf5vp00wtuwLn0Z333sn5NtvS8VWKqds=', 'last_login': dateutil.parser.parse("2023-06-30T06:03:10.086511+00:00"), 'is_superuser': True, 'email': 'yurinakanishi33@gmail.com', 'name': 'yuri', 'is_active': True, 'is_staff': True} ) 
    knowledge_knowledge_129 = importer.save_or_locate(knowledge_knowledge_129)

    knowledge_knowledge_130 = Knowledge()
    knowledge_knowledge_130.name = 'Desaster due to the emperors lack of personal virtue'
    knowledge_knowledge_130.slug = 'desaster-due-to-the-emperors-lack-of-personal-virtue'
    knowledge_knowledge_130.language =  importer.locate_object(Language, "id", Language, "id", 1, {'id': 1, 'name': 'en'} ) 
    knowledge_knowledge_130.genre_for_url =  importer.locate_object(GenreForURL, "id", GenreForURL, "id", 1, {'id': 1, 'name': 'knowledge'} ) 
    knowledge_knowledge_130.type = 'knowledge'
    knowledge_knowledge_130.notesite_url = 'https://note.com/argumented_world/n/nd2898a6a9852'
    knowledge_knowledge_130.article =  importer.locate_object(Article, "id", Article, "id", 6229, {'id': 6229, 'excerpt': 'Desaster due to the emperors lack of personal virtue', 'kicker': 'Desaster due to the emperors lack of personal virtue', 'content': '<p>In Japanese history, there were values unique to each period. In this issue, we would like to introduce a value unique to the Nara and Heian periods. that was "The reason why famine and disasters occurred was because of the lack of virtue of the emperor."</p>\r\n\r\n<p>When famine occurred due to drought, people first prayed for rain at shrines and temples, asking the heavens to send rain. However, when the drought persisted, the emperor granted a pardon. A pardon is the release of a person from prison.</p>\r\n\r\n<p>The theory is that the emperor forgives and releases sinners = the emperor is benevolent = the drought subsides.</p>\r\n\r\n<p>This way of thinking was introduced from China. In ancient China, it was believed that natural disasters would occur if the ruler of a country lacked virtue, and this was the main reason for changing dynasties.</p>\r\n\r\n<p>In Japan, although dynasties were not changed, the influence of this Chinese rule of virtue was so strong that whenever a natural disaster occurred, the emperor was worried that it was because he was immoral.</p>\r\n\r\n<p>Of course, he also responded directly to famine. The first was to reduce taxes on rice, cloth, special products, etc. The second was to encourage farmers to grow not only rice but also drought-resistant "minor grains" and the third was to provide rice to the people.</p>\r\n\r\n<p>I am amazed at the way people used to think, but I also wonder if we are thinking in a similar way today. Even though a prime minister or a president cannot change everything in the world, wouldn\'t the world be better off if we replaced that prime minister or that president? We all have thoughts like that, don\'t we?</p>\r\n\r\n<p>The History of Japan: 1400 Years of Attacks and Defenses against Extreme Weather" by Yasushi Taie (Author)</p>\r\n\r\n<p>Images used in this book</p>\r\n\r\n<p>Free-Photos on Pixabay</p>\r\n\r\n<p>photoAC</p>', 'references': '', 'rating': 0.0, 'rating_count': None, 'published_date': dateutil.parser.parse("2023-07-03T02:53:18.372662+00:00"), 'updated_date': dateutil.parser.parse("2023-07-03T02:53:18.393911+00:00")} ) 
    knowledge_knowledge_130.author =  importer.locate_object(UserAccount, "id", UserAccount, "id", 1, {'id': 1, 'password': 'pbkdf2_sha256$600000$Q9AwSzFqEXF1ueS21sGGfz$rZo+NVruXU5Zf5vp00wtuwLn0Z333sn5NtvS8VWKqds=', 'last_login': dateutil.parser.parse("2023-06-30T06:03:10.086511+00:00"), 'is_superuser': True, 'email': 'yurinakanishi33@gmail.com', 'name': 'yuri', 'is_active': True, 'is_staff': True} ) 
    knowledge_knowledge_130 = importer.save_or_locate(knowledge_knowledge_130)

    knowledge_knowledge_131 = Knowledge()
    knowledge_knowledge_131.name = ''
    knowledge_knowledge_131.slug = 'demerit-of-lightweight-plastic-bottle-jp'
    knowledge_knowledge_131.language =  importer.locate_object(Language, "id", Language, "id", 2, {'id': 2, 'name': 'jp'} ) 
    knowledge_knowledge_131.genre_for_url =  importer.locate_object(GenreForURL, "id", GenreForURL, "id", 1, {'id': 1, 'name': 'knowledge'} ) 
    knowledge_knowledge_131.type = 'knowledge'
    knowledge_knowledge_131.notesite_url = 'https://note.com/argumented_world/n/n0cd53bbbde5d'
    knowledge_knowledge_131.article =  importer.locate_object(Article, "id", Article, "id", 6230, {'id': 6230, 'excerpt': '', 'kicker': '', 'content': '<p>『いろはす』や『天然水』など、くしゃっと小さく潰すことが出来て、軽いペットボトルは便利です。このペットボトルは、軽い、捨てるときに潰しやすい、プラスチックの使用量が少ないなど、たくさんのいい点があります。 一方、欠点は、音が鳴るとか、薄すぎて安定性がないとかがあると思います。そして、もう一つ、心理学的な欠点があるかもしれません。それは、しっかりとしたペットボトルより、おいしさが減るかもしれないということです。</p>\r\n\r\n<p>海外の研究では、薄っぺらの容器から飲んだ水のほうが、堅くてしっかりした容器から飲んだ水よりおいしさが減って感じる、という研究結果があります。 以前、スプーンの重さでおいしさが変わるという記事を出しましたが、同じように、容器や入れ物の重さや質によって、美味しさの感じ方が変わるということです。資源の削減や軽量化か、おいしさのどっちを取るか、悩ましいところです。</p>\r\n\r\n<p>『「重い」と思うことは印象評価を変えるのか ―印象評価における重量刺激の主観量と物理量の影響―』\u3000阿部慶賀</p>\r\n\r\n<p>『Does Touch Affect Taste? The Perceptual Transfer of Product Container Haptic Cues』 (ARADHNA KRISHNA MAUREEN MORRIN)</p>\r\n\r\n<p>Photo by Serenity Mitchell on Unsplash</p>', 'references': '', 'rating': 0.0, 'rating_count': None, 'published_date': dateutil.parser.parse("2023-07-03T02:53:18.372662+00:00"), 'updated_date': dateutil.parser.parse("2023-07-03T02:53:18.393911+00:00")} ) 
    knowledge_knowledge_131.author =  importer.locate_object(UserAccount, "id", UserAccount, "id", 1, {'id': 1, 'password': 'pbkdf2_sha256$600000$Q9AwSzFqEXF1ueS21sGGfz$rZo+NVruXU5Zf5vp00wtuwLn0Z333sn5NtvS8VWKqds=', 'last_login': dateutil.parser.parse("2023-06-30T06:03:10.086511+00:00"), 'is_superuser': True, 'email': 'yurinakanishi33@gmail.com', 'name': 'yuri', 'is_active': True, 'is_staff': True} ) 
    knowledge_knowledge_131 = importer.save_or_locate(knowledge_knowledge_131)

    knowledge_knowledge_132 = Knowledge()
    knowledge_knowledge_132.name = ''
    knowledge_knowledge_132.slug = 'commonalities-between-pests-and-air-raids-jp'
    knowledge_knowledge_132.language =  importer.locate_object(Language, "id", Language, "id", 2, {'id': 2, 'name': 'jp'} ) 
    knowledge_knowledge_132.genre_for_url =  importer.locate_object(GenreForURL, "id", GenreForURL, "id", 1, {'id': 1, 'name': 'knowledge'} ) 
    knowledge_knowledge_132.type = 'knowledge'
    knowledge_knowledge_132.notesite_url = 'https://note.com/argumented_world/n/n6aeaecaef71b'
    knowledge_knowledge_132.article =  importer.locate_object(Article, "id", Article, "id", 6231, {'id': 6231, 'excerpt': '', 'kicker': '', 'content': '<p>フィロキセラと呼ばれる害虫はヨーロッパのブドウに悪夢をもたらしました。詳しくは、こちらの記事をご覧ください。</p>\r\n\r\n<p>一方でフィロキセラが良い方の面で役割を果たしたこともあります。今日、世界中のブドウ畑では、ブドウの木が整列して植えられています。 ブドウ畑には直線的に支柱が立っており、その支柱にワイヤーが張ってあります。そのワイヤーに沿ってブドウの木が植えられており、枝や幹をワイヤーに固定して木の形を整えながら育てます。しかし、フィロキセラ以前はそうではありませんでした。</p>\r\n\r\n<p>フィロキセラ以前は、枝取り法と呼ばれる方法でぶどうの木を増やしていました。枝取り法は、木を錯覚させて幹や枝から根っこを生やさせて、そこから切断することによって、株を増やすという方法です。土の中に埋めて、根っこが生えてきたら、切断して２つに分けたり、</p>\r\n\r\n<p>また別の方法では木の枝や幹の部分を傷付け、そこに土などを被せておいて、傷口から根っこが生えてきたところで切断して2つに分けたりします。なのでフィロキセラ以前はぶどうの木と木とがごちゃごちゃと不規則に植えられているのが当たり前でした。</p>\r\n\r\n<p>フィロキセラ以後は元々ヨーロッパで栽培していた品種の根はほぼ全滅してしまったので、ほとんどのブドウの木をフィロキセラに耐性のあるアメリカの品種に植え替えて、接ぎ木しなければなりませんでした。接ぎ木については、こちらの記事をご覧下さい。</p>\r\n\r\n<p>この時、新しく畑を作るに当たって接ぎ木の苗を自由に植えられたので、整列させて植えることができました。このことがトラクターの導入を可能にしトラクターが普及していき、ブドウの生産性が上がりました。</p>\r\n\r\n<p>空襲は街を焼け野原にします。一方で、空襲によって街が更地同然になったことで一から区画整理ができたことも事実です。まっすぐで通行しやすい道路と町並みは空襲があったからできたというのは、なんとも皮肉なことです。 ブドウ畑においても、同じようなことがあったというお話でした。</p>\r\n\r\n<p>ワインの歴史---自然の恵みと人間の知恵の歩み---山本 博 (著)</p>\r\n\r\n<p>Images used in this article</p>\r\n\r\n<p>David Bartus on Pexels</p>\r\n\r\n<p>Jerusha van Vliet on Unsplash</p>\r\n\r\n<p>flicker</p>', 'references': '', 'rating': 0.0, 'rating_count': None, 'published_date': dateutil.parser.parse("2023-07-03T02:53:18.372662+00:00"), 'updated_date': dateutil.parser.parse("2023-07-03T02:53:18.393911+00:00")} ) 
    knowledge_knowledge_132.author =  importer.locate_object(UserAccount, "id", UserAccount, "id", 1, {'id': 1, 'password': 'pbkdf2_sha256$600000$Q9AwSzFqEXF1ueS21sGGfz$rZo+NVruXU5Zf5vp00wtuwLn0Z333sn5NtvS8VWKqds=', 'last_login': dateutil.parser.parse("2023-06-30T06:03:10.086511+00:00"), 'is_superuser': True, 'email': 'yurinakanishi33@gmail.com', 'name': 'yuri', 'is_active': True, 'is_staff': True} ) 
    knowledge_knowledge_132 = importer.save_or_locate(knowledge_knowledge_132)

    knowledge_knowledge_133 = Knowledge()
    knowledge_knowledge_133.name = 'Commonalities between pests and air raids'
    knowledge_knowledge_133.slug = 'commonalities-between-pests-and-air-raids'
    knowledge_knowledge_133.language =  importer.locate_object(Language, "id", Language, "id", 1, {'id': 1, 'name': 'en'} ) 
    knowledge_knowledge_133.genre_for_url =  importer.locate_object(GenreForURL, "id", GenreForURL, "id", 1, {'id': 1, 'name': 'knowledge'} ) 
    knowledge_knowledge_133.type = 'knowledge'
    knowledge_knowledge_133.notesite_url = 'https://note.com/argumented_world/n/n6aeaecaef71b'
    knowledge_knowledge_133.article =  importer.locate_object(Article, "id", Article, "id", 6232, {'id': 6232, 'excerpt': 'Commonalities between pests and air raids', 'kicker': 'Commonalities between pests and air raids', 'content': "<p>A pest called phylloxera has caused a nightmare for European grapes.</p>\r\n\r\n<p>For more information, see this article.</p>\r\n\r\n<p>On the other hand, phylloxera has played a role on the positive side. Today, vineyards around the world are planted with vines in rows. The vineyards are planted with straight rows of posts, to which wires are attached. The vines are planted along those wires, and the branches and trunks are secured to the wires, shaping the vines as they grow.</p>\r\n\r\n<p>Before phylloxera, however, this was not the case.</p>\r\n\r\n<p>Method of Branch Removal</p>\r\n\r\n<p>Before phylloxera, grapevines were multiplied by a method called the branching method.</p>\r\n\r\n<p>The branching method is a method of increasing the number of plants by creating the illusion of a tree, causing roots to grow from the trunk and branches, and then cutting them off. The tree is buried in the soil, and when the roots grow, it is cut and divided in two, or</p>\r\n\r\n<p>Another method is to cut a branch or trunk of a tree, cover it with soil, and cut it in two when roots grow out of the wound.</p>\r\n\r\n<p>Therefore, before phylloxera, it was common for grapevines and vines to be planted in a jumbled and irregular manner.</p>\r\n\r\n<p>Role of Phylloxera</p>\r\n\r\n<p>After phylloxera, the roots of the varieties originally grown in Europe were almost completely wiped out, so most of the vines had to be replanted and grafted with American varieties that were resistant to phylloxera.For more information on grafting, please see this article.</p>\r\n\r\n<p>At this time, we were able to plant the grafted seedlings freely in the new field, so we were able to plant them in an aligned manner. This allowed for the introduction of tractors, which became more widespread and increased grape productivity.</p>\r\n\r\n<p>Air Raids</p>\r\n\r\n<p>Air raids leave towns burnt to the ground. On the other hand, it is also true that air raids left the city as if it were a vacant lot, allowing it to be rezoned from the ground up.</p>\r\n\r\n<p>It is ironic that straight, easy-to-pass roads and streets were created because of air raids.  The same thing happened in the vineyards.</p>\r\n\r\n<p>The History of Wine --- A History of Nature's Blessings and Human Wisdom --- Hiroshi Yamamoto (Author)</p>\r\n\r\n<p>David Bartus on Pexels</p>\r\n\r\n<p>Jerusha van Vliet on Unsplash</p>\r\n\r\n<p>flicker Hiroshi GoshimaFollow 取り木_07_取り付け後</p>\r\n\r\n<p>wikimedia commons 取り木</p>\r\n\r\n<p>Photo by Jerusha on Unsplash</p>", 'references': '', 'rating': 0.0, 'rating_count': None, 'published_date': dateutil.parser.parse("2023-07-03T02:53:18.372662+00:00"), 'updated_date': dateutil.parser.parse("2023-07-03T02:53:18.393911+00:00")} ) 
    knowledge_knowledge_133.author =  importer.locate_object(UserAccount, "id", UserAccount, "id", 1, {'id': 1, 'password': 'pbkdf2_sha256$600000$Q9AwSzFqEXF1ueS21sGGfz$rZo+NVruXU5Zf5vp00wtuwLn0Z333sn5NtvS8VWKqds=', 'last_login': dateutil.parser.parse("2023-06-30T06:03:10.086511+00:00"), 'is_superuser': True, 'email': 'yurinakanishi33@gmail.com', 'name': 'yuri', 'is_active': True, 'is_staff': True} ) 
    knowledge_knowledge_133 = importer.save_or_locate(knowledge_knowledge_133)

    knowledge_knowledge_134 = Knowledge()
    knowledge_knowledge_134.name = ''
    knowledge_knowledge_134.slug = 'coffee-is-from-islam-jp'
    knowledge_knowledge_134.language =  importer.locate_object(Language, "id", Language, "id", 2, {'id': 2, 'name': 'jp'} ) 
    knowledge_knowledge_134.genre_for_url =  importer.locate_object(GenreForURL, "id", GenreForURL, "id", 1, {'id': 1, 'name': 'knowledge'} ) 
    knowledge_knowledge_134.type = 'knowledge'
    knowledge_knowledge_134.notesite_url = 'https://note.com/argumented_world/n/n673cf001fd23'
    knowledge_knowledge_134.article =  importer.locate_object(Article, "id", Article, "id", 6233, {'id': 6233, 'excerpt': '', 'kicker': '', 'content': '<p>コーヒーは13世紀頃、中東で「なんか、この焦げ茶の豆を煮出した汁を飲むと眠くならないんだけど！」と人々の間で話題になりました。イスラム教の厳格な信者たちは、コーヒーはイスラムの教義に反するので禁止！として、コーヒーに関わる人々を弾圧しました。「大衆を堕落させる毒」とまで呼ばれたそうです。しかし、結局は世界に広まっていきました。</p>\r\n\r\n<p>イギリスは今では紅茶のイメージがありますが、18世紀半ばまでは、コーヒーがブームだったようです。17世紀にはロンドンを中心にコーヒーハウスが社交や議論、情報交換の場として栄えました。</p>\r\n\r\n<p>モカってコーヒーありますよね。「モカ」という名前は、イエメンのモカ港から輸出されたコーヒー豆をモカと呼んだことが由来です。</p>\r\n\r\n<p>あと、今ではコーヒーショップの名前にもなっているカルディ（Kaldi）は、コーヒーの苗木を見つけたとされる、エチオピアの伝説的な羊飼いからきています。</p>\r\n\r\n<p>『歴史を変えた6つの飲物 ビール、ワイン、蒸留酒、コーヒー、茶、コーラが語る もうひとつの世界史』トム スタンデージ (著)、 新井 崇嗣 (翻訳)</p>\r\n\r\n<p>Gideon PutraによるPixabayからの画像</p>\r\n\r\n<p>File:Yemen on the globe (Yemen centered).svg</p>\r\n\r\n<p>LocationEritreaPlusEthiopia.svg</p>\r\n\r\n<p>wikimedia commons KALDI Coffee Farm Nagoya Minato.JPG</p>', 'references': '', 'rating': 0.0, 'rating_count': None, 'published_date': dateutil.parser.parse("2023-07-03T02:53:18.372662+00:00"), 'updated_date': dateutil.parser.parse("2023-07-03T02:53:18.393911+00:00")} ) 
    knowledge_knowledge_134.author =  importer.locate_object(UserAccount, "id", UserAccount, "id", 1, {'id': 1, 'password': 'pbkdf2_sha256$600000$Q9AwSzFqEXF1ueS21sGGfz$rZo+NVruXU5Zf5vp00wtuwLn0Z333sn5NtvS8VWKqds=', 'last_login': dateutil.parser.parse("2023-06-30T06:03:10.086511+00:00"), 'is_superuser': True, 'email': 'yurinakanishi33@gmail.com', 'name': 'yuri', 'is_active': True, 'is_staff': True} ) 
    knowledge_knowledge_134 = importer.save_or_locate(knowledge_knowledge_134)

    knowledge_knowledge_135 = Knowledge()
    knowledge_knowledge_135.name = 'Coffee is from Islam'
    knowledge_knowledge_135.slug = 'coffee-is-from-islam'
    knowledge_knowledge_135.language =  importer.locate_object(Language, "id", Language, "id", 1, {'id': 1, 'name': 'en'} ) 
    knowledge_knowledge_135.genre_for_url =  importer.locate_object(GenreForURL, "id", GenreForURL, "id", 1, {'id': 1, 'name': 'knowledge'} ) 
    knowledge_knowledge_135.type = 'knowledge'
    knowledge_knowledge_135.notesite_url = 'https://note.com/argumented_world/n/n673cf001fd23'
    knowledge_knowledge_135.article =  importer.locate_object(Article, "id", Article, "id", 6234, {'id': 6234, 'excerpt': 'Coffee is from Islam', 'kicker': 'Coffee is from Islam', 'content': '<p>Around the 13th century, in the Middle East, coffee became a popular topic of conversation among people who said, "What\'s this, I drink the juice from boiling these dark brown beans, and it doesn\'t make me sleepy!" and people started talking about it.</p>\r\n\r\n<p>Strict adherents of Islam suppressed those who were involved with coffee, claiming that coffee was against the tenets of Islam and therefore banned! They even called it "the poison that corrupts the masses". However, it eventually spread throughout the world.</p>\r\n\r\n<p>Although England is now associated with tea, coffee was booming until the mid-18th century, and in the 17th century, coffee houses flourished in London and elsewhere as places for socializing, discussion, and the exchange of information.</p>\r\n\r\n<p>There is a coffee called mocha. The name "mocha" comes from the coffee beans exported from the Yemeni port of Mocha, which were called "mocha.</p>\r\n\r\n<p>Also, Kaldi, which is now the name of a coffee shop, comes from a legendary Ethiopian shepherd who is said to have found a coffee sapling.</p>\r\n\r\n<p>A History of the World in 6 Glasses by Tom Standage</p>\r\n\r\n<p>Gideon Putra by Pixabay</p>\r\n\r\n<p>File:Yemen on the globe (Yemen centered).svg</p>\r\n\r\n<p>LocationEritreaPlusEthiopia.svg</p>\r\n\r\n<p>wikimedia commons KALDI Coffee Farm Nagoya Minato.JPG</p>', 'references': '', 'rating': 0.0, 'rating_count': None, 'published_date': dateutil.parser.parse("2023-07-03T02:53:18.372662+00:00"), 'updated_date': dateutil.parser.parse("2023-07-03T02:53:18.393911+00:00")} ) 
    knowledge_knowledge_135.author =  importer.locate_object(UserAccount, "id", UserAccount, "id", 1, {'id': 1, 'password': 'pbkdf2_sha256$600000$Q9AwSzFqEXF1ueS21sGGfz$rZo+NVruXU5Zf5vp00wtuwLn0Z333sn5NtvS8VWKqds=', 'last_login': dateutil.parser.parse("2023-06-30T06:03:10.086511+00:00"), 'is_superuser': True, 'email': 'yurinakanishi33@gmail.com', 'name': 'yuri', 'is_active': True, 'is_staff': True} ) 
    knowledge_knowledge_135 = importer.save_or_locate(knowledge_knowledge_135)

    knowledge_knowledge_136 = Knowledge()
    knowledge_knowledge_136.name = 'コカの葉で高山病対策'
    knowledge_knowledge_136.slug = 'coca-leaves-for-altitude-sickness-jp'
    knowledge_knowledge_136.language =  importer.locate_object(Language, "id", Language, "id", 2, {'id': 2, 'name': 'jp'} ) 
    knowledge_knowledge_136.genre_for_url =  importer.locate_object(GenreForURL, "id", GenreForURL, "id", 1, {'id': 1, 'name': 'knowledge'} ) 
    knowledge_knowledge_136.type = 'knowledge'
    knowledge_knowledge_136.notesite_url = 'https://note.com/argumented_world/n/n1f5c27805675'
    knowledge_knowledge_136.article =  importer.locate_object(Article, "id", Article, "id", 6235, {'id': 6235, 'excerpt': 'コカの葉で高山病対策', 'kicker': 'コカの葉で高山病対策', 'content': '<p>南米のボリビア、ペルー、コロンビア、エクアドルは標高が高いです。標高3000m後半の場所に都市があったりします。なので、観光客はもちろんのこと、現地の人も高山病になるらしいです。 高山病対策として、彼らは日常的にコカの葉をそのまま噛んで食べたり、お茶にして飲んだりしています。</p>\r\n\r\n<p>コカの葉には疲労回復、眠気防止の効果もあり、伝統的に昔からある習慣だそうです。観光客も普通に食べれるそうです。（コカの日本への持ち込みは違法です。） ご存じの通り、コカとは、南米原産の植物で、コカインの原料になる植物です。葉っぱを食べたりする分にはコカインの濃度は高くないので、比較的安全だそうです。このコカの葉からコカインの成分を抽出して濃縮すると、麻薬になります。</p>\r\n\r\n<p>File:Folha de coca.jpg</p>', 'references': '', 'rating': 0.0, 'rating_count': None, 'published_date': dateutil.parser.parse("2023-07-03T02:53:18.372662+00:00"), 'updated_date': dateutil.parser.parse("2023-07-03T02:53:18.393911+00:00")} ) 
    knowledge_knowledge_136.author =  importer.locate_object(UserAccount, "id", UserAccount, "id", 1, {'id': 1, 'password': 'pbkdf2_sha256$600000$Q9AwSzFqEXF1ueS21sGGfz$rZo+NVruXU5Zf5vp00wtuwLn0Z333sn5NtvS8VWKqds=', 'last_login': dateutil.parser.parse("2023-06-30T06:03:10.086511+00:00"), 'is_superuser': True, 'email': 'yurinakanishi33@gmail.com', 'name': 'yuri', 'is_active': True, 'is_staff': True} ) 
    knowledge_knowledge_136 = importer.save_or_locate(knowledge_knowledge_136)

    knowledge_knowledge_137 = Knowledge()
    knowledge_knowledge_137.name = 'Coca leaves for altitude sickness'
    knowledge_knowledge_137.slug = 'coca-leaves-for-altitude-sickness'
    knowledge_knowledge_137.language =  importer.locate_object(Language, "id", Language, "id", 1, {'id': 1, 'name': 'en'} ) 
    knowledge_knowledge_137.genre_for_url =  importer.locate_object(GenreForURL, "id", GenreForURL, "id", 1, {'id': 1, 'name': 'knowledge'} ) 
    knowledge_knowledge_137.type = 'knowledge'
    knowledge_knowledge_137.notesite_url = 'https://note.com/argumented_world/n/n1f5c27805675'
    knowledge_knowledge_137.article =  importer.locate_object(Article, "id", Article, "id", 6236, {'id': 6236, 'excerpt': 'Coca leaves for altitude sickness', 'kicker': 'Coca leaves for altitude sickness', 'content': '<p>Bolivia, Peru, Colombia, and Ecuador in South America are at high altitudes. Some cities are located at altitudes in the latter half of 3,000 meters above sea level. Therefore, it is said that not only tourists but also local people suffer from altitude sickness.</p>\r\n\r\n<p>To combat altitude sickness, they routinely chew and eat coca leaves as they are, or make a tea and drink it. Coca leaves also relieve fatigue and prevent drowsiness, and it is said that this is a traditional custom that has existed for a long time. Tourists can also eat coca leaves as usual. (It is illegal to bring coca into many countries.)</p>\r\n\r\n<p>As you know, coca is a plant native to South America that is used to make cocaine. The concentration of cocaine is not high enough to eat the leaves, so it is relatively safe. When the coca components are extracted from the coca leaves and concentrated, it becomes a narcotic.</p>\r\n\r\n<p>File:Folha de coca.jpg</p>', 'references': '', 'rating': 0.0, 'rating_count': None, 'published_date': dateutil.parser.parse("2023-07-03T02:53:18.372662+00:00"), 'updated_date': dateutil.parser.parse("2023-07-03T02:53:18.393911+00:00")} ) 
    knowledge_knowledge_137.author =  importer.locate_object(UserAccount, "id", UserAccount, "id", 1, {'id': 1, 'password': 'pbkdf2_sha256$600000$Q9AwSzFqEXF1ueS21sGGfz$rZo+NVruXU5Zf5vp00wtuwLn0Z333sn5NtvS8VWKqds=', 'last_login': dateutil.parser.parse("2023-06-30T06:03:10.086511+00:00"), 'is_superuser': True, 'email': 'yurinakanishi33@gmail.com', 'name': 'yuri', 'is_active': True, 'is_staff': True} ) 
    knowledge_knowledge_137 = importer.save_or_locate(knowledge_knowledge_137)

    knowledge_knowledge_138 = Knowledge()
    knowledge_knowledge_138.name = ''
    knowledge_knowledge_138.slug = 'coca-cola-spread-around-the-world-with-american-soldiers-jp'
    knowledge_knowledge_138.language =  importer.locate_object(Language, "id", Language, "id", 2, {'id': 2, 'name': 'jp'} ) 
    knowledge_knowledge_138.genre_for_url =  importer.locate_object(GenreForURL, "id", GenreForURL, "id", 1, {'id': 1, 'name': 'knowledge'} ) 
    knowledge_knowledge_138.type = 'knowledge'
    knowledge_knowledge_138.notesite_url = 'https://note.com/argumented_world/n/ndd62eece95b4'
    knowledge_knowledge_138.article =  importer.locate_object(Article, "id", Article, "id", 6237, {'id': 6237, 'excerpt': '', 'kicker': '', 'content': '<p>第二次世界大戦が始まったとき、コカ・コーラはアメリカと、他数か国で販売されているだけでした。このコカ・コーラが、どのように世界に広まっていったのでしょうか。</p>\r\n\r\n<p>孤立主義を貫いていたアメリカですが、日本軍から真珠湾の攻撃を受けて、とうとう第二次世界大戦に参戦します。当時、コカ・コーラは兵士達の演習時に支給されており、ノンアルコールで元気が出る飲み物として人気の飲み物でした。アメリカが参戦すると、コカ・コーラ社の社長は「たとえどこで戦っていようとも、又我が社にどれだけ負担がかかろうとも、軍服を着た全ての者が5セントのコカコーラの瓶を飲めるようにしろ」と命令したそうです。</p>\r\n\r\n<p>そして、コカ・コーラ社の働きかけにより、コカ・コーラは不可欠な軍需品として認められ、1942年には砂糖の配給制をコカ・コーラ社だけが免除されました。他の砂糖を使った飲料メーカーが生産にを半分に落とさなければいけなかったのに対して、コカ・コーラ社は従来の生産を続けることができました。軍需品として認められたコカ・コーラでしたが、瓶づめされたコーラを基地に船で運ぶのはかなり大変でした。なので各地のアメリカ軍の基地にコカコーラ社の社員が派遣され、世界各地に64ものコーラの瓶詰め工場が建てられました。コカ・コーラの社員は軍の階級も与えられたため、「コカコーラ大佐」とも呼ばれたそうです。</p>\r\n\r\n<p>アメリカ兵は、コカ・コーラに強い愛国心を感じていました。ある兵士は、「なんのために戦っているのかと訊かれたら、ぼくらの半分はまたコーラを買うために、と答えるだろう」と言っています。そして、コカ・コーラは北アフリカ、ヨーロッパなど、アメリカ軍と共に世界に広まっていきました。各地で生産されたコーラは、基地の近くに住む民間人にも飲まれました。飲んだ人の多くはその味に魅了されました。 第２次世界大戦とアメリカ兵のおかげで、コカコーラは世界中に認められたのでした。</p>\r\n\r\n<p>『歴史を変えた6つの飲物 ビール、ワイン、蒸留酒、コーヒー、茶、コーラが語る もうひとつの世界史』トム スタンデージ (著)、 新井 崇嗣 (翻訳)</p>\r\n\r\n<p>Squirrel_photos on Pixabay</p>\r\n\r\n<p>Kevin TrotmanFollow ,Roll Up for a Coke Injection!</p>\r\n\r\n<p>hytam2Follow,Coca-Cola Bill Boards,You work better refreshed</p>\r\n\r\n<p>Jon WilliamsonFollow,Coca Cola - 19420817 Life</p>', 'references': '', 'rating': 0.0, 'rating_count': None, 'published_date': dateutil.parser.parse("2023-07-03T02:53:18.372662+00:00"), 'updated_date': dateutil.parser.parse("2023-07-03T02:53:18.393911+00:00")} ) 
    knowledge_knowledge_138.author =  importer.locate_object(UserAccount, "id", UserAccount, "id", 1, {'id': 1, 'password': 'pbkdf2_sha256$600000$Q9AwSzFqEXF1ueS21sGGfz$rZo+NVruXU5Zf5vp00wtuwLn0Z333sn5NtvS8VWKqds=', 'last_login': dateutil.parser.parse("2023-06-30T06:03:10.086511+00:00"), 'is_superuser': True, 'email': 'yurinakanishi33@gmail.com', 'name': 'yuri', 'is_active': True, 'is_staff': True} ) 
    knowledge_knowledge_138 = importer.save_or_locate(knowledge_knowledge_138)

    knowledge_knowledge_139 = Knowledge()
    knowledge_knowledge_139.name = 'Coca-Cola spread around the world with American soldiers'
    knowledge_knowledge_139.slug = 'coca-cola-spread-around-the-world-with-american-soldiers'
    knowledge_knowledge_139.language =  importer.locate_object(Language, "id", Language, "id", 1, {'id': 1, 'name': 'en'} ) 
    knowledge_knowledge_139.genre_for_url =  importer.locate_object(GenreForURL, "id", GenreForURL, "id", 1, {'id': 1, 'name': 'knowledge'} ) 
    knowledge_knowledge_139.type = 'knowledge'
    knowledge_knowledge_139.notesite_url = 'https://note.com/argumented_world/n/ndd62eece95b4'
    knowledge_knowledge_139.article =  importer.locate_object(Article, "id", Article, "id", 6238, {'id': 6238, 'excerpt': 'Coca-Cola spread around the world with American soldiers', 'kicker': 'Coca-Cola spread around the world with American soldiers', 'content': '<p>When World War II began, Coca-Cola was only sold in the United States and a few other countries. How did Coca-Cola spread around the world? The United States was an isolationist country.The U.S., which had remained isolationist, finally entered World War II after the attack on Pearl Harbor by the Japanese. At the time, Coca-Cola was supplied to soldiers during exercises and was a popular non-alcoholic, energizing drink. When the U.S. entered the war, the president of the Coca-Cola Company ordered, "Every man in uniform, no matter where he is fighting or how much it costs our company, should be able to drink a five-cent bottle of Coca-Cola.</p>\r\n\r\n<p>Then, at the urging of the Coca-Cola Company, Coca-Cola was recognized as an essential military product, and in 1942, Coca-Cola was the only company exempted from sugar rationing. While other sugar-based beverage manufacturers had to cut their production in half, Coca-Cola was able to continue its traditional production.</p>\r\n\r\n<p>Although Coca-Cola was recognized as a military product, it was very difficult to ship bottled cola to bases. Therefore, Coca-Cola employees were sent to various U.S. military bases, and as many as 64 Coke bottling plants were built around the world. Coca-Cola employees were also given military rank, so they were also called "Colonel Coca-Cola.</p>\r\n\r\n<p>American soldiers felt a strong sense of patriotism toward Coca-Cola. One soldier said, "If you ask me what we are fighting for, half of us would say to buy another Coke. Coca-Cola spread around the world with the U.S. Army, including North Africa and Europe. Coke produced in various locations was also consumed by civilians living near the bases. Many who drank it were captivated by its taste. Thanks to World War II and American soldiers, Coca-Cola was recognized around the world.</p>\r\n\r\n<p>A History of the World in 6 Glasses by Tom Standage</p>\r\n\r\n<p>Squirrel_photos on Pixabay</p>\r\n\r\n<p>Kevin TrotmanFollow ,Roll Up for a Coke Injection!</p>\r\n\r\n<p>hytam2Follow,Coca-Cola Bill Boards,You work better refreshed</p>\r\n\r\n<p>Jon WilliamsonFollow,Coca Cola - 19420817 Life</p>', 'references': '', 'rating': 0.0, 'rating_count': None, 'published_date': dateutil.parser.parse("2023-07-03T02:53:18.372662+00:00"), 'updated_date': dateutil.parser.parse("2023-07-03T02:53:18.393911+00:00")} ) 
    knowledge_knowledge_139.author =  importer.locate_object(UserAccount, "id", UserAccount, "id", 1, {'id': 1, 'password': 'pbkdf2_sha256$600000$Q9AwSzFqEXF1ueS21sGGfz$rZo+NVruXU5Zf5vp00wtuwLn0Z333sn5NtvS8VWKqds=', 'last_login': dateutil.parser.parse("2023-06-30T06:03:10.086511+00:00"), 'is_superuser': True, 'email': 'yurinakanishi33@gmail.com', 'name': 'yuri', 'is_active': True, 'is_staff': True} ) 
    knowledge_knowledge_139 = importer.save_or_locate(knowledge_knowledge_139)

    knowledge_knowledge_140 = Knowledge()
    knowledge_knowledge_140.name = ''
    knowledge_knowledge_140.slug = 'coca-cola-is-an-american-symbol-jp'
    knowledge_knowledge_140.language =  importer.locate_object(Language, "id", Language, "id", 2, {'id': 2, 'name': 'jp'} ) 
    knowledge_knowledge_140.genre_for_url =  importer.locate_object(GenreForURL, "id", GenreForURL, "id", 1, {'id': 1, 'name': 'knowledge'} ) 
    knowledge_knowledge_140.type = 'knowledge'
    knowledge_knowledge_140.notesite_url = 'https://note.com/argumented_world/n/n6a5b61040e39'
    knowledge_knowledge_140.article =  importer.locate_object(Article, "id", Article, "id", 6239, {'id': 6239, 'excerpt': '', 'kicker': '', 'content': '<p>第2次世界大戦後のアメリカとソ連の冷戦の時代は、民主主義VS共産主義の時代でもありました。アメリカ生まれのコカ・コーラは、世界に瓶詰め工場を広げグローバル化を進めていました。コカ・コーラは自由、民主主義、資本主義を表すものとなっていました。 共産主義の支持者達は、資本主義の象徴であるコカ・コーラをやり玉に挙げ、バッシングを行ないました。彼らは、コカ・コーラが広まるとアメリカ的な価値観が広がり、ヨーロッパ各国が汚染されると主張しました。コカコーラを飲むとガンになる、不妊になる、髪の毛が一晩で真っ白になる、等のデマを流しました。</p>\r\n\r\n<p>ちなみに、ビール会社、ミネラルウォーター会社、清涼飲料水業者は、コカコーラに市場を独占されないようにするために共産主義側についてコカコーラの抗議運動を行ないました。1948年度のコカ・コーラ社の総会で掲げられたプラカードには、以下のように書かれていたそうです。「共産主義者について考えるとき、 我々の頭には鉄のカーテンが思い浮かぶ。 だが、共産主義者が民主主義について考えるとき、彼らの頭に思い浮かぶのはコカ・コーラだ」</p>\r\n\r\n<p>そして、1989年にベルリンの壁が崩れ、東ヨーロッパの共産主義体制が崩壊していき、1991にはソ連も崩壊します。ベルリンの壁を越えて西側に流れ込んだ東ドイツの人々が一番に買い求めた物は、ハイ・ファイ機器、 テレビ、冷蔵庫、食料など、そして箱入りのコカ・コーラでした。ある西ドイツ人は、「我々はやってきた人々をバナナ、コカ・コーラ、花など、西側の消費者義の味がするもので歓迎した」と言ったそうです。</p>\r\n\r\n<p>2000年頃に起きた中東戦争では、コカ・コーラなどのアメリカの清涼飲料水への攻撃を通して反アメリカ主義を主張する運動が起りました。タイのイスラム教の若者達は、コカ・コーラを地面に投げつけてぶちまけるという抗議行動を行ないました。一方で、2003年にアメリカ軍はバクダッドのサダム・フセイン宮殿を占拠した際にバーベキューを行い、ハンバーガ とホットドッグを食べ、そしてコカ・コーラを飲みました。自由、資本主義、グローバル化などなど、コカコーラはアメリカ的なものの象徴でした。</p>\r\n\r\n<p>『歴史を変えた6つの飲物 ビール、ワイン、蒸留酒、コーヒー、茶、コーラが語る もうひとつの世界史』トム スタンデージ (著)、 新井 崇嗣 (翻訳)</p>\r\n\r\n<p>PexelsのArtem Beliaikinによる写真</p>', 'references': '', 'rating': 0.0, 'rating_count': None, 'published_date': dateutil.parser.parse("2023-07-03T02:53:18.372662+00:00"), 'updated_date': dateutil.parser.parse("2023-07-03T02:53:18.393911+00:00")} ) 
    knowledge_knowledge_140.author =  importer.locate_object(UserAccount, "id", UserAccount, "id", 1, {'id': 1, 'password': 'pbkdf2_sha256$600000$Q9AwSzFqEXF1ueS21sGGfz$rZo+NVruXU5Zf5vp00wtuwLn0Z333sn5NtvS8VWKqds=', 'last_login': dateutil.parser.parse("2023-06-30T06:03:10.086511+00:00"), 'is_superuser': True, 'email': 'yurinakanishi33@gmail.com', 'name': 'yuri', 'is_active': True, 'is_staff': True} ) 
    knowledge_knowledge_140 = importer.save_or_locate(knowledge_knowledge_140)

    knowledge_knowledge_141 = Knowledge()
    knowledge_knowledge_141.name = 'Coca-Cola is an American symbol'
    knowledge_knowledge_141.slug = 'coca-cola-is-an-american-symbol'
    knowledge_knowledge_141.language =  importer.locate_object(Language, "id", Language, "id", 1, {'id': 1, 'name': 'en'} ) 
    knowledge_knowledge_141.genre_for_url =  importer.locate_object(GenreForURL, "id", GenreForURL, "id", 1, {'id': 1, 'name': 'knowledge'} ) 
    knowledge_knowledge_141.type = 'knowledge'
    knowledge_knowledge_141.notesite_url = 'https://note.com/argumented_world/n/n6a5b61040e39'
    knowledge_knowledge_141.article =  importer.locate_object(Article, "id", Article, "id", 6240, {'id': 6240, 'excerpt': 'Coca-Cola is an American symbol', 'kicker': 'Coca-Cola is an American symbol', 'content': '<p>The post-World War II Cold War era between the United States and the Soviet Union was also an era of democracy vs. communism. Coca-Cola, born in the U.S., was expanding its bottling plants around the world and globalizing its operations. And coca-Cola had come to represent freedom, democracy, and capitalism.</p>\r\n\r\n<p>Supporters of communism made an example of Coca-Cola, a symbol of capitalism, and bashed it. They argued that the spread of Coca-Cola would spread American values and contaminate European countries. They spread false rumors that drinking Coca-Cola would cause cancer, infertility, and overnight white hair.</p>\r\n\r\n<p>Incidentally, beer companies, mineral water companies, and soft drink companies joined the communist side in protesting Coca-Cola in order to prevent Coca-Cola from monopolizing the market.</p>\r\n\r\n<p>A placard held up at the Coca-Cola Company\'s general meeting in 1948 read; When we think of the communists, the Iron Curtain comes to our minds. But when communists think of democracy, they think of Coca-Cola. Then, in 1989, the Berlin Wall fell and the communist regimes in Eastern Europe collapsed, as did the Soviet Union in 1991.</p>\r\n\r\n<p>The first things East Germans bought as they streamed over the Berlin Wall to the West were hi-fi equipment, televisions, refrigerators, food, etc., and boxes of Coca-Cola. As one West German said "We welcomed them with bananas, Coca-Cola, flowers, and other things that tasted like Western consumerism.</p>\r\n\r\n<p>The Middle East wars around 2000 led to anti-Americanist movements through attacks on American soft drinks such as Coca-Cola. Muslim youths in Thailand protested by throwing Coca-Cola on the ground. Meanwhile, American troops barbecued, ate hamburgers and hot dogs, and drank Coca-Cola during the 2003 occupation of Saddam Hussein\'s palace in Baghdad. Coca-Cola was a symbol of all things American: freedom, capitalism, globalization, and so on.</p>\r\n\r\n<p>A History of the World in 6 Glasses by Tom Standage</p>\r\n\r\n<p>Pexels Artem Beliaikin</p>', 'references': '', 'rating': 0.0, 'rating_count': None, 'published_date': dateutil.parser.parse("2023-07-03T02:53:18.372662+00:00"), 'updated_date': dateutil.parser.parse("2023-07-03T02:53:18.393911+00:00")} ) 
    knowledge_knowledge_141.author =  importer.locate_object(UserAccount, "id", UserAccount, "id", 1, {'id': 1, 'password': 'pbkdf2_sha256$600000$Q9AwSzFqEXF1ueS21sGGfz$rZo+NVruXU5Zf5vp00wtuwLn0Z333sn5NtvS8VWKqds=', 'last_login': dateutil.parser.parse("2023-06-30T06:03:10.086511+00:00"), 'is_superuser': True, 'email': 'yurinakanishi33@gmail.com', 'name': 'yuri', 'is_active': True, 'is_staff': True} ) 
    knowledge_knowledge_141 = importer.save_or_locate(knowledge_knowledge_141)

    knowledge_knowledge_142 = Knowledge()
    knowledge_knowledge_142.name = '隊長は死にやすいし、中間管理職は大変'
    knowledge_knowledge_142.slug = 'captains-are-prone-to-death-and-middle-managers-have-a-hard-time-jp'
    knowledge_knowledge_142.language =  importer.locate_object(Language, "id", Language, "id", 2, {'id': 2, 'name': 'jp'} ) 
    knowledge_knowledge_142.genre_for_url =  importer.locate_object(GenreForURL, "id", GenreForURL, "id", 1, {'id': 1, 'name': 'knowledge'} ) 
    knowledge_knowledge_142.type = 'knowledge'
    knowledge_knowledge_142.notesite_url = 'https://note.com/argumented_world/n/nf131bf098d2a'
    knowledge_knowledge_142.article =  importer.locate_object(Article, "id", Article, "id", 6241, {'id': 6241, 'excerpt': '隊長は死にやすいし、中間管理職は大変', 'kicker': '隊長は死にやすいし、中間管理職は大変', 'content': '<p>皆さんは、一般の兵士とその隊長のどっちの方が死亡率が高いと思われますか？隊長の方が死亡率が高いといわれています。というのは、隊長は一般の兵士達を先導する役なので、自分が先頭を切って戦わなければいけないからです。隊長がもっと上の位に昇進して本部で作戦を練るような立場になると、死亡率は低下します。ちょうど真ん中の立場の人が死にやすいということですね。</p>\r\n\r\n<p>第一次世界大戦の時の実際の映像と証言を編集した映画『彼らは生きていた』では、訓練を終えたイギリスの兵士の1人が、船でヨーロッパの戦地に向かうときにこう言っています。「下士官（かしかん、兵の一つ上の位）の犠牲者が多かったので、昇進は嬉しくなかった。だからトイレで袖章を外し窓から投げ捨てた。」 一般兵の中でも、下司官が死にやすいという情報は広まっていたのでしょうか。また『将校の死傷率からわかる日露戦争の実態\u3000(荒木肇）』のサイトによると、日露戦争では突撃単位が大隊だったため、、歩兵少佐（大隊長）と大尉（中隊長）の死亡率が高かったそうです。（戦死して名誉進級した位も含まれている可能性もあるようです。）</p>\r\n\r\n<p>以下、引用させて頂きます。</p>\r\n\r\n<p>隊長が死にやすいという現象は、企業のサラリーマンでも同じだと思います。 中間管理職が一番ストレスがかかるという話は良く耳にします。昇進して仕事が増えた中で潰れてしまうこともあります。会社での昇進はいいこともありますが、このようなデメリットもあるかもしれません。</p>\r\n\r\n<p>Defence-ImageryによるPixabayからの画像</p>\r\n\r\n<p>将校の死傷率からわかる日露戦争の実態\u3000(荒木肇）</p>\r\n\r\n<p>http://okigunnji.com/post-967/</p>\r\n\r\n<p>They shall not grow old</p>', 'references': '', 'rating': 0.0, 'rating_count': None, 'published_date': dateutil.parser.parse("2023-07-03T02:53:18.372662+00:00"), 'updated_date': dateutil.parser.parse("2023-07-03T02:53:18.393911+00:00")} ) 
    knowledge_knowledge_142.author =  importer.locate_object(UserAccount, "id", UserAccount, "id", 1, {'id': 1, 'password': 'pbkdf2_sha256$600000$Q9AwSzFqEXF1ueS21sGGfz$rZo+NVruXU5Zf5vp00wtuwLn0Z333sn5NtvS8VWKqds=', 'last_login': dateutil.parser.parse("2023-06-30T06:03:10.086511+00:00"), 'is_superuser': True, 'email': 'yurinakanishi33@gmail.com', 'name': 'yuri', 'is_active': True, 'is_staff': True} ) 
    knowledge_knowledge_142 = importer.save_or_locate(knowledge_knowledge_142)

    knowledge_knowledge_143 = Knowledge()
    knowledge_knowledge_143.name = 'Captains are prone to death and middle managers have a hard time'
    knowledge_knowledge_143.slug = 'captains-are-prone-to-death-and-middle-managers-have-a-hard-time'
    knowledge_knowledge_143.language =  importer.locate_object(Language, "id", Language, "id", 1, {'id': 1, 'name': 'en'} ) 
    knowledge_knowledge_143.genre_for_url =  importer.locate_object(GenreForURL, "id", GenreForURL, "id", 1, {'id': 1, 'name': 'knowledge'} ) 
    knowledge_knowledge_143.type = 'knowledge'
    knowledge_knowledge_143.notesite_url = 'https://note.com/argumented_world/n/nf131bf098d2a'
    knowledge_knowledge_143.article =  importer.locate_object(Article, "id", Article, "id", 6242, {'id': 6242, 'excerpt': 'Captains are prone to death and middle managers have a hard time', 'kicker': 'Captains are prone to death and middle managers have a hard time', 'content': '<p>Who do you think has a higher mortality rate, the common soldier or his captain? It is said that the death rate is higher for the captain. The reason is that the captain is the one who leads the soldiers, so he has to fight at the front of the line.</p>\r\n\r\n<p>When the captain is promoted to a higher rank and becomes in a position to plan operations at headquarters, the mortality rate declines. So people in the middle are more likely to die.</p>\r\n\r\n<p>------In the film "They shall not grow old", compiled from actual footage and testimonies from World War I, one of the British soldiers who had completed his training said this as he was heading to the war zone in Europe on a ship.</p>\r\n\r\n<p>He said, "I wasn\'t happy about the promotion because there were so many casualties among the privates. So I took off my sleeve badge in the bathroom and threw it out the window." Was there widespread information among the general soldiers that junior officers were more likely to die?</p>\r\n\r\n<p>According to the website of "Hajime Araki", the death rate of lieutenant commander and captains was high because the assault unit in the Russo-Japanese War was a battalion. (It is possible that the record also includes the ranks that were honorably advanced after being killed in action.)</p>\r\n\r\n<p>The phenomenon that captains are prone to death is the same in the case of businessmen in companies. We often hear that middle managers are the most stressed. They can be crushed in the midst of a promotion and increased workload. Promotion in a company can be a good thing, but it may also have these disadvantages.</p>\r\n\r\n<p>Defence-Imagery Pixabay</p>\r\n\r\n<p>They shall not grow old</p>\r\n\r\n<p>将校の死傷率からわかる日露戦争の実態\u3000by Hajime Araki</p>\r\n\r\n<p>http://okigunnji.com/post-967/</p>', 'references': '', 'rating': 0.0, 'rating_count': None, 'published_date': dateutil.parser.parse("2023-07-03T02:53:18.372662+00:00"), 'updated_date': dateutil.parser.parse("2023-07-03T02:53:18.393911+00:00")} ) 
    knowledge_knowledge_143.author =  importer.locate_object(UserAccount, "id", UserAccount, "id", 1, {'id': 1, 'password': 'pbkdf2_sha256$600000$Q9AwSzFqEXF1ueS21sGGfz$rZo+NVruXU5Zf5vp00wtuwLn0Z333sn5NtvS8VWKqds=', 'last_login': dateutil.parser.parse("2023-06-30T06:03:10.086511+00:00"), 'is_superuser': True, 'email': 'yurinakanishi33@gmail.com', 'name': 'yuri', 'is_active': True, 'is_staff': True} ) 
    knowledge_knowledge_143 = importer.save_or_locate(knowledge_knowledge_143)

    knowledge_knowledge_144 = Knowledge()
    knowledge_knowledge_144.name = '歴史における頭脳労働マウンティング'
    knowledge_knowledge_144.slug = 'brain-labor-mounting-in-history-jp'
    knowledge_knowledge_144.language =  importer.locate_object(Language, "id", Language, "id", 2, {'id': 2, 'name': 'jp'} ) 
    knowledge_knowledge_144.genre_for_url =  importer.locate_object(GenreForURL, "id", GenreForURL, "id", 1, {'id': 1, 'name': 'knowledge'} ) 
    knowledge_knowledge_144.type = 'knowledge'
    knowledge_knowledge_144.notesite_url = 'https://note.com/argumented_world/n/n693b385ea1c5'
    knowledge_knowledge_144.article =  importer.locate_object(Article, "id", Article, "id", 6243, {'id': 6243, 'excerpt': '歴史における頭脳労働マウンティング', 'kicker': '歴史における頭脳労働マウンティング', 'content': '<p>昔から今まで、動かない仕事をする人（いわゆる頭脳労働者）は高賃金で、体力的にも楽です。</p>\r\n\r\n<p>なので「動かないで仕事してるよ？」アピールをしたくなるものです。今回は、歴史における頭脳労働者のマウンティングを紹介します。</p>\r\n\r\n<p>ストッキングは激しく動くと破けてしまうので、ストッキングをはいていると頭脳労働者アピールになりました。特にシルクのストッキングは破けやすく高級なことから、エリートの女性たちに人気でした。</p>\r\n\r\n<p>ハイヒールを履くことも、わざと動きにくい靴を履くことで頭脳労働者アピールになりました。</p>\r\n\r\n<p>爪を伸ばすと、物を運んだりスコップとかの道具を持って作業することが難しくなります。 なので中国では爪を伸ばす男=頭脳労働の証という文化が生まれました。現在でも、裕福になれるようにと願いを込めて男性の小指の爪を伸ばす風習が残っています。</p>\r\n\r\n<p>肌が白い＝日焼けしていない=屋内で働いている＝頭脳労働者ということです。 ヨーロッパでは、古代から化粧としておしろいを付ける文化がありました。中世～1９世紀頃まではおしろいの原料に発色をよくするために鉛が使われていたので、多くの人が鉛中毒になりました。鉛は人体にとって毒です。</p>\r\n\r\n<p>わざと自分の体を不便にして、肉体労働できませんよアピールをすることは、現代の革靴、スーツ、ネクタイの格好につながるものがありそうです。</p>\r\n\r\n<p>※今回紹介した文化風習には、頭脳労働者のアピール以外の目的もあります。</p>\r\n\r\n<p>PexelsのPixabayによる写真</p>\r\n\r\n<p>20世紀の世界Bー745</p>', 'references': '', 'rating': 0.0, 'rating_count': None, 'published_date': dateutil.parser.parse("2023-07-03T02:53:18.372662+00:00"), 'updated_date': dateutil.parser.parse("2023-07-03T02:53:18.393911+00:00")} ) 
    knowledge_knowledge_144.author =  importer.locate_object(UserAccount, "id", UserAccount, "id", 1, {'id': 1, 'password': 'pbkdf2_sha256$600000$Q9AwSzFqEXF1ueS21sGGfz$rZo+NVruXU5Zf5vp00wtuwLn0Z333sn5NtvS8VWKqds=', 'last_login': dateutil.parser.parse("2023-06-30T06:03:10.086511+00:00"), 'is_superuser': True, 'email': 'yurinakanishi33@gmail.com', 'name': 'yuri', 'is_active': True, 'is_staff': True} ) 
    knowledge_knowledge_144 = importer.save_or_locate(knowledge_knowledge_144)

    knowledge_knowledge_145 = Knowledge()
    knowledge_knowledge_145.name = 'Brain Labor Mounting in History'
    knowledge_knowledge_145.slug = 'brain-labor-mounting-in-history'
    knowledge_knowledge_145.language =  importer.locate_object(Language, "id", Language, "id", 1, {'id': 1, 'name': 'en'} ) 
    knowledge_knowledge_145.genre_for_url =  importer.locate_object(GenreForURL, "id", GenreForURL, "id", 1, {'id': 1, 'name': 'knowledge'} ) 
    knowledge_knowledge_145.type = 'knowledge'
    knowledge_knowledge_145.notesite_url = 'https://note.com/argumented_world/n/n693b385ea1c5'
    knowledge_knowledge_145.article =  importer.locate_object(Article, "id", Article, "id", 6244, {'id': 6244, 'excerpt': 'Brain Labor Mounting in History', 'kicker': 'Brain Labor Mounting in History', 'content': '<p>From time immemorial until now, people who work without moving (so-called brain workers) are well paid and physically comfortable. So it is tempting to say, "I work without moving?" appeal. In this article, I will introduce the mounting number of brain workers in history.</p>\r\n\r\n<p><h2 className={h2Style}>Stockings and High Heels</h2></p>\r\n\r\n<p>Stockings were torn when moving violently, so wearing stockings was an appeal to brain workers. Silk stockings were especially popular among elite women because they were easy to tear and luxurious.Wearing high heels also became a  brain worker appeal by deliberately wearing shoes that were hard to move in.</p>\r\n\r\n<p>Extending fingernails makes it difficult to carry things or work with tools such as shovels. Therefore, a culture emerged in China that a man with long nails equal a sign of brain labor. Even today, there is still a custom of men extending their pinky fingernails in the hope that they will become wealthy.</p>\r\n\r\n<p>White skin is no tanning. No tanning is associated working indoors. working indoors connects brain worker. In Europe, there has been a culture of wearing face powder as makeup since ancient times. From the Middle Ages to around the 19th century, lead was used as an ingredient of face powder to improve coloration, which led to lead poisoning in many people. Lead is poisonous to the human body.</p>\r\n\r\n<p>To deliberately make one\'s body inconvenient to show that one cannot do physical labor may have something to do with today\'s leather shoes, suit, and tie attire. (The cultural customs introduced in this article also have a purpose other than appealing to brain workers.)</p>\r\n\r\n<p>Pexels by Pixabay</p>\r\n\r\n<p>The world of 20th century (Asahi publisher) B-745</p>', 'references': '', 'rating': 0.0, 'rating_count': None, 'published_date': dateutil.parser.parse("2023-07-03T02:53:18.372662+00:00"), 'updated_date': dateutil.parser.parse("2023-07-03T02:53:18.393911+00:00")} ) 
    knowledge_knowledge_145.author =  importer.locate_object(UserAccount, "id", UserAccount, "id", 1, {'id': 1, 'password': 'pbkdf2_sha256$600000$Q9AwSzFqEXF1ueS21sGGfz$rZo+NVruXU5Zf5vp00wtuwLn0Z333sn5NtvS8VWKqds=', 'last_login': dateutil.parser.parse("2023-06-30T06:03:10.086511+00:00"), 'is_superuser': True, 'email': 'yurinakanishi33@gmail.com', 'name': 'yuri', 'is_active': True, 'is_staff': True} ) 
    knowledge_knowledge_145 = importer.save_or_locate(knowledge_knowledge_145)

    knowledge_knowledge_146 = Knowledge()
    knowledge_knowledge_146.name = 'ボトックス注射は、毒を注射している'
    knowledge_knowledge_146.slug = 'botox-injection-jp'
    knowledge_knowledge_146.language =  importer.locate_object(Language, "id", Language, "id", 2, {'id': 2, 'name': 'jp'} ) 
    knowledge_knowledge_146.genre_for_url =  importer.locate_object(GenreForURL, "id", GenreForURL, "id", 1, {'id': 1, 'name': 'knowledge'} ) 
    knowledge_knowledge_146.type = 'knowledge'
    knowledge_knowledge_146.notesite_url = 'https://note.com/argumented_world/n/n839e48883344'
    knowledge_knowledge_146.article =  importer.locate_object(Article, "id", Article, "id", 6245, {'id': 6245, 'excerpt': 'ボトックス注射は、毒を注射している', 'kicker': 'ボトックス注射は、毒を注射している', 'content': '<p>ボトックス注射って聞いたことありますよね？ 美容整形手術で、眉間や目尻のしわとりをするのに使われるのが有名です。また、筋肉が緊張してしまう病気の治療にも使われます。このボトックス注射は、毒を注射しています。毒の名前は、ボツリヌス菌がつくるボツリヌストキシンと呼ばれるタンパク質毒素です。ボツリヌス菌は食中毒の原因菌として知られており、土や海、湖、川などの泥や砂のなかに生息しています。ボツリヌストキシンは極めて毒性が強いことでも有名で、神経や筋肉の麻痺を起こします。人がボツリヌス菌の食中毒にかかると最悪の場合、呼吸麻痺が起り、死んでしまいます。</p>\r\n\r\n<p>ボツリヌストキシンは神経に取り込まれて、その筋肉をマヒさせることで食中毒を起こしますが、その性質を医療に応用したのがボトックス注射です。 筋肉をマヒさせるということは、言い方を変えれば、注射された筋肉を脱力させて緩める効果があるともいえます。 ボツリヌストキシンを、固くなってしまった筋肉に直接注射することで、筋肉の硬直を止めることができます。また、痙攣してしまっている筋肉にも効果があります。</p>\r\n\r\n<p>美容整形においては、主にしわ取りに使われます。笑ったときにしわが出来るのは、表情筋が伸び縮みしているからです。その表情筋をマヒさせることによって、しわを取ります。ボトックス注射でしわ取りをすると、笑ったときなどに無表情に見えてしまうこともあるので、やりすぎには注意をしましょう。医療現場では、微量を用いるため、用量設定を誤らない限りにおいては安全だそうです。毒も、使いようによっては薬となるんだな、と思いました。</p>\r\n\r\n<p>Thirdman on Pexels</p>', 'references': '', 'rating': 0.0, 'rating_count': None, 'published_date': dateutil.parser.parse("2023-07-03T02:53:18.372662+00:00"), 'updated_date': dateutil.parser.parse("2023-07-03T02:53:18.393911+00:00")} ) 
    knowledge_knowledge_146.author =  importer.locate_object(UserAccount, "id", UserAccount, "id", 1, {'id': 1, 'password': 'pbkdf2_sha256$600000$Q9AwSzFqEXF1ueS21sGGfz$rZo+NVruXU5Zf5vp00wtuwLn0Z333sn5NtvS8VWKqds=', 'last_login': dateutil.parser.parse("2023-06-30T06:03:10.086511+00:00"), 'is_superuser': True, 'email': 'yurinakanishi33@gmail.com', 'name': 'yuri', 'is_active': True, 'is_staff': True} ) 
    knowledge_knowledge_146 = importer.save_or_locate(knowledge_knowledge_146)

    knowledge_knowledge_147 = Knowledge()
    knowledge_knowledge_147.name = 'Botox injection'
    knowledge_knowledge_147.slug = 'botox-injection'
    knowledge_knowledge_147.language =  importer.locate_object(Language, "id", Language, "id", 1, {'id': 1, 'name': 'en'} ) 
    knowledge_knowledge_147.genre_for_url =  importer.locate_object(GenreForURL, "id", GenreForURL, "id", 1, {'id': 1, 'name': 'knowledge'} ) 
    knowledge_knowledge_147.type = 'knowledge'
    knowledge_knowledge_147.notesite_url = 'https://note.com/argumented_world/n/n839e48883344'
    knowledge_knowledge_147.article =  importer.locate_object(Article, "id", Article, "id", 6246, {'id': 6246, 'excerpt': 'Botox injection', 'kicker': 'Botox injection', 'content': "<p>Probably You've heard of Botox injections. It's a well-known cosmetic surgery used to remove wrinkles between the eyebrows and at the corners of the eyes. It is also used to treat diseases that cause muscle tension. But this Botox injection inject poison. The name of the poison is botulinum toxin which is a protein toxin produced by botulism.</p>\r\n\r\n<p>Botulism is a causative bacteria well-known cause of food poisoning. It is found in mud and sand in soil, oceans, lakes, and rivers. Botulinum toxin is also known to be extremely toxic, causing paralysis of nerves and muscles. In the worst case scenario, a person suffering from botulinum toxin food poisoning will suffer respiratory paralysis and die.</p>\r\n\r\n<p>This property has been applied for medical use. In other words, paralyzing the muscles can be said to have the effect of a good thing in some cases. By injecting botulinum toxin directly into a muscle, the muscle would be stiff and stopped. It is also effective for muscles that are in spasm.</p>\r\n\r\n<p>In cosmetic surgery, it is mainly used to remove wrinkles. Wrinkles form when we smile because our facial muscles stretch and contract. By paralyzing these muscles, wrinkles are removed. (Botox injections can also make a person appear expressionless when smiling, so be careful not to overdo it.)</p>\r\n\r\n<p>According to wikipedia, in the medical field, Botox is safe as long as the dosage is correct because it is used in small doses. Poison can also be a medicine depending on how it is used.</p>\r\n\r\n<p>Thirdman on Pexels</p>", 'references': '', 'rating': 0.0, 'rating_count': None, 'published_date': dateutil.parser.parse("2023-07-03T02:53:18.372662+00:00"), 'updated_date': dateutil.parser.parse("2023-07-03T02:53:18.393911+00:00")} ) 
    knowledge_knowledge_147.author =  importer.locate_object(UserAccount, "id", UserAccount, "id", 1, {'id': 1, 'password': 'pbkdf2_sha256$600000$Q9AwSzFqEXF1ueS21sGGfz$rZo+NVruXU5Zf5vp00wtuwLn0Z333sn5NtvS8VWKqds=', 'last_login': dateutil.parser.parse("2023-06-30T06:03:10.086511+00:00"), 'is_superuser': True, 'email': 'yurinakanishi33@gmail.com', 'name': 'yuri', 'is_active': True, 'is_staff': True} ) 
    knowledge_knowledge_147 = importer.save_or_locate(knowledge_knowledge_147)

    knowledge_knowledge_148 = Knowledge()
    knowledge_knowledge_148.name = 'Boats become faster were not always a good thing'
    knowledge_knowledge_148.slug = 'boats-become-faster-were-not-always-a-good-thing'
    knowledge_knowledge_148.language =  importer.locate_object(Language, "id", Language, "id", 1, {'id': 1, 'name': 'en'} ) 
    knowledge_knowledge_148.genre_for_url =  importer.locate_object(GenreForURL, "id", GenreForURL, "id", 1, {'id': 1, 'name': 'knowledge'} ) 
    knowledge_knowledge_148.type = 'knowledge'
    knowledge_knowledge_148.notesite_url = ''
    knowledge_knowledge_148.article =  importer.locate_object(Article, "id", Article, "id", 6247, {'id': 6247, 'excerpt': 'Boats become faster were not always a good thing', 'kicker': 'Boats become faster were not always a good thing', 'content': '<p>The advent of steamships in the late 19th century, during the Industrial Revolution, revolutionized global trade. The invention and use of steamships greatly shortened the voyage from the 40 days it used to take to cross the Atlantic Ocean in sailing ships, which had to rely on the wind, to the 10 days or so it took.</p>\r\n\r\n<p>Trade became more prosperous and the world became more convenient. On the other hand, the shortened voyage time caused the European wine industry to suffer catastrophic damage. Phylloxera is a pest that attaches itself to the roots of grapes and kills them.</p>\r\n\r\n<p>Its scientific name, phylloxera vastatrix, means "destroyer. Originally, phylloxera was found in the United States and not in Europe. American grapevines were resistant to phylloxera, so there was no damage. Europeans have been importing grape seedlings from the U.S. by ship since the days of sailing ships. The purpose was to improve grape varieties.</p>\r\n\r\n<p>In the days of sailing ships, phylloxera on grape saplings would have died during the long voyage to Europe, even if they had made it on board.\u3000However, steamships greatly shortened the voyage, allowing the phylloxera to reach Europe before it died.\u3000And once it landed alive, phylloxera quickly spread throughout Europe, devastating the European wine industry.</p>\r\n\r\n<p>This photo shows a caricature of phylloxera tasting wine that appeared in the British weekly magazine Punch in 1890. The illustration commented that "Philoxera is a true gourmet, seeking out the best vineyards and pining for the best grapes.</p>\r\n\r\n<p>Fifty Plants that Changed the Course of History by Bill Rose</p>\r\n\r\n<p>A history of wine by Yamamoto</p>\r\n\r\n<p>Jill Wellington on Pixabay</p>\r\n\r\n<p>wikimedia.org/w/index.php?curid=958921</p>', 'references': '', 'rating': 0.0, 'rating_count': None, 'published_date': dateutil.parser.parse("2023-07-03T02:53:18.372662+00:00"), 'updated_date': dateutil.parser.parse("2023-07-03T02:53:18.393911+00:00")} ) 
    knowledge_knowledge_148.author =  importer.locate_object(UserAccount, "id", UserAccount, "id", 1, {'id': 1, 'password': 'pbkdf2_sha256$600000$Q9AwSzFqEXF1ueS21sGGfz$rZo+NVruXU5Zf5vp00wtuwLn0Z333sn5NtvS8VWKqds=', 'last_login': dateutil.parser.parse("2023-06-30T06:03:10.086511+00:00"), 'is_superuser': True, 'email': 'yurinakanishi33@gmail.com', 'name': 'yuri', 'is_active': True, 'is_staff': True} ) 
    knowledge_knowledge_148 = importer.save_or_locate(knowledge_knowledge_148)

    knowledge_knowledge_149 = Knowledge()
    knowledge_knowledge_149.name = '優しいことは必ずしもいいことだとは限らない'
    knowledge_knowledge_149.slug = 'being-nice-is-not-always-a-good-thing-jp'
    knowledge_knowledge_149.language =  importer.locate_object(Language, "id", Language, "id", 2, {'id': 2, 'name': 'jp'} ) 
    knowledge_knowledge_149.genre_for_url =  importer.locate_object(GenreForURL, "id", GenreForURL, "id", 1, {'id': 1, 'name': 'knowledge'} ) 
    knowledge_knowledge_149.type = 'knowledge'
    knowledge_knowledge_149.notesite_url = ''
    knowledge_knowledge_149.article =  importer.locate_object(Article, "id", Article, "id", 6248, {'id': 6248, 'excerpt': '優しいことは必ずしもいいことだとは限らない', 'kicker': '優しいことは必ずしもいいことだとは限らない', 'content': '<p>戦国武将の足利尊氏は思いやり、優しさがあり、部下から慕われるような性格の人物だったそうです。ライバルの武士で自分に刃向かった人でも降伏すれば許してあげたり、部下の大名達に気前よく土地を分けてあげたり。しかしその優しさのせいで室町幕府の権威が衰え、思い上がった大名などによって応仁の乱が起こり、戦国時代に突入してしまったという見解があります。リーダーにしては、優しすぎたのでしょう。人の上に立つものには、非人間性が必要なのでしょうか。</p>\r\n\r\n<p>寛容のパラドクスというものがあります。全てのことに寛容な社会があったとすると、その社会は不寛容な人々に支配されてしまい、結局不寛容な社会になってしまうというものです。不寛容な人に対しても寛容であることは、社会的には結局良くないということです。たとえば、罪を犯した人にも彼らなりの背景があり、それを考えると許してあげたくなることもあります。しかし、彼らを罰から開放してしまうと、不寛容な人に対しても寛容であることになり、社会が危うくなってしまいます。「罪を犯しても許してもらえるなら、もっとやってやろう」という人が出てきて、犯罪にあって困る人がたくさん出てしまいます。 なので、今の社会は罪を犯した人にはそれなりの罰を与える社会になっています。個人においてもそれが言えるでしょう。全ての人に愛想良く接していると、悪意がある人に搾取されたり、結局自分を攻撃にさらすことになります。</p>\r\n\r\n<p></p>', 'references': '', 'rating': 0.0, 'rating_count': None, 'published_date': dateutil.parser.parse("2023-07-03T02:53:18.372662+00:00"), 'updated_date': dateutil.parser.parse("2023-07-03T02:53:18.393911+00:00")} ) 
    knowledge_knowledge_149.author =  importer.locate_object(UserAccount, "id", UserAccount, "id", 1, {'id': 1, 'password': 'pbkdf2_sha256$600000$Q9AwSzFqEXF1ueS21sGGfz$rZo+NVruXU5Zf5vp00wtuwLn0Z333sn5NtvS8VWKqds=', 'last_login': dateutil.parser.parse("2023-06-30T06:03:10.086511+00:00"), 'is_superuser': True, 'email': 'yurinakanishi33@gmail.com', 'name': 'yuri', 'is_active': True, 'is_staff': True} ) 
    knowledge_knowledge_149 = importer.save_or_locate(knowledge_knowledge_149)

    knowledge_knowledge_150 = Knowledge()
    knowledge_knowledge_150.name = 'Being nice is not always a good thing'
    knowledge_knowledge_150.slug = 'being-nice-is-not-always-a-good-thing'
    knowledge_knowledge_150.language =  importer.locate_object(Language, "id", Language, "id", 1, {'id': 1, 'name': 'en'} ) 
    knowledge_knowledge_150.genre_for_url =  importer.locate_object(GenreForURL, "id", GenreForURL, "id", 1, {'id': 1, 'name': 'knowledge'} ) 
    knowledge_knowledge_150.type = 'knowledge'
    knowledge_knowledge_150.notesite_url = ''
    knowledge_knowledge_150.article =  importer.locate_object(Article, "id", Article, "id", 6249, {'id': 6249, 'excerpt': 'Being nice is not always a good thing', 'kicker': 'Being nice is not always a good thing', 'content': '<p>Ashikaga Takauji, a warlord of the Warring States period in Japan, was a man of compassion and kindness who was loved by his subordinates. He forgave even rival warriors who had defied him if they surrendered, and generously gave away land to his subordinate feudal lords. However, there is a view that because of his kindness, the authority of the Muromachi Shogunate declined, and the Onin War broke out due to the rashness of the feudal lords and others, plunging the country into the Warring States Period.</p>\r\n\r\n<p>He was probably too gentle for a leader. Is inhumanity necessary for those who stand above others?There is a paradox called "the paradox of tolerance".</p>\r\n\r\n<p>If there is a society that is tolerant in all things, it will be dominated by intolerant people and eventually become an intolerant society.</p>\r\n\r\n<p>It means that being tolerant of intolerant people is not good for society in the end.</p>\r\n\r\n<p>For example, people who commit crimes have their own backgrounds, and given those backgrounds, we may be tempted to forgive them. However, if we release them from punishment, we will be tolerant of the intolerant, and society will be in jeopardy. People will say, "If I can be forgiven for committing a crime, I will do more of it," and there will be many people who will be in trouble for their crimes. Therefore, today\'s society punishes people who commit crimes accordingly.</p>\r\n\r\n<p>This is true for individuals as well. If you treat all people amiably, you will be exploited by those who have malicious intentions and you will eventually expose yourself to attack.</p>\r\n\r\n<p></p>', 'references': '', 'rating': 0.0, 'rating_count': None, 'published_date': dateutil.parser.parse("2023-07-03T02:53:18.372662+00:00"), 'updated_date': dateutil.parser.parse("2023-07-03T02:53:18.393911+00:00")} ) 
    knowledge_knowledge_150.author =  importer.locate_object(UserAccount, "id", UserAccount, "id", 1, {'id': 1, 'password': 'pbkdf2_sha256$600000$Q9AwSzFqEXF1ueS21sGGfz$rZo+NVruXU5Zf5vp00wtuwLn0Z333sn5NtvS8VWKqds=', 'last_login': dateutil.parser.parse("2023-06-30T06:03:10.086511+00:00"), 'is_superuser': True, 'email': 'yurinakanishi33@gmail.com', 'name': 'yuri', 'is_active': True, 'is_staff': True} ) 
    knowledge_knowledge_150 = importer.save_or_locate(knowledge_knowledge_150)

    knowledge_knowledge_151 = Knowledge()
    knowledge_knowledge_151.name = ''
    knowledge_knowledge_151.slug = 'bees-will-disappear-jp'
    knowledge_knowledge_151.language =  importer.locate_object(Language, "id", Language, "id", 2, {'id': 2, 'name': 'jp'} ) 
    knowledge_knowledge_151.genre_for_url =  importer.locate_object(GenreForURL, "id", GenreForURL, "id", 1, {'id': 1, 'name': 'knowledge'} ) 
    knowledge_knowledge_151.type = 'knowledge'
    knowledge_knowledge_151.notesite_url = 'https://note.com/argumented_world/n/nd17cc030f7ec'
    knowledge_knowledge_151.article =  importer.locate_object(Article, "id", Article, "id", 6250, {'id': 6250, 'excerpt': '', 'kicker': '', 'content': '<p>2006年の冬、アメリカ各地でセイヨウミツバチが一夜にして失踪するという事件が起きました。ハチの巣と巣の中の女王バチは残っているのですが、それ以外の働きバチが一斉に姿を消しました。周囲に死骸などの痕跡もありませんでした。この年のアメリカの事例以外にも、2006年以前から現在まで、アメリカ、南アメリカ、ヨーロッパ、アジアなどの世界各地で同じような現象が起っています。このミツバチが姿を消す現象は、蜂群崩壊症候群（Colony Collapse Disorder : CCD）と呼ばれています。</p>\r\n\r\n<p>蜂群崩壊症候群は、メアリー・セレスト現象とも呼ばれます。この名前はメアリー・セレスト号という船が1872年にポルトガル沖で無人のまま漂流していたのを発見された事件から名付けられました。船だけを残して人が全員失踪しており、未解決事件となっています。「船だけを残して失踪」と、「ハチの巣だけを残して失踪」が似ていることから名付けられました。</p>\r\n\r\n<p>CCDに似ている現象で、ミツバチが大量に死んでしまうという現象も世界各地（日本でも）で起っています。ミツバチの大量死、失踪の原因は特定はされていません。可能性としては、疫病・ウイルス・ダニなどによるもの、農薬・殺虫剤によるもの、スマホなどの機械が出す電磁波によるもの、害虫予防のための遺伝子組み換え作物によるもの、ストレスによるもの、などがあります。</p>\r\n\r\n<p>特にアメリカでは作物に花が付く時期に合わせてミツバチに受粉作業をさせるために、ミツバチを巣箱ごとトラックに乗せて、アメリカの各地を移動させています。そして運ばれる先の多くは除草剤により他の植物が全くない状況で一つの作物が栽培されています。この移動や環境の変化によるストレスがハチの大量死、失踪の原因として挙げられています。</p>\r\n\r\n<p>現在、アーモンド、桃、セイヨウナシ、サクランボ、木苺、ブラックベリークランベリー、大豆、リンゴ、サクランボ、イチゴ、キュウリ、メロン、スイカなどなど、多くの作物がミツバチの受粉に頼っています。ミツバチなどの昆虫によって花粉を運んでもらっている作物は、アメリカには100種近くあり、農作物の３分の１がミツバチの受粉に依存していることになります。アメリカやヨーロッパでは大量死、失踪によってミツバチの数は年々減っています。ミツバチの値段が高くなり、しかも農作物の生産量は減るので、農家の人々は経済的な打撃を受けています。（中南米、アジア、アフリカなどではミツバチは増えており、世界的にはミツバチの数は増加しています）今後どうなるのかは分かりませんが、このような現象が多くおこり、ハチが集団で失踪したり死んでしまったりし続けると、私たちの食生活にも影響が出てくるかもしれません。</p>\r\n\r\n<p>『図説 世界史を変えた50の動物 』エリック シャリーン (著)、甲斐 理恵子 (翻訳)</p>\r\n\r\n<p>Photo by Dmitry Grigoriev on Unsplash</p>\r\n\r\n<p>Photo by Nacho Fernández on Unsplash</p>\r\n\r\n<p>Image by yabayee from Pixabay</p>', 'references': '', 'rating': 0.0, 'rating_count': None, 'published_date': dateutil.parser.parse("2023-07-03T02:53:18.372662+00:00"), 'updated_date': dateutil.parser.parse("2023-07-03T02:53:18.393911+00:00")} ) 
    knowledge_knowledge_151.author =  importer.locate_object(UserAccount, "id", UserAccount, "id", 1, {'id': 1, 'password': 'pbkdf2_sha256$600000$Q9AwSzFqEXF1ueS21sGGfz$rZo+NVruXU5Zf5vp00wtuwLn0Z333sn5NtvS8VWKqds=', 'last_login': dateutil.parser.parse("2023-06-30T06:03:10.086511+00:00"), 'is_superuser': True, 'email': 'yurinakanishi33@gmail.com', 'name': 'yuri', 'is_active': True, 'is_staff': True} ) 
    knowledge_knowledge_151 = importer.save_or_locate(knowledge_knowledge_151)

    knowledge_knowledge_152 = Knowledge()
    knowledge_knowledge_152.name = 'Bees will disappear'
    knowledge_knowledge_152.slug = 'bees-will-disappear'
    knowledge_knowledge_152.language =  importer.locate_object(Language, "id", Language, "id", 1, {'id': 1, 'name': 'en'} ) 
    knowledge_knowledge_152.genre_for_url =  importer.locate_object(GenreForURL, "id", GenreForURL, "id", 1, {'id': 1, 'name': 'knowledge'} ) 
    knowledge_knowledge_152.type = 'knowledge'
    knowledge_knowledge_152.notesite_url = 'https://note.com/argumented_world/n/nd17cc030f7ec'
    knowledge_knowledge_152.article =  importer.locate_object(Article, "id", Article, "id", 6251, {'id': 6251, 'excerpt': 'Bees will disappear', 'kicker': 'Bees will disappear', 'content': '<p>In the winter of 2006, a number of honey bees disappeared overnight in various parts of the United States. The hive and the queen bee in the hive remained, but all the other worker bees disappeared at once. There were no traces of dead bees around. In addition to the U.S. case of this year, similar phenomena have occurred in the South America, Europe, Asia, and other parts of the world from before 2006 to the present. This phenomenon of honey bees disappearing is called Colony Collapse Disorder (CCD).</p>\r\n\r\n<p>Colony Collapse Disorder is also called the Mary Celeste phenomenon. It is named after the Mary Celeste, a ship that was found drifting unmanned off the coast of Portugal in 1872. All the people disappeared, leaving only the ship, and the case is still unsolved. The name "Mary Celeste" is derived from the similarity between "disappearance leaving only the ship" and "disappearance leaving only the beehive.</p>\r\n\r\n<p>A similar phenomenon to CCD is the mass death of honeybees in many parts of the world (including Japan). The causes of mass bee deaths and disappearances have not been identified. Possible causes include plague, viruses, and mites; pesticides and insecticides; electromagnetic waves emitted by smartphones and other machines; genetically modified crops used to prevent pests; and stress.</p>\r\n\r\n<p>In the U.S. in particular, in order to have bees pollinate crops in time for flowering, the bees are loaded onto trucks with hives and moved around the U.S. Many of the places where they are transported are herbicides. In many of the places where they are transported, a crop is grown without any other plants due to herbicides. The stress caused by this movement and environmental change has been cited as the cause of mass bee deaths and disappearances.</p>\r\n\r\n<p>Today, many crops such as almonds, peaches, pears, cherries, raspberries, blackberries cranberries, soybeans, apples, cherries, strawberries, cucumbers, melons, and watermelons rely on bee pollination. There are nearly 100 species of crops in the U.S. that have pollen carried by bees and other insects, meaning that one-third of all crops are dependent on bee pollination.</p>\r\n\r\n<p>The number of bees in the U.S. and Europe is decreasing every year due to mass die-offs and disappearances. Farmers are suffering economically as the price of bees is higher and crop yields are lower. (In Latin America, Asia, and Africa, the number of bees is increasing, and worldwide, the number of bees is increasing.) We do not know what will happen in the future, but if more of these phenomena occur and bees continue to disappear or die in large numbers, our diet may be affected.</p>\r\n\r\n<p>Fifty Animals that Changed the Course of History by Eric Chaline</p>\r\n\r\n<p>Photo by Dmitry Grigoriev on Unsplash</p>\r\n\r\n<p>Photo by Nacho Fernández on Unsplash</p>\r\n\r\n<p>Image by yabayee from Pixabay</p>', 'references': '', 'rating': 0.0, 'rating_count': None, 'published_date': dateutil.parser.parse("2023-07-03T02:53:18.372662+00:00"), 'updated_date': dateutil.parser.parse("2023-07-03T02:53:18.393911+00:00")} ) 
    knowledge_knowledge_152.author =  importer.locate_object(UserAccount, "id", UserAccount, "id", 1, {'id': 1, 'password': 'pbkdf2_sha256$600000$Q9AwSzFqEXF1ueS21sGGfz$rZo+NVruXU5Zf5vp00wtuwLn0Z333sn5NtvS8VWKqds=', 'last_login': dateutil.parser.parse("2023-06-30T06:03:10.086511+00:00"), 'is_superuser': True, 'email': 'yurinakanishi33@gmail.com', 'name': 'yuri', 'is_active': True, 'is_staff': True} ) 
    knowledge_knowledge_152 = importer.save_or_locate(knowledge_knowledge_152)

    knowledge_knowledge_153 = Knowledge()
    knowledge_knowledge_153.name = ''
    knowledge_knowledge_153.slug = 'bee-bird-import-ban-jp'
    knowledge_knowledge_153.language =  importer.locate_object(Language, "id", Language, "id", 2, {'id': 2, 'name': 'jp'} ) 
    knowledge_knowledge_153.genre_for_url =  importer.locate_object(GenreForURL, "id", GenreForURL, "id", 1, {'id': 1, 'name': 'knowledge'} ) 
    knowledge_knowledge_153.type = 'knowledge'
    knowledge_knowledge_153.notesite_url = 'https://note.com/argumented_world/n/n14dbad468f42'
    knowledge_knowledge_153.article =  importer.locate_object(Article, "id", Article, "id", 6252, {'id': 6252, 'excerpt': '', 'kicker': '', 'content': '<p>ハワイにはハチドリが生息しておらず、輸入や持ち込みも禁止されています。今回は、その理由についてのお話です。 ハチドリはスズメくらいの大きさの、可愛くてきれいな鳥です。特技は羽ばたいて空中で止まったまま、花の蜜を吸うことです。</p>\r\n\r\n<p>ちょっと話しがずれますが、ハワイの特産品と言えばなんでしょう？……ハイビスカス？……マンゴー？</p>\r\n\r\n<p>パイナップルですよね！</p>\r\n\r\n<p>今のフルーツは、種なしぶどうに種なしみかん、などなど種なしが人気ですが、パイナップルも種なしが主流です（というか、私たちのほとんどは、種なしのパイナップルしか食べたことがないと思います）。パイナップルに種があると商品としての質が落ちてしまいます。 種なしパイナップルは、パイナップルの木の新芽の部分を切り取って、苗のように植えて増やしています。ハチドリはパイナップルの花の蜜がとっても好きです。（パイナップルの花が成長したものが、私たちがよく目にする、パイナップルの実になります。）</p>\r\n\r\n<p>自然界では、ハチドリが次々に色んなパイナップルの花の蜜を吸いながら飛び回り、その結果パイナップルの受粉を助けていますが、人間によって管理された環境では、それが裏目に出てしまいます。わざとパイナップルを受粉させていないハワイにハチドリがいたら、せっかく作っていた種なしパイナップルが受粉して種ありパイナップルになってしまうからです。</p>\r\n\r\n<p>なので、パイナップルが主要な輸出作物となっているハワイでは、ハチドリの国内へのもちこみを禁止してパイナップル同士の受粉を防止しています。 このように徹底してパイナップルの受粉を防止しているハワイでも、時々他の農地の品種が違うパイナップルの花粉がハチなどによって運ばれてしまって、受粉が起きていることがあります。そんな時は、皮と果肉の間の部分に褐色のゴマのような種ができます。もちろんこれを土にまけばちゃんと発芽します。もし、次にパイナップルをまるごと買って切り分ける時があったら種を探してみてはいかがでしょうか？</p>\r\n\r\n<p>画像『図説 世界史を変えた50の植物 』</p>\r\n\r\n<p>ビル ローズ (著)、柴田 譲治 (翻訳)</p>\r\n\r\n<p>Manfred Richter on Pixabay、 DEZALB on Pixabay 、 Jean van der Meulen on Pexels、 James Wainscoat on Unsplash、 Scott Webb on Pixabay</p>', 'references': '', 'rating': 0.0, 'rating_count': None, 'published_date': dateutil.parser.parse("2023-07-03T02:53:18.372662+00:00"), 'updated_date': dateutil.parser.parse("2023-07-03T02:53:18.393911+00:00")} ) 
    knowledge_knowledge_153.author =  importer.locate_object(UserAccount, "id", UserAccount, "id", 1, {'id': 1, 'password': 'pbkdf2_sha256$600000$Q9AwSzFqEXF1ueS21sGGfz$rZo+NVruXU5Zf5vp00wtuwLn0Z333sn5NtvS8VWKqds=', 'last_login': dateutil.parser.parse("2023-06-30T06:03:10.086511+00:00"), 'is_superuser': True, 'email': 'yurinakanishi33@gmail.com', 'name': 'yuri', 'is_active': True, 'is_staff': True} ) 
    knowledge_knowledge_153 = importer.save_or_locate(knowledge_knowledge_153)

    knowledge_knowledge_154 = Knowledge()
    knowledge_knowledge_154.name = 'Bee bird import ban'
    knowledge_knowledge_154.slug = 'bee-bird-import-ban'
    knowledge_knowledge_154.language =  importer.locate_object(Language, "id", Language, "id", 1, {'id': 1, 'name': 'en'} ) 
    knowledge_knowledge_154.genre_for_url =  importer.locate_object(GenreForURL, "id", GenreForURL, "id", 1, {'id': 1, 'name': 'knowledge'} ) 
    knowledge_knowledge_154.type = 'knowledge'
    knowledge_knowledge_154.notesite_url = ''
    knowledge_knowledge_154.article =  importer.locate_object(Article, "id", Article, "id", 6253, {'id': 6253, 'excerpt': 'Bee bird import ban', 'kicker': 'Bee bird import ban', 'content': "<p>Hummingbirds do not live in Hawaii and are prohibited from being imported or brought into the state. In this article, we will discuss the reasons why. Hummingbirds are cute and beautiful birds about the size of a sparrow. Their special skill is to flap their wings and stay perched in the air while sucking nectar from flowers.</p>\r\n\r\n<p>This is a bit off topic, but what is a specialty of Hawaii? ...... hibiscus? ... mangoes?</p>\r\n\r\n<p>Pineapple, right!</p>\r\n\r\n<p>Today's fruits are seedless: seedless grapes, seedless oranges, etc. Seedless pineapples are also popular (or perhaps most of us have only ever eaten seedless pineapples). If a pineapple has seeds, it loses its quality as a product.Seedless pineapples are increased by cutting off the shoots of the pineapple tree and planting them like seedlings.</p>\r\n\r\n<p>Hummingbirds love the nectar of pineapple flowers. （The pineapple flowers grow into the pineapple fruit we see so often.)</p>\r\n\r\n<p>In nature, hummingbirds fly from one pineapple blossom to another, sucking the nectar and thereby helping to pollinate the pineapples, but in a human-controlled environment, this can backfire.</p>\r\n\r\n<p>If there were hummingbirds in Hawaii where people intentionally make pineapples not pollinating, the seedless pineapples they were making would be pollinated and become seeded pineapples.</p>\r\n\r\n<p>Therefore, in Hawaii, where pineapple is a major export crop, hummingbirds are prohibited from bringing into the country to prevent pineapples from pollinating each other.</p>\r\n\r\n<p>Even in Hawaii, where pineapples are thoroughly prevented from being pollinated, bees sometimes carry pollen from different varieties of pineapples from other farms, causing pollination to occur. When this happens, brown sesame-like seeds are produced in the area between the skin and the pulp. Of course, if you sow them in the soil, they will germinate. Next time you buy a whole pineapple and cut it into pieces, why not look for the seeds?</p>\r\n\r\n<p>Fifty Plants that Changed the Course of History by Bill Rose</p>\r\n\r\n<p>Manfred Richter on Pixabay、 DEZALB on Pixabay 、 Jean van der Meulen on Pexels、 James Wainscoat on Unsplash、 Scott Webb on Pixabay</p>", 'references': '', 'rating': 0.0, 'rating_count': None, 'published_date': dateutil.parser.parse("2023-07-03T02:53:18.372662+00:00"), 'updated_date': dateutil.parser.parse("2023-07-03T02:53:18.393911+00:00")} ) 
    knowledge_knowledge_154.author =  importer.locate_object(UserAccount, "id", UserAccount, "id", 1, {'id': 1, 'password': 'pbkdf2_sha256$600000$Q9AwSzFqEXF1ueS21sGGfz$rZo+NVruXU5Zf5vp00wtuwLn0Z333sn5NtvS8VWKqds=', 'last_login': dateutil.parser.parse("2023-06-30T06:03:10.086511+00:00"), 'is_superuser': True, 'email': 'yurinakanishi33@gmail.com', 'name': 'yuri', 'is_active': True, 'is_staff': True} ) 
    knowledge_knowledge_154 = importer.save_or_locate(knowledge_knowledge_154)

    knowledge_knowledge_155 = Knowledge()
    knowledge_knowledge_155.name = '「ビーバーは魚です」byローマカトリック'
    knowledge_knowledge_155.slug = 'beavers-are-fish-by-roman-catholic-jp'
    knowledge_knowledge_155.language =  importer.locate_object(Language, "id", Language, "id", 2, {'id': 2, 'name': 'jp'} ) 
    knowledge_knowledge_155.genre_for_url =  importer.locate_object(GenreForURL, "id", GenreForURL, "id", 1, {'id': 1, 'name': 'knowledge'} ) 
    knowledge_knowledge_155.type = 'knowledge'
    knowledge_knowledge_155.notesite_url = 'https://note.com/argumented_world/n/n1bb925b57a31---https://alis.to/AugmentedWorld/articles/3D4NM5X0ZGgJ'
    knowledge_knowledge_155.article =  importer.locate_object(Article, "id", Article, "id", 6254, {'id': 6254, 'excerpt': '「ビーバーは魚です」byローマカトリック', 'kicker': '「ビーバーは魚です」byローマカトリック', 'content': '<p>中世のローマカトリック教徒の人々の間ではビーバーは魚であるという概念が広まりました。なぜローマカトリックはこのような考え方が広まったのでしょうか？ 伝統的なカトリックのしきたりでは、断食のイベントがたくさんあります。例えば2月から3月くらいに行なわれるカーニバル（謝肉祭）と復活祭（イースター）に挟まれた40日くらいの期間（四旬節と呼ばれます）は断食をします。 また金曜日はキリストが亡くなった日なので毎週金曜日は断食をします。（イエス・キリストは金曜日に処刑され、3日後の日曜日に復活したと言われています）</p>\r\n\r\n<p>彼らはなぜ断食をしたのでしょうか？それは、キリストの苦しみを自ら体感するためです。イエス・キリストは、人類を罪から救うために、自ら進んで十字架にはりつけにされました。断食は苦しい修行ですが、その断食を行なうことによってキリストの犠牲、苦しみを思い起そうとしました。また欲求を抑えることでキリストのような自制心を身につけ、神に少しでも近づくという理由もあったようです。</p>\r\n\r\n<p>しかし肉が大好きなローマカトリック教徒にとって肉の禁止令はとってもつらいことでした。「やっぱり肉を食べたい！」「なんとしてでも、毎日肉が食べたい！」住んでいる動物です。水の中も泳げます。</p>\r\n\r\n<p>17世紀、ある司教が「ビーバーって、水の中を泳いでいるし尻尾がひれみたいな形してるから魚ということででいいですか？」「だから受難節のあいだも食べていいですよね？」と言い出しました。それを聞いた教会は、</p>\r\n\r\n<p>「まあ、その通りだな」 となりました。（おいっ）</p>\r\n\r\n<p>そんなわけで、ビーバーは、断食中の人々のおなかを満たすために「魚」ということにされてしまいました。キリスト教の熱心な信者であることと、その抜け穴を探して欲求を満たそうとすることは両立するのですね。</p>\r\n\r\n<p>『図説 世界史を変えた50の動物 』</p>\r\n\r\n<p>エリック シャリーン (著)、甲斐 理恵子 (翻訳)</p>\r\n\r\n<p>sarka-krnavkova on unsplash</p>\r\n\r\n<p>Russell Docksteader-Beaver</p>\r\n\r\n<p>brian.perkes-Beaver</p>\r\n\r\n<p>photoAC</p>', 'references': '', 'rating': 0.0, 'rating_count': None, 'published_date': dateutil.parser.parse("2023-07-03T02:53:18.372662+00:00"), 'updated_date': dateutil.parser.parse("2023-07-03T02:53:18.393911+00:00")} ) 
    knowledge_knowledge_155.author =  importer.locate_object(UserAccount, "id", UserAccount, "id", 1, {'id': 1, 'password': 'pbkdf2_sha256$600000$Q9AwSzFqEXF1ueS21sGGfz$rZo+NVruXU5Zf5vp00wtuwLn0Z333sn5NtvS8VWKqds=', 'last_login': dateutil.parser.parse("2023-06-30T06:03:10.086511+00:00"), 'is_superuser': True, 'email': 'yurinakanishi33@gmail.com', 'name': 'yuri', 'is_active': True, 'is_staff': True} ) 
    knowledge_knowledge_155 = importer.save_or_locate(knowledge_knowledge_155)

    knowledge_knowledge_156 = Knowledge()
    knowledge_knowledge_156.name = 'Beavers are fish, by Roman Catholic'
    knowledge_knowledge_156.slug = 'beavers-are-fish-by-roman-catholic'
    knowledge_knowledge_156.language =  importer.locate_object(Language, "id", Language, "id", 1, {'id': 1, 'name': 'en'} ) 
    knowledge_knowledge_156.genre_for_url =  importer.locate_object(GenreForURL, "id", GenreForURL, "id", 1, {'id': 1, 'name': 'knowledge'} ) 
    knowledge_knowledge_156.type = 'knowledge'
    knowledge_knowledge_156.notesite_url = 'https://note.com/argumented_world/n/n1bb925b57a31---https://alis.to/AugmentedWorld/articles/3D4NM5X0ZGgJ'
    knowledge_knowledge_156.article =  importer.locate_object(Article, "id", Article, "id", 6255, {'id': 6255, 'excerpt': 'Beavers are fish, by Roman Catholic', 'kicker': 'Beavers are fish, by Roman Catholic', 'content': '<p>In the traditional Catholic tradition, there are many fasting events. For example, during the 40-day period between Carnival and Easter in February and March (called Lent), they fast. Also, every Friday is a fasting day because Friday is the day of Christ\'s death. (It is said that Jesus Christ was executed on Friday and resurrected three days later on Sunday.)</p>\r\n\r\n<p>Fasting does not mean that we are not allowed to eat anything. We stop feasting and reduce the frequency and quantity of our food. Meat, and foods of animal origin such as milk, cheese, butter, and eggs, were forbidden during the fast. Instead, fish was allowed to be eaten.</p>\r\n\r\n<p>Why did they fast?  It was to experience Christ\'s suffering for themselves.Jesus Christ willingly crucified Himself on the cross to save mankind from sin. Fasting is a painful practice, but by fasting, we are reminded of Christ\'s sacrifice and suffering.</p>\r\n\r\n<p>It is also believed that by suppressing their cravings, they were learning self-control like Christ, and thus drawing a little closer to God. But for Roman Catholics, who love meat, the ban on meat was very painful.</p>\r\n\r\n<p>"I still want to eat meat! I want meat every day, no matter what it takes!"</p>\r\n\r\n<p>Beavers were the target. Beavers are members of the rodent family and live around rivers, lakes, and ponds. They can also swim in water. In the 17th century, a bishop said "Is it correct to say that a beaver is a fish because it swims in water and its tail is shaped like a fin. So we can eat it during the Passion Passion, right?"</p>\r\n\r\n<p>When the church heard this, they said, "Well, that\'s right."</p>\r\n\r\n<p>So the beaver was made into a "fish" to fill the stomachs of those who were fasting.</p>\r\n\r\n<p>Fifty Animals that Changed the Course of History by Eric Chaline   sarka-krnavkova on unsplash</p>\r\n\r\n<p>photoAC</p>', 'references': '', 'rating': 0.0, 'rating_count': None, 'published_date': dateutil.parser.parse("2023-07-03T02:53:18.372662+00:00"), 'updated_date': dateutil.parser.parse("2023-07-03T02:53:18.393911+00:00")} ) 
    knowledge_knowledge_156.author =  importer.locate_object(UserAccount, "id", UserAccount, "id", 1, {'id': 1, 'password': 'pbkdf2_sha256$600000$Q9AwSzFqEXF1ueS21sGGfz$rZo+NVruXU5Zf5vp00wtuwLn0Z333sn5NtvS8VWKqds=', 'last_login': dateutil.parser.parse("2023-06-30T06:03:10.086511+00:00"), 'is_superuser': True, 'email': 'yurinakanishi33@gmail.com', 'name': 'yuri', 'is_active': True, 'is_staff': True} ) 
    knowledge_knowledge_156 = importer.save_or_locate(knowledge_knowledge_156)

    knowledge_knowledge_157 = Knowledge()
    knowledge_knowledge_157.name = '水車に仕事を奪われるので、使用を禁止！'
    knowledge_knowledge_157.slug = 'banning-the-use-of-watermills-because-they-take-all-the-work-out-of-the-watermills-jp'
    knowledge_knowledge_157.language =  importer.locate_object(Language, "id", Language, "id", 2, {'id': 2, 'name': 'jp'} ) 
    knowledge_knowledge_157.genre_for_url =  importer.locate_object(GenreForURL, "id", GenreForURL, "id", 1, {'id': 1, 'name': 'knowledge'} ) 
    knowledge_knowledge_157.type = 'knowledge'
    knowledge_knowledge_157.notesite_url = 'https://note.com/argumented_world/n/na665b168861f'
    knowledge_knowledge_157.article =  importer.locate_object(Article, "id", Article, "id", 6256, {'id': 6256, 'excerpt': '水車に仕事を奪われるので、使用を禁止！', 'kicker': '水車に仕事を奪われるので、使用を禁止！', 'content': '<p>人類の長い歴史において、人手が余っているときには「機械が人間の仕事を奪っている！」といい、逆に人手が足りないときには「機械にやってもらおう！」となります。紀元一世紀ごろ、奴隷や貧民の仕事をなくさないために水車の使用を禁止したことがあります。一方で4世紀、豊富な労働力を誇っていたローマ帝国の拡大が止まると、奴隷の補給が困難となり労働力の不足に悩まされるようになり、人手を補うために水車の利用が促進されました。</p>\r\n\r\n<p>Photo by Pavel Gromadchuk on Unsplash</p>', 'references': '', 'rating': 0.0, 'rating_count': None, 'published_date': dateutil.parser.parse("2023-07-03T02:53:18.372662+00:00"), 'updated_date': dateutil.parser.parse("2023-07-03T02:53:18.393911+00:00")} ) 
    knowledge_knowledge_157.author =  importer.locate_object(UserAccount, "id", UserAccount, "id", 1, {'id': 1, 'password': 'pbkdf2_sha256$600000$Q9AwSzFqEXF1ueS21sGGfz$rZo+NVruXU5Zf5vp00wtuwLn0Z333sn5NtvS8VWKqds=', 'last_login': dateutil.parser.parse("2023-06-30T06:03:10.086511+00:00"), 'is_superuser': True, 'email': 'yurinakanishi33@gmail.com', 'name': 'yuri', 'is_active': True, 'is_staff': True} ) 
    knowledge_knowledge_157 = importer.save_or_locate(knowledge_knowledge_157)

    knowledge_knowledge_158 = Knowledge()
    knowledge_knowledge_158.name = 'Banning the use of watermills because they take all the work out of the watermills!'
    knowledge_knowledge_158.slug = 'banning-the-use-of-watermills-because-they-take-all-the-work-out-of-the-watermills'
    knowledge_knowledge_158.language =  importer.locate_object(Language, "id", Language, "id", 1, {'id': 1, 'name': 'en'} ) 
    knowledge_knowledge_158.genre_for_url =  importer.locate_object(GenreForURL, "id", GenreForURL, "id", 1, {'id': 1, 'name': 'knowledge'} ) 
    knowledge_knowledge_158.type = 'knowledge'
    knowledge_knowledge_158.notesite_url = 'https://note.com/argumented_world/n/na665b168861f'
    knowledge_knowledge_158.article =  importer.locate_object(Article, "id", Article, "id", 6257, {'id': 6257, 'excerpt': 'Banning the use of watermills because they take all the work out of the watermills!', 'kicker': 'Banning the use of watermills because they take all the work out of the watermills!', 'content': '<p>In the long history of mankind, when there is an excess of manpower, people say, "Machines are taking away human jobs! and when there is a shortage of labor, on the other hand, people say, "Let the machines do it!"</p>\r\n\r\n<p>Around the first century A.D., the use of water mills was banned to prevent slaves and the poor from losing their jobs. On the other hand, in the 4th century, when the Roman Empire, which boasted an abundant labor force, ceased to expand, it became difficult to supply slaves and suffered from a shortage of labor, and the use of waterwheels was promoted to supplement the labor force.</p>\r\n\r\n<p>Photo by Pavel Gromadchuk on Unsplash</p>', 'references': '', 'rating': 0.0, 'rating_count': None, 'published_date': dateutil.parser.parse("2023-07-03T02:53:18.372662+00:00"), 'updated_date': dateutil.parser.parse("2023-07-03T02:53:18.393911+00:00")} ) 
    knowledge_knowledge_158.author =  importer.locate_object(UserAccount, "id", UserAccount, "id", 1, {'id': 1, 'password': 'pbkdf2_sha256$600000$Q9AwSzFqEXF1ueS21sGGfz$rZo+NVruXU5Zf5vp00wtuwLn0Z333sn5NtvS8VWKqds=', 'last_login': dateutil.parser.parse("2023-06-30T06:03:10.086511+00:00"), 'is_superuser': True, 'email': 'yurinakanishi33@gmail.com', 'name': 'yuri', 'is_active': True, 'is_staff': True} ) 
    knowledge_knowledge_158 = importer.save_or_locate(knowledge_knowledge_158)

    knowledge_knowledge_159 = Knowledge()
    knowledge_knowledge_159.name = 'Back in the days when it was said Putting sentences on paper weakens your memory'
    knowledge_knowledge_159.slug = 'back-in-the-days-when-it-was-said-putting-sentences-on-paper-weakens-your-memory'
    knowledge_knowledge_159.language =  importer.locate_object(Language, "id", Language, "id", 1, {'id': 1, 'name': 'en'} ) 
    knowledge_knowledge_159.genre_for_url =  importer.locate_object(GenreForURL, "id", GenreForURL, "id", 1, {'id': 1, 'name': 'knowledge'} ) 
    knowledge_knowledge_159.type = 'knowledge'
    knowledge_knowledge_159.notesite_url = 'https://note.com/argumented_world/n/nd54ea09cd974'
    knowledge_knowledge_159.article =  importer.locate_object(Article, "id", Article, "id", 6258, {'id': 6258, 'excerpt': 'Back in the days when it was said Putting sentences on paper weakens your memory', 'kicker': 'Back in the days when it was said Putting sentences on paper weakens your memory', 'content': '<p>Today, we write letters on a daily basis, for example, to take notes or to write letters. However, in ancient times, there were two opinions about this act of writing. One side which we take for granted nowadays: "This is a new culture, so let\'s promote it! and the other side: We shouldn\'t do that!</p>\r\n\r\n<p>When writing began to spread widely in a culture where oral communication was the norm, there were voices on both sides of the argument. For example, before the 12th century, the prevailing view in England was that "anything written on paper is unreliable. Even if it was just a message, if it was deemed truly important, it was passed on orally!"</p>\r\n\r\n<p>I will write about the ideas of Plato and Socrates in the context of such values. Socrates is one of the leading philosophers of ancient Greece. He is so famous that even people who are not familiar with philosophy know him. He was an oral philosopher and never wrote a book. Socrates is reported to have said</p>\r\n\r\n<p>Next, let us look at the ideas of Plato, a disciple of Socrates. He, too, is famous as one of the leading philosophers of ancient Greece. Plato left a text called "Phaedrus" in the form of a dialogue between his teacher Socrates and a young man. In the "Phaedrus," he writes, "Knowledge is acquired through memory, so if you leave sentences behind, your memory will not be used and will decline.He also wrote</p>\r\n\r\n<p>Ironically, while writing these sentences, he left behind many written texts (including this one). While he embraced the new technology of "writing down," he also rebelled against it.</p>\r\n\r\n<p>Above all, most of the writings he left behind were in the form of dialogues. He was clearly conscious of the oral tradition. In the midst of shifting values, we can see how Plato was caught between two sets of values.</p>\r\n\r\n<p>------- He may have been quite influenced by his teacher Socrates\' commitment to the oral tradition.</p>\r\n\r\n<p>The opinion that "what is written on paper cannot be trusted," and that "true knowledge cannot be gained from the written word on paper," is not a common one among our contemporary. And it is similar to our opinion today that "written documents in the interne cannot be trusted" and "true knowledge cannot be obtained from the Internet.</p>\r\n\r\n<p>In this light, I wonder if the time will come when what is written on the Internet will be trusted. I think so. Maybe the time will come when people will no longer say, "wikipedeia is not acceptable as a reference!"</p>\r\n\r\n<p>Paper: Paging Through History by Mark Kurlansky</p>\r\n\r\n<p>Denise Jans on unsplash</p>\r\n\r\n<p>Wikimedia Commons</p>\r\n\r\n<p>Glyptothek, Public domain, via Wikimedia Commons</p>', 'references': '', 'rating': 0.0, 'rating_count': None, 'published_date': dateutil.parser.parse("2023-07-03T02:53:18.372662+00:00"), 'updated_date': dateutil.parser.parse("2023-07-03T02:53:18.393911+00:00")} ) 
    knowledge_knowledge_159.author =  importer.locate_object(UserAccount, "id", UserAccount, "id", 1, {'id': 1, 'password': 'pbkdf2_sha256$600000$Q9AwSzFqEXF1ueS21sGGfz$rZo+NVruXU5Zf5vp00wtuwLn0Z333sn5NtvS8VWKqds=', 'last_login': dateutil.parser.parse("2023-06-30T06:03:10.086511+00:00"), 'is_superuser': True, 'email': 'yurinakanishi33@gmail.com', 'name': 'yuri', 'is_active': True, 'is_staff': True} ) 
    knowledge_knowledge_159 = importer.save_or_locate(knowledge_knowledge_159)

    knowledge_knowledge_160 = Knowledge()
    knowledge_knowledge_160.name = ''
    knowledge_knowledge_160.slug = 'back-in-the-days-when-it-was-said,-putting-sentences-on-paper-weakens-your-memory.mdx-jp'
    knowledge_knowledge_160.language =  importer.locate_object(Language, "id", Language, "id", 2, {'id': 2, 'name': 'jp'} ) 
    knowledge_knowledge_160.genre_for_url =  importer.locate_object(GenreForURL, "id", GenreForURL, "id", 1, {'id': 1, 'name': 'knowledge'} ) 
    knowledge_knowledge_160.type = 'knowledge'
    knowledge_knowledge_160.notesite_url = 'https://note.com/argumented_world/n/nd54ea09cd974'
    knowledge_knowledge_160.article =  importer.locate_object(Article, "id", Article, "id", 6259, {'id': 6259, 'excerpt': '', 'kicker': '', 'content': '<p>現代の私たちは、何かをメモする、とか、手紙を書く、など、日常的に文字を書いています。しかし、この今では当たり前に行なっている、文字を書くという行為に対して古代では、新しい文化だから推し進めよう！という意見とこんなことはすべきじゃない！という意見の2つに分かれていた時がありました。口伝（話して伝えること）が一般的な中で、文字を書くことが広く普及し始めたときには、賛否両論の声がありました。例えば、12世紀以前イングランドでは「紙に書かれたものは信用できない」という考えが一般的でした。例え、伝言の一つであっても、真に重要だと判断されれば口頭で伝えられていたそうですそんな価値観の中での、プラトンとソクラテスの考えについて書いていきます。</p>\r\n\r\n<p>ソクラテスは、古代ギリシャを代表する哲学者の1人です。彼は哲学に詳しくない人でも知っているくらい、有名です。そして彼は、口授（話すことのみで教えを伝える）の哲学者で、著書はありません。ソクラテスはこう言ったと伝えられています。</p>\r\n\r\n<p>次に、ソクラテスの弟子であるプラトンの考えを見ていきましょう。彼もまた古代ギリシャを代表する哲学者の1人として有名ですね。プラトンは、師匠のソクラテスと若者が対話するという形式で『パイドロス』という文章を残しています。『パイドロス』の中には、知識は記憶を通して獲得されるので文章を書き残すと、記憶力が使われずに衰えていってしまう。と書かれています。また、彼は以下のように書いています。</p>\r\n\r\n<p><p className={`${pStyle} ${citationStyle}`}></p>\r\n\r\n<p>  「なにかが書かれると、すなわち作文ができあがると、書かれていることがなんであろうと、あちらこちらを漂ったあげく、それを理解する者の手に渡るだけでなく、そんなものとは無縁の者の手にまで渡ってしまう。作文は、どうすれば言葉を、伝えるべき人々に伝え、伝えるべきでない人々には伝えないでいられるかを知らない」</p>\r\n\r\n<p>皮肉にも、このような文章を書きながらも、彼は（この著作を含めて）多くの書かれた文章を残しています。「書き残す」という新しいテクノロジーを取り入れながらも、それに反発していたのです。そして、なにより彼の残した著作のほとんどは対話形式でした。口伝という形を、明らかに意識していますね。価値観の移り変わりの中で、プラトンが2つの価値観に板挟みになっている様子が見てとれます。師匠のソクラテスの口伝に対するこだわりの影響をかなり受けていたのかもしれません。</p>\r\n\r\n<p>「筆記」と「ネット」</p>\r\n\r\n<p>「紙に書かれたものは信用できない」「紙に書かれた文章からは真の知識得られない」という意見は、現代の私たちの「ネットに書かれたものは信用できない」「ネットからは真の知識得られない」という意見と似ていますね。そう考えてみると、これから、ネットに書かれているものが信用される時代が来るのかも？と思います。「wikipedeiaは参考文献としては認めません！」と言われなくなる時代が来るのかもしれません。</p>\r\n\r\n<p>マーク カーランスキー(著)\u3000川副 智子 (翻訳)\u3000徳間書店</p>\r\n\r\n<p>『 紙の世界史: PAPER 歴史に突き動かされた技術』</p>\r\n\r\n<p>Denise Jans\u3000on unsplash</p>\r\n\r\n<p>スティング, CC BY-SA 2.5 https://creativecommons.org/licenses/by-sa/2.5, via Wikimedia Commons</p>\r\n\r\n<p>Glyptothek, Public domain, via Wikimedia Commons</p>', 'references': '', 'rating': 0.0, 'rating_count': None, 'published_date': dateutil.parser.parse("2023-07-03T02:53:18.372662+00:00"), 'updated_date': dateutil.parser.parse("2023-07-03T02:53:18.393911+00:00")} ) 
    knowledge_knowledge_160.author =  importer.locate_object(UserAccount, "id", UserAccount, "id", 1, {'id': 1, 'password': 'pbkdf2_sha256$600000$Q9AwSzFqEXF1ueS21sGGfz$rZo+NVruXU5Zf5vp00wtuwLn0Z333sn5NtvS8VWKqds=', 'last_login': dateutil.parser.parse("2023-06-30T06:03:10.086511+00:00"), 'is_superuser': True, 'email': 'yurinakanishi33@gmail.com', 'name': 'yuri', 'is_active': True, 'is_staff': True} ) 
    knowledge_knowledge_160 = importer.save_or_locate(knowledge_knowledge_160)

    knowledge_knowledge_161 = Knowledge()
    knowledge_knowledge_161.name = ''
    knowledge_knowledge_161.slug = 'are-the-powerpoints-helpful-jp'
    knowledge_knowledge_161.language =  importer.locate_object(Language, "id", Language, "id", 2, {'id': 2, 'name': 'jp'} ) 
    knowledge_knowledge_161.genre_for_url =  importer.locate_object(GenreForURL, "id", GenreForURL, "id", 1, {'id': 1, 'name': 'knowledge'} ) 
    knowledge_knowledge_161.type = 'knowledge'
    knowledge_knowledge_161.notesite_url = 'https://note.com/argumented_world/n/n809571bc643c'
    knowledge_knowledge_161.article =  importer.locate_object(Article, "id", Article, "id", 6260, {'id': 6260, 'excerpt': '', 'kicker': '', 'content': '<p>基本的にテクノロジーの進歩は、時間や労力を節約して生産性を上げることが目的です。しかし、反生産性という言葉があります。新しいテクノロジーによって生産性が落ちてしまっているというものです。今回は、使い方によっては反生産性になってしまうものを紹介します。</p>\r\n\r\n<p>パワーポイントは、会議で分かりやすく説明して、みんなに理解してもらいやすくして、時間を節約するために使うものです。しかし、パワーポイントをきれいに、かっこよく作ることにこだわるあまり、結局膨大な時間をパワーポイント作成に費やして、生産性は落ちてしまうということがあります。</p>\r\n\r\n<p>車は、もともとは早く移動して時間を節約するために購入するものです。しかし、車を買うと、車の購入費や維持費がかかります。そのお金を稼ぐためには働かなくてはいけません。そして、働くということは、自分の時間をお金に換えるということです。以上のことから結局、車を購入してもそれほど時間を節約できていないということになります。</p>\r\n\r\n<p>『Think clearly 最新の学術研究から導いた、よりよい人生を送るための思考法 』</p>\r\n\r\n<p>ロルフ・ドベリ (著)\u3000安原実津 (訳)</p>', 'references': '', 'rating': 0.0, 'rating_count': None, 'published_date': dateutil.parser.parse("2023-07-03T02:53:18.372662+00:00"), 'updated_date': dateutil.parser.parse("2023-07-03T02:53:18.393911+00:00")} ) 
    knowledge_knowledge_161.author =  importer.locate_object(UserAccount, "id", UserAccount, "id", 1, {'id': 1, 'password': 'pbkdf2_sha256$600000$Q9AwSzFqEXF1ueS21sGGfz$rZo+NVruXU5Zf5vp00wtuwLn0Z333sn5NtvS8VWKqds=', 'last_login': dateutil.parser.parse("2023-06-30T06:03:10.086511+00:00"), 'is_superuser': True, 'email': 'yurinakanishi33@gmail.com', 'name': 'yuri', 'is_active': True, 'is_staff': True} ) 
    knowledge_knowledge_161 = importer.save_or_locate(knowledge_knowledge_161)

    knowledge_knowledge_162 = Knowledge()
    knowledge_knowledge_162.name = 'Are the PowerPoints helpful?'
    knowledge_knowledge_162.slug = 'are-the-powerpoints-helpful'
    knowledge_knowledge_162.language =  importer.locate_object(Language, "id", Language, "id", 1, {'id': 1, 'name': 'en'} ) 
    knowledge_knowledge_162.genre_for_url =  importer.locate_object(GenreForURL, "id", GenreForURL, "id", 1, {'id': 1, 'name': 'knowledge'} ) 
    knowledge_knowledge_162.type = 'knowledge'
    knowledge_knowledge_162.notesite_url = 'https://note.com/argumented_world/n/n809571bc643c'
    knowledge_knowledge_162.article =  importer.locate_object(Article, "id", Article, "id", 6261, {'id': 6261, 'excerpt': 'Are the PowerPoints helpful?', 'kicker': 'Are the PowerPoints helpful?', 'content': '<p>Basically, technological advances are intended to increase productivity by saving time and effort. However, there is a term called counter productivity. It means that new technology is making us less productive. In this article, we will introduce some of the things that can become counterproductive depending on how they are used.</p>\r\n\r\n<p>PowerPoint is used in meetings to explain things clearly, make it easier for everyone to understand, and save time. However, sometimes we are so focused on making PowerPoints pretty and cool that we end up spending a huge amount of time creating PowerPoints, and our productivity suffers.</p>\r\n\r\n<p>Cars are originally purchased to get around faster and save time. However, when you buy a car, you have to pay for the car and its maintenance, car insurance etc. To earn that money, you have to work. And working means exchanging your time for money.</p>\r\n\r\n<p>All of the above means that, in the end, buying a car does not save you that much time.</p>\r\n\r\n<p>The Art of Thinking Clearly by Rolf Dobelli</p>', 'references': '', 'rating': 0.0, 'rating_count': None, 'published_date': dateutil.parser.parse("2023-07-03T02:53:18.372662+00:00"), 'updated_date': dateutil.parser.parse("2023-07-03T02:53:18.393911+00:00")} ) 
    knowledge_knowledge_162.author =  importer.locate_object(UserAccount, "id", UserAccount, "id", 1, {'id': 1, 'password': 'pbkdf2_sha256$600000$Q9AwSzFqEXF1ueS21sGGfz$rZo+NVruXU5Zf5vp00wtuwLn0Z333sn5NtvS8VWKqds=', 'last_login': dateutil.parser.parse("2023-06-30T06:03:10.086511+00:00"), 'is_superuser': True, 'email': 'yurinakanishi33@gmail.com', 'name': 'yuri', 'is_active': True, 'is_staff': True} ) 
    knowledge_knowledge_162 = importer.save_or_locate(knowledge_knowledge_162)

    knowledge_knowledge_163 = Knowledge()
    knowledge_knowledge_163.name = ''
    knowledge_knowledge_163.slug = 'are-people-who-make-a-lot-of-errors-less-competent-jp'
    knowledge_knowledge_163.language =  importer.locate_object(Language, "id", Language, "id", 2, {'id': 2, 'name': 'jp'} ) 
    knowledge_knowledge_163.genre_for_url =  importer.locate_object(GenreForURL, "id", GenreForURL, "id", 1, {'id': 1, 'name': 'knowledge'} ) 
    knowledge_knowledge_163.type = 'knowledge'
    knowledge_knowledge_163.notesite_url = 'https://note.com/argumented_world/n/n0be8000ff03d'
    knowledge_knowledge_163.article =  importer.locate_object(Article, "id", Article, "id", 6262, {'id': 6262, 'excerpt': '', 'kicker': '', 'content': '<p>あなたは、野球のスカウトマンです。監督から、守備が優秀な野球選手を見つけてくるように言われました。試合が行なわれている野球場に見に行ってみると、エラーをほとんどしない選手と、よくエラーをする選手がいました。どちらを選んだほうがいいでしょうか？直感的にはエラーをほとんどしない選手を選びたくなってしまいますが、よく考えてみると、その判断は間違っている可能性があります。それの理由は、反応速度が遅かったり足が遅くてボールに追いつくことができない人は、そもそもボールに触れていないので、エラーではなく、ヒット判定になってしまうという点です。</p>\r\n\r\n<p>足が遅い選手は、そもそもキャッチするかエラーしてしまうかという段階になる守備範囲が狭いともいえます。それに対して足が速い選手は、ボール簡単に捕球できるところまで行けています。簡単に捕球できるということは、そこでミスってボールを落としてしまったらエラー判定になります。仮に、選手がエラーをする確率が同じだとしましょう。そうすると、守備範囲が広い選手の方が守備範囲が狭い選手よりもエラーの数は多くなってしまいます。もちろんエラーが多い人の中には、ただ単にボールのキャッチが苦手な選手もいますが。</p>\r\n\r\n<p>このように、ぱっと見のある成績のみで選手を判断すると、間違った判断を下してしまうことがあります。もしかしたら、人生においてもそうかもしれません。たくさん失敗している人は、一見、能力がないように思えるかもしれませんが、それだけたくさん挑戦して、チャレンジしている人なのかもしれません。</p>\r\n\r\n<p>シグナル&ノイズ 天才データアナリストの「予測学」</p>\r\n\r\n<p>ネイト・シルバー (著)、西内啓、川添節子 (翻訳)</p>\r\n\r\n<p>pixabay on pixels</p>', 'references': '', 'rating': 0.0, 'rating_count': None, 'published_date': dateutil.parser.parse("2023-07-03T02:53:18.372662+00:00"), 'updated_date': dateutil.parser.parse("2023-07-03T02:53:18.393911+00:00")} ) 
    knowledge_knowledge_163.author =  importer.locate_object(UserAccount, "id", UserAccount, "id", 1, {'id': 1, 'password': 'pbkdf2_sha256$600000$Q9AwSzFqEXF1ueS21sGGfz$rZo+NVruXU5Zf5vp00wtuwLn0Z333sn5NtvS8VWKqds=', 'last_login': dateutil.parser.parse("2023-06-30T06:03:10.086511+00:00"), 'is_superuser': True, 'email': 'yurinakanishi33@gmail.com', 'name': 'yuri', 'is_active': True, 'is_staff': True} ) 
    knowledge_knowledge_163 = importer.save_or_locate(knowledge_knowledge_163)

    knowledge_knowledge_164 = Knowledge()
    knowledge_knowledge_164.name = 'Are people who make a lot of errors less competent?'
    knowledge_knowledge_164.slug = 'are-people-who-make-a-lot-of-errors-less-competent'
    knowledge_knowledge_164.language =  importer.locate_object(Language, "id", Language, "id", 1, {'id': 1, 'name': 'en'} ) 
    knowledge_knowledge_164.genre_for_url =  importer.locate_object(GenreForURL, "id", GenreForURL, "id", 1, {'id': 1, 'name': 'knowledge'} ) 
    knowledge_knowledge_164.type = 'knowledge'
    knowledge_knowledge_164.notesite_url = 'https://note.com/argumented_world/n/n0be8000ff03d'
    knowledge_knowledge_164.article =  importer.locate_object(Article, "id", Article, "id", 6263, {'id': 6263, 'excerpt': 'Are people who make a lot of errors less competent?', 'kicker': 'Are people who make a lot of errors less competent?', 'content': "<p>You are a baseball scout. The manager has asked you to find a baseball player who is an excellent defender.</p>\r\n\r\n<p>When you go to the baseball stadium where a game is being played, you find one player who makes few errors and another who makes errors frequently. Then, which one should I choose?</p>\r\n\r\n<p>Intuitively, you may be tempted to choose the player who makes few errors, but if you think about it, your decision may be wrong.</p>\r\n\r\n<p>The reason for this is that someone with slow reaction time or slow feet who cannot catch up to the ball would not have touched it in the first place, and therefore the play would be judged a hit, not an error.</p>\r\n\r\n<p>It can be said that players with slow feet have a narrow defensive range that reaches the stage of either catching the ball or making an error in the first place.</p>\r\n\r\n<p>On the other hand, players with fast reaction/feet can catch up to the ball easily. If the ball is caught up easily, it will be judged as an error if the player makes a mistake and drops the ball.</p>\r\n\r\n<p>Suppose that players have the same probability of making an error. Then a player with a wider defensive range will make more errors than a player with a narrower defensive range.</p>\r\n\r\n<p>Of course, some players who make more errors are simply not good at catching the ball. Thus, judging a player based solely on a quick look at his or her performance may lead to a wrong decision.</p>\r\n\r\n<p>Perhaps this is true in life as well. A person who fails a lot may not seem capable at first glance, but he or she may be someone who tries so much and takes on so many.</p>\r\n\r\n<p>The Signal and the Noise: Why So Many Predictions Fail--but Some Don't</p>", 'references': '', 'rating': 0.0, 'rating_count': None, 'published_date': dateutil.parser.parse("2023-07-03T02:53:18.372662+00:00"), 'updated_date': dateutil.parser.parse("2023-07-03T02:53:18.393911+00:00")} ) 
    knowledge_knowledge_164.author =  importer.locate_object(UserAccount, "id", UserAccount, "id", 1, {'id': 1, 'password': 'pbkdf2_sha256$600000$Q9AwSzFqEXF1ueS21sGGfz$rZo+NVruXU5Zf5vp00wtuwLn0Z333sn5NtvS8VWKqds=', 'last_login': dateutil.parser.parse("2023-06-30T06:03:10.086511+00:00"), 'is_superuser': True, 'email': 'yurinakanishi33@gmail.com', 'name': 'yuri', 'is_active': True, 'is_staff': True} ) 
    knowledge_knowledge_164 = importer.save_or_locate(knowledge_knowledge_164)

    knowledge_knowledge_165 = Knowledge()
    knowledge_knowledge_165.name = 'シーズン終わりには攻撃的になる'
    knowledge_knowledge_165.slug = 'aggressive-at-the-end-of-the-season-jp'
    knowledge_knowledge_165.language =  importer.locate_object(Language, "id", Language, "id", 2, {'id': 2, 'name': 'jp'} ) 
    knowledge_knowledge_165.genre_for_url =  importer.locate_object(GenreForURL, "id", GenreForURL, "id", 1, {'id': 1, 'name': 'knowledge'} ) 
    knowledge_knowledge_165.type = 'knowledge'
    knowledge_knowledge_165.notesite_url = 'https://note.com/argumented_world/n/n1a34285df1c2'
    knowledge_knowledge_165.article =  importer.locate_object(Article, "id", Article, "id", 6264, {'id': 6264, 'excerpt': 'シーズン終わりには攻撃的になる', 'kicker': 'シーズン終わりには攻撃的になる', 'content': '<p>アメリカのバスケットボールリーグのNBAは有名ですよね。そんなNBAのシーズン終わりには、お互いのチームが高得点になる試合が多くなりやすいと言われています。</p>\r\n\r\n<p>シーズン終わる頃には、残す試合はほとんどなく、チームのランキングはほぼ決まっているため、勝利よりも、オフェンスの選手の得点を稼ぐような動きになるからです。一般的に、ディフェンスが得点を防ぐことよりも、オフェンスの得点が多いことの方が、チームの高評価につながります。たくさん得点を取ったチームの方が強いと感じられるのって、なんか分かりますよね。</p>\r\n\r\n<p>スポーツリーグによっては、下位のチームからドラフトできる（優秀な新人選手を取りやすくなる）制度があり、プレーオフに行けないのなら、負けてランキングを落とした方が良いという場合もあるようです。そして、そのような攻撃的なプレーをすると、そのチームの得点が伸びるのと同時にカウンターを食らったときに相手に得点を入れられやすくなるので、自分と相手のチームの得点が両方伸びることになります。</p>\r\n\r\n<p>なのでスポーツの賭けなどをしていて、得点の予想をするときには、シーズン終わりには得点を大目に予想してみるのもありかもしれません。日本では、野球やサッカーでも同じようなことがあるかもしれません。 サッカーでは、バスケットボールと同じように、攻撃的なプレーになったり、野球では、シーズン終わりにはホームランを狙うことが多くなる、とかがありそうです。</p>\r\n\r\n<p>シグナル&ノイズ 天才データアナリストの「予測学」</p>\r\n\r\n<p>ネイト・シルバー (著)、西内啓、川添節子 (翻訳)</p>\r\n\r\n<p>Photo by Markus Spiske on Unsplash</p>', 'references': '', 'rating': 0.0, 'rating_count': None, 'published_date': dateutil.parser.parse("2023-07-03T02:53:18.372662+00:00"), 'updated_date': dateutil.parser.parse("2023-07-03T02:53:18.393911+00:00")} ) 
    knowledge_knowledge_165.author =  importer.locate_object(UserAccount, "id", UserAccount, "id", 1, {'id': 1, 'password': 'pbkdf2_sha256$600000$Q9AwSzFqEXF1ueS21sGGfz$rZo+NVruXU5Zf5vp00wtuwLn0Z333sn5NtvS8VWKqds=', 'last_login': dateutil.parser.parse("2023-06-30T06:03:10.086511+00:00"), 'is_superuser': True, 'email': 'yurinakanishi33@gmail.com', 'name': 'yuri', 'is_active': True, 'is_staff': True} ) 
    knowledge_knowledge_165 = importer.save_or_locate(knowledge_knowledge_165)

    knowledge_knowledge_166 = Knowledge()
    knowledge_knowledge_166.name = 'Aggressive at the end of the season.'
    knowledge_knowledge_166.slug = 'aggressive-at-the-end-of-the-season'
    knowledge_knowledge_166.language =  importer.locate_object(Language, "id", Language, "id", 1, {'id': 1, 'name': 'en'} ) 
    knowledge_knowledge_166.genre_for_url =  importer.locate_object(GenreForURL, "id", GenreForURL, "id", 1, {'id': 1, 'name': 'knowledge'} ) 
    knowledge_knowledge_166.type = 'knowledge'
    knowledge_knowledge_166.notesite_url = 'https://note.com/argumented_world/n/n1a34285df1c2'
    knowledge_knowledge_166.article =  importer.locate_object(Article, "id", Article, "id", 6265, {'id': 6265, 'excerpt': 'Aggressive at the end of the season.', 'kicker': 'Aggressive at the end of the season.', 'content': "<p>In the NBA,it is said that at the end of such an NBA season, there tend to be many high-scoring games for both teams.</p>\r\n\r\n<p>This is because by the end of the season, there are few games left and the team rankings are almost set, so the offensive players are more likely to score points than win.</p>\r\n\r\n<p>In general, more points scored by the offense will lead to a higher rating for the team than preventing the defense from scoring. It's kind of understandable that a team that scores a lot of points feels stronger.</p>\r\n\r\n<p>Some sports leagues have a system where you can draft from lower ranked teams ;making it easier to get good new players, and if you can't make the playoffs, you might as well lose and lose your ranking.</p>\r\n\r\n<p>And when you play in such an aggressive manner, it is easier for your team to score more points and for your opponent to score more points when they counter, so both you and your opponent's team will score more points.</p>\r\n\r\n<p>So when you are betting on sports and predicting scores, you may want to take a large guess  at the score at the end of the season than usual.</p>\r\n\r\n<p>As in basketball, in soccer, you might play more aggressively, or in baseball, you might try for more home runs at the end of the season, and so on.</p>\r\n\r\n<p>The Signal and the Noise: Why So Many Predictions Fail--but Some Don't</p>", 'references': '', 'rating': 0.0, 'rating_count': None, 'published_date': dateutil.parser.parse("2023-07-03T02:53:18.372662+00:00"), 'updated_date': dateutil.parser.parse("2023-07-03T02:53:18.393911+00:00")} ) 
    knowledge_knowledge_166.author =  importer.locate_object(UserAccount, "id", UserAccount, "id", 1, {'id': 1, 'password': 'pbkdf2_sha256$600000$Q9AwSzFqEXF1ueS21sGGfz$rZo+NVruXU5Zf5vp00wtuwLn0Z333sn5NtvS8VWKqds=', 'last_login': dateutil.parser.parse("2023-06-30T06:03:10.086511+00:00"), 'is_superuser': True, 'email': 'yurinakanishi33@gmail.com', 'name': 'yuri', 'is_active': True, 'is_staff': True} ) 
    knowledge_knowledge_166 = importer.save_or_locate(knowledge_knowledge_166)

    knowledge_knowledge_167 = Knowledge()
    knowledge_knowledge_167.name = 'ミルクを飲んだ後は、胃の中で腐らないように、じっとしていましょう。'
    knowledge_knowledge_167.slug = 'after-drinking-milk-stay-still-to-prevent-it-from-rotting-in-the-stomach-jp'
    knowledge_knowledge_167.language =  importer.locate_object(Language, "id", Language, "id", 2, {'id': 2, 'name': 'jp'} ) 
    knowledge_knowledge_167.genre_for_url =  importer.locate_object(GenreForURL, "id", GenreForURL, "id", 1, {'id': 1, 'name': 'knowledge'} ) 
    knowledge_knowledge_167.type = 'knowledge'
    knowledge_knowledge_167.notesite_url = 'https://note.com/argumented_world/n/n22657a9116f4'
    knowledge_knowledge_167.article =  importer.locate_object(Article, "id", Article, "id", 6266, {'id': 6266, 'excerpt': 'ミルクを飲んだ後は、胃の中で腐らないように、じっとしていましょう。', 'kicker': 'ミルクを飲んだ後は、胃の中で腐らないように、じっとしていましょう。', 'content': '<p>古代ヨーロッパでは、多くの人がミルクは空腹時に飲むべきだと考えていました。理由は、胃の中の食べものによってミルクが固まってしまい危険だからです。ローマ帝国時代のギリシャの医学者であるガレノスは、この考えを広めた人物の1人で、ミルクが固まることを防ぐために、新鮮なミルクにハチミツや塩やミントを混ぜて飲んだほうがいいと言っています。彼は中世の多くの料理研究家や医学者に影響を与えました。中世の料理研究家であるプラティナは、</p>\r\n\r\n<p>と書き残しています。 実際私たちがミルクを飲むと、胃の中で腐ることはありませんが、固まるというのは間違いではないようです。ミルクは胃酸と混ざって、水分とたんぱく質を含んだ固形物に分解されるので、ミルクは自然と胃の中で固まって消化されることが、現代では分かっています。</p>\r\n\r\n<p>彼らが、胃の中で牛乳が固まると思った理由のひとつは、バターは牛乳を振って作るものだから、だとも思いました。</p>\r\n\r\n<p>『ミルク進化論 なぜ人は、これほどミルクを愛するのか? 』\u3000マークマーク・カーランスキー (著), 髙山祥子 (翻訳)</p>\r\n\r\n<p>使用させて頂いた画像</p>\r\n\r\n<p>Sara Cervera on Unsplash</p>', 'references': '', 'rating': 0.0, 'rating_count': None, 'published_date': dateutil.parser.parse("2023-07-03T02:53:18.372662+00:00"), 'updated_date': dateutil.parser.parse("2023-07-03T02:53:18.393911+00:00")} ) 
    knowledge_knowledge_167.author =  importer.locate_object(UserAccount, "id", UserAccount, "id", 1, {'id': 1, 'password': 'pbkdf2_sha256$600000$Q9AwSzFqEXF1ueS21sGGfz$rZo+NVruXU5Zf5vp00wtuwLn0Z333sn5NtvS8VWKqds=', 'last_login': dateutil.parser.parse("2023-06-30T06:03:10.086511+00:00"), 'is_superuser': True, 'email': 'yurinakanishi33@gmail.com', 'name': 'yuri', 'is_active': True, 'is_staff': True} ) 
    knowledge_knowledge_167 = importer.save_or_locate(knowledge_knowledge_167)

    knowledge_knowledge_168 = Knowledge()
    knowledge_knowledge_168.name = 'After drinking milk, stay still to prevent it from rotting in the stomach'
    knowledge_knowledge_168.slug = 'after-drinking-milk-stay-still-to-prevent-it-from-rotting-in-the-stomach'
    knowledge_knowledge_168.language =  importer.locate_object(Language, "id", Language, "id", 1, {'id': 1, 'name': 'en'} ) 
    knowledge_knowledge_168.genre_for_url =  importer.locate_object(GenreForURL, "id", GenreForURL, "id", 1, {'id': 1, 'name': 'knowledge'} ) 
    knowledge_knowledge_168.type = 'knowledge'
    knowledge_knowledge_168.notesite_url = 'https://note.com/argumented_world/n/n22657a9116f4'
    knowledge_knowledge_168.article =  importer.locate_object(Article, "id", Article, "id", 6267, {'id': 6267, 'excerpt': 'After drinking milk, stay still to prevent it from rotting in the stomach', 'kicker': 'After drinking milk, stay still to prevent it from rotting in the stomach', 'content': '<p>In ancient Europe, many people believed that milk should be consumed on an empty stomach. The reason was that the milk would be hardened by the food in the stomach, making it dangerous.</p>\r\n\r\n<p>Galen, a Greek physician during the Roman Empire, was one of those who popularized this idea. He said, "To prevent milk from curdling, it is better to drink fresh milk mixed with honey, salt, or mint. His idea influenced many medieval cooks and medical doctors. Platina, a medieval cookery researcher left a note that</p>\r\n\r\n<p>Galen\'s solution to this was to always mix fresh milk with honey. However, he himself admits that this does not work for everyone.</p>\r\n\r\n<p>In fact, when we drink milk, it does not putrefy in the stomach, but it is not wrong to say that it hardens. We know nowadays that milk naturally hardens and is digested in the stomach because it mixes with stomach acid and is broken down into solids containing water and protein.</p>\r\n\r\n<p>The one reason why they thought milk would be hardened in their stomach is butter is made with shaking from milk, I think.</p>\r\n\r\n<p>Milk!: A 10,000-Year Food Fracas</p>\r\n\r\n<p>Sara Cervera on Unsplash</p>', 'references': '', 'rating': 0.0, 'rating_count': None, 'published_date': dateutil.parser.parse("2023-07-03T02:53:18.372662+00:00"), 'updated_date': dateutil.parser.parse("2023-07-03T02:53:18.393911+00:00")} ) 
    knowledge_knowledge_168.author =  importer.locate_object(UserAccount, "id", UserAccount, "id", 1, {'id': 1, 'password': 'pbkdf2_sha256$600000$Q9AwSzFqEXF1ueS21sGGfz$rZo+NVruXU5Zf5vp00wtuwLn0Z333sn5NtvS8VWKqds=', 'last_login': dateutil.parser.parse("2023-06-30T06:03:10.086511+00:00"), 'is_superuser': True, 'email': 'yurinakanishi33@gmail.com', 'name': 'yuri', 'is_active': True, 'is_staff': True} ) 
    knowledge_knowledge_168 = importer.save_or_locate(knowledge_knowledge_168)

    knowledge_knowledge_169 = Knowledge()
    knowledge_knowledge_169.name = ''
    knowledge_knowledge_169.slug = 'a-worse-keeps-up-with-a-gambling-jp'
    knowledge_knowledge_169.language =  importer.locate_object(Language, "id", Language, "id", 2, {'id': 2, 'name': 'jp'} ) 
    knowledge_knowledge_169.genre_for_url =  importer.locate_object(GenreForURL, "id", GenreForURL, "id", 1, {'id': 1, 'name': 'knowledge'} ) 
    knowledge_knowledge_169.type = 'knowledge'
    knowledge_knowledge_169.notesite_url = 'https://note.com/argumented_world/n/n371c1e98b988'
    knowledge_knowledge_169.article =  importer.locate_object(Article, "id", Article, "id", 6268, {'id': 6268, 'excerpt': '', 'kicker': '', 'content': '<p>ギャンブルでは、1人のめちゃくちゃ弱いカモのプレイヤーが、他の大勢の稼ぎ生んでいる場合が多い、ということです。カモとは、そのギャンブルが上手くない人です。カモが多いのは、ギャンブルでブームが起った時です。ブームが起ると夢を見た初心者が多く参入してきて、そういった初心者がカモにされます。ポーカーの一つのテキサスホールデムにおける統計データでは、一番弱いプレイヤーが、一番強いプレーヤーをはるかにしのぐ勢いでお金を失っています。一番強いプレーヤー100ゲーム毎に平均110ドル稼ぎますが、一番弱いプレイヤーは、100ゲーム毎に平均400ドル損をしているらしいです。ちなみに、毎回、私は賭けませんという選択をしても150ドルの損で済むそうです。この本の筆者は、ポーカーブームの時に冷静な分析と戦略を使って稼ぐことができましたが、ブームが終わると、損をするようになりました。 ポーカーを描いた映画「ラウンダーズ」で、こんなセリフがあります。</p>\r\n\r\n<p>テーブルについて最初の30分でカモを見つけられなかったら、自分がカモだと思え。実際にはカモがいない場合もあるので、この言葉は絶対に正しいとは言えませんが、弱いプレイヤーが周りに見当たらないのであればそこでプレーすべきでないという指摘は、かなり当たっています。このことは、賭け麻雀（法律上違法となっています）でも、当てはまるでしょう。あと、日本でカジノが合法化されたら、初心者が大量に参入してくるので、ポーカーが強い人は稼ぎ時かもしれませんね。</p>\r\n\r\n<p>シグナル&ノイズ 天才データアナリストの「予測学」</p>\r\n\r\n<p>ネイト・シルバー (著)、西内啓、川添節子 (翻訳)349</p>', 'references': '', 'rating': 0.0, 'rating_count': None, 'published_date': dateutil.parser.parse("2023-07-03T02:53:18.372662+00:00"), 'updated_date': dateutil.parser.parse("2023-07-03T02:53:18.393911+00:00")} ) 
    knowledge_knowledge_169.author =  importer.locate_object(UserAccount, "id", UserAccount, "id", 1, {'id': 1, 'password': 'pbkdf2_sha256$600000$Q9AwSzFqEXF1ueS21sGGfz$rZo+NVruXU5Zf5vp00wtuwLn0Z333sn5NtvS8VWKqds=', 'last_login': dateutil.parser.parse("2023-06-30T06:03:10.086511+00:00"), 'is_superuser': True, 'email': 'yurinakanishi33@gmail.com', 'name': 'yuri', 'is_active': True, 'is_staff': True} ) 
    knowledge_knowledge_169 = importer.save_or_locate(knowledge_knowledge_169)

    knowledge_knowledge_170 = Knowledge()
    knowledge_knowledge_170.name = 'Easy mark is spinning the gamble'
    knowledge_knowledge_170.slug = 'a-worse-keeps-up-with-a-gambling'
    knowledge_knowledge_170.language =  importer.locate_object(Language, "id", Language, "id", 1, {'id': 1, 'name': 'en'} ) 
    knowledge_knowledge_170.genre_for_url =  importer.locate_object(GenreForURL, "id", GenreForURL, "id", 1, {'id': 1, 'name': 'knowledge'} ) 
    knowledge_knowledge_170.type = 'knowledge'
    knowledge_knowledge_170.notesite_url = 'https://note.com/argumented_world/n/n371c1e98b988'
    knowledge_knowledge_170.article =  importer.locate_object(Article, "id", Article, "id", 6269, {'id': 6269, 'excerpt': 'Easy mark is spinning the gamble', 'kicker': 'Easy mark is spinning the gamble', 'content': '<p>In gambling, one insanely weak sucker player is often the one who makes a lot of money for a lot of other players. A sucker is someone who is not a good gambler. The most suckers are when there is a boom in gambling. When a boom occurs, many dreaming beginners enter the game, and these beginners become suckers.</p>\r\n\r\n<p>Statistics in Texas hold\'em poker show that the weakest players are losing money at a rate that far exceeds that of the strongest players. The strongest players make an average of $110 per 100 games, while the weakest players lose an average of $400 per 100 games. By the way, if they choose fold: not to bet , at the first turn every time, they only lose $150. The author of this book was able to make money during the poker boom by using calm analysis and strategy, but when the boom ended, he started losing money.</p>\r\n\r\n<p>In the movie "Rounders" about poker, there is this line</p>\r\n\r\n<p>"If you don\'t find a sucker in the first 30 minutes at the table, consider yourself a sucker." While this statement is not absolutely true, as there may in fact be no suckers, it is quite true to point out that if you don\'t see any weak players around, you shouldn\'t play there.</p>\r\n\r\n<p>This would also apply to betting mahjong etc. Now, the casino is illegal in Japan, but if casinos are legalized in Japan ute, there will be a large number of beginners entering the market, so it may be a good time to make money if you are a strong poker player.</p>\r\n\r\n<p>Signal & Noise: The "Predictive Science" of a Genius Data Analyst</p>\r\n\r\n<p>Nate Silver (Author), Kei Nishiuchi, Setsuko Kawazoe (Translator) 349</p>', 'references': '', 'rating': 0.0, 'rating_count': None, 'published_date': dateutil.parser.parse("2023-07-03T02:53:18.372662+00:00"), 'updated_date': dateutil.parser.parse("2023-07-03T02:53:18.393911+00:00")} ) 
    knowledge_knowledge_170.author =  importer.locate_object(UserAccount, "id", UserAccount, "id", 1, {'id': 1, 'password': 'pbkdf2_sha256$600000$Q9AwSzFqEXF1ueS21sGGfz$rZo+NVruXU5Zf5vp00wtuwLn0Z333sn5NtvS8VWKqds=', 'last_login': dateutil.parser.parse("2023-06-30T06:03:10.086511+00:00"), 'is_superuser': True, 'email': 'yurinakanishi33@gmail.com', 'name': 'yuri', 'is_active': True, 'is_staff': True} ) 
    knowledge_knowledge_170 = importer.save_or_locate(knowledge_knowledge_170)

    knowledge_knowledge_171 = Knowledge()
    knowledge_knowledge_171.name = '暗号解読のために仕掛けた罠'
    knowledge_knowledge_171.slug = 'a-trap-set-to-decipher-the-code-jp'
    knowledge_knowledge_171.language =  importer.locate_object(Language, "id", Language, "id", 2, {'id': 2, 'name': 'jp'} ) 
    knowledge_knowledge_171.genre_for_url =  importer.locate_object(GenreForURL, "id", GenreForURL, "id", 1, {'id': 1, 'name': 'knowledge'} ) 
    knowledge_knowledge_171.type = 'knowledge'
    knowledge_knowledge_171.notesite_url = 'https://note.com/argumented_world/n/na4a8883fdffe'
    knowledge_knowledge_171.article =  importer.locate_object(Article, "id", Article, "id", 6270, {'id': 6270, 'excerpt': '暗号解読のために仕掛けた罠', 'kicker': '暗号解読のために仕掛けた罠', 'content': '<p>第2次大戦の時代、暗号を解読することが勝利に直結しました。「どこどこの地点に敵発見！」とか「何時何分に、どこどこを攻撃せよ！」などの情報は、それぞれの部隊に暗号で伝えられていました。暗号の通信自体は誰でも（敵国でも）受け取ることができたのですが、解く方法を知らないと解読はとても難しかったのです。そんな中で、当時のイギリスがドイツの暗号通信の解読に使った方法を紹介します。</p>\r\n\r\n<p>まず、イギリスの空軍機が機雷をあえてドイツ軍が分かるところに置いて、ドイツの船舶が仲間に注意を呼びかけるように仕向けます。 機雷ってこんな形をしています。地雷の海バージョンです。（写真は英国の Mk14機雷です。）</p>\r\n\r\n<p>そして、そのドイツが送った注意の暗号の中には地図上の位置が示されているはずで、その位置はすでにイギリスが知っている位置です。その位置の情報を元に解読を行いました。頭いいですよね。</p>\r\n\r\n<p>『暗号解読』</p>\r\n\r\n<p>wikimedeia commons</p>\r\n\r\n<p>British Mk 14 sea mine</p>', 'references': '', 'rating': 0.0, 'rating_count': None, 'published_date': dateutil.parser.parse("2023-07-03T02:53:18.372662+00:00"), 'updated_date': dateutil.parser.parse("2023-07-03T02:53:18.393911+00:00")} ) 
    knowledge_knowledge_171.author =  importer.locate_object(UserAccount, "id", UserAccount, "id", 1, {'id': 1, 'password': 'pbkdf2_sha256$600000$Q9AwSzFqEXF1ueS21sGGfz$rZo+NVruXU5Zf5vp00wtuwLn0Z333sn5NtvS8VWKqds=', 'last_login': dateutil.parser.parse("2023-06-30T06:03:10.086511+00:00"), 'is_superuser': True, 'email': 'yurinakanishi33@gmail.com', 'name': 'yuri', 'is_active': True, 'is_staff': True} ) 
    knowledge_knowledge_171 = importer.save_or_locate(knowledge_knowledge_171)

    knowledge_knowledge_172 = Knowledge()
    knowledge_knowledge_172.name = 'A trap set to decipher the code'
    knowledge_knowledge_172.slug = 'a-trap-set-to-decipher-the-code'
    knowledge_knowledge_172.language =  importer.locate_object(Language, "id", Language, "id", 1, {'id': 1, 'name': 'en'} ) 
    knowledge_knowledge_172.genre_for_url =  importer.locate_object(GenreForURL, "id", GenreForURL, "id", 1, {'id': 1, 'name': 'knowledge'} ) 
    knowledge_knowledge_172.type = 'knowledge'
    knowledge_knowledge_172.notesite_url = 'https://note.com/argumented_world/n/na4a8883fdffe'
    knowledge_knowledge_172.article =  importer.locate_object(Article, "id", Article, "id", 6271, {'id': 6271, 'excerpt': 'A trap set to decipher the code', 'kicker': 'A trap set to decipher the code', 'content': '<p>During World War II, deciphering codes was directly related to victory. "Enemy spotted at some point!" or "Attack at what time and minute! were transmitted to each unit in code. Although anyone; even an enemy nation, could receive these messages, it was very difficult to decipher them unless one knew how to break the codes. In this context, I would like to introduce the method used by the British at that time to decipher German coded communications.</p>\r\n\r\n<p>First, British air force planes would dare to place mines in places where the Germans could see them, so that German ships would call attention to their comrades. A mine looks like as shown below. It is the sea version of a mine. (Pictured is a British Mk 14 mine.)</p>\r\n\r\n<p>Then, in the code of caution sent by Germany, the location on the map should be indicated, and that location is already known to the British. We deciphered the code based on the information of that location. That\'s smart isn\'t it?</p>\r\n\r\n<p>The Code Book: The Science of Secrecy from Ancient Egypt to Quantum Cryptography by Simon Singh</p>\r\n\r\n<p>wikimedeia commons</p>\r\n\r\n<p>British Mk 14 sea mine</p>', 'references': '', 'rating': 0.0, 'rating_count': None, 'published_date': dateutil.parser.parse("2023-07-03T02:53:18.372662+00:00"), 'updated_date': dateutil.parser.parse("2023-07-03T02:53:18.393911+00:00")} ) 
    knowledge_knowledge_172.author =  importer.locate_object(UserAccount, "id", UserAccount, "id", 1, {'id': 1, 'password': 'pbkdf2_sha256$600000$Q9AwSzFqEXF1ueS21sGGfz$rZo+NVruXU5Zf5vp00wtuwLn0Z333sn5NtvS8VWKqds=', 'last_login': dateutil.parser.parse("2023-06-30T06:03:10.086511+00:00"), 'is_superuser': True, 'email': 'yurinakanishi33@gmail.com', 'name': 'yuri', 'is_active': True, 'is_staff': True} ) 
    knowledge_knowledge_172 = importer.save_or_locate(knowledge_knowledge_172)

    knowledge_knowledge_173 = Knowledge()
    knowledge_knowledge_173.name = ''
    knowledge_knowledge_173.slug = 'a-time-when-drinking-water-was-insane-jp'
    knowledge_knowledge_173.language =  importer.locate_object(Language, "id", Language, "id", 2, {'id': 2, 'name': 'jp'} ) 
    knowledge_knowledge_173.genre_for_url =  importer.locate_object(GenreForURL, "id", GenreForURL, "id", 1, {'id': 1, 'name': 'knowledge'} ) 
    knowledge_knowledge_173.type = 'knowledge'
    knowledge_knowledge_173.notesite_url = 'https://note.com/argumented_world/n/n3d23e64cf7f3'
    knowledge_knowledge_173.article =  importer.locate_object(Article, "id", Article, "id", 6272, {'id': 6272, 'excerpt': '', 'kicker': '', 'content': '<p>現代では、水を飲むことは良いこととして知られています。1日２リットル水を飲むと健康に良い、などと聞いたことはあるかと思います。しかし今からたった200年ほど前には、水を飲むことに対して抵抗がありました。</p>\r\n\r\n<p>その理由は、水は安全ではなかったからです。さらに水を飲むことは非常識で、水は健康にも悪いと思われていました。例えば、イギリス人は水嫌いとして世界的に有名でした。水を飲むと皮膚の下に水分がたまり水腫になりやすいという近世の迷信が原因のひとつです。</p>\r\n\r\n<p>（水が安全ではなかっただったからこのような信念が生まれたのかもしれません）</p>\r\n\r\n<p>18世紀のイギリス人の医師は、こう言ったそうです。</p>\r\n\r\n<p>そして、17世紀のスペインの植物学者は</p>\r\n\r\n<p>と言ったそうです。当時は、水を飲む人は、変わり者として社会からはじき出される危険がありました。多くの人は喉が渇いても、なるべく水を飲まないでアルコール飲料などで喉を潤していました。</p>\r\n\r\n<p>そんな中でも、近代になってくると科学者たちによって、徐々に水が健康に良いということが解明されつつありました。 科学者たちは、なんとか水を飲むことを人々に普及させるために水に味を付けることを考えつきました。そうして生まれたのが水に炭酸を加えた炭酸水です。</p>\r\n\r\n<p>水を飲むことを説得する活動を行なったのは、科学者だけではありませんでした。 科学者たちの研究や技術のおかげで、安全な水が確保しやすくなると、水は危険なのでアルコール飲料を飲むということは通用しなくなります。このことによって、人々の間で昔から行なわれていた禁酒運動がさらに活発になりました。彼らは人々がアルコールに溺れて社会が崩壊するのを食い止めようとしましました。</p>\r\n\r\n<p>ヨーロッパやアメリカでは、禁酒運動家たちが『水が健康に良いという歌』を歌いながら、町や村を行進しました。その影響もあり、アメリカでは1920年から1933年まで、禁酒法が制定されました。禁酒法の時に多くのパブで酒の代わりに炭酸水を出したことにより、炭酸水が広く飲まれるようになりました。科学者と禁酒運動家のどちらか一方でも欠けていたら、今のように水を飲む人は増えていなかったかもしれません。</p>\r\n\r\n<p>水の歴史 \u3000イアン ミラー (著)、 甲斐 理恵子 (翻訳)</p>\r\n\r\n<p>Vinícius Caricatte on Pexels</p>', 'references': '', 'rating': 0.0, 'rating_count': None, 'published_date': dateutil.parser.parse("2023-07-03T02:53:18.372662+00:00"), 'updated_date': dateutil.parser.parse("2023-07-03T02:53:18.393911+00:00")} ) 
    knowledge_knowledge_173.author =  importer.locate_object(UserAccount, "id", UserAccount, "id", 1, {'id': 1, 'password': 'pbkdf2_sha256$600000$Q9AwSzFqEXF1ueS21sGGfz$rZo+NVruXU5Zf5vp00wtuwLn0Z333sn5NtvS8VWKqds=', 'last_login': dateutil.parser.parse("2023-06-30T06:03:10.086511+00:00"), 'is_superuser': True, 'email': 'yurinakanishi33@gmail.com', 'name': 'yuri', 'is_active': True, 'is_staff': True} ) 
    knowledge_knowledge_173 = importer.save_or_locate(knowledge_knowledge_173)

    knowledge_knowledge_174 = Knowledge()
    knowledge_knowledge_174.name = 'A time when drinking water was insane'
    knowledge_knowledge_174.slug = 'a-time-when-drinking-water-was-insane'
    knowledge_knowledge_174.language =  importer.locate_object(Language, "id", Language, "id", 1, {'id': 1, 'name': 'en'} ) 
    knowledge_knowledge_174.genre_for_url =  importer.locate_object(GenreForURL, "id", GenreForURL, "id", 1, {'id': 1, 'name': 'knowledge'} ) 
    knowledge_knowledge_174.type = 'knowledge'
    knowledge_knowledge_174.notesite_url = 'https://note.com/argumented_world/n/n3d23e64cf7f3'
    knowledge_knowledge_174.article =  importer.locate_object(Article, "id", Article, "id", 6273, {'id': 6273, 'excerpt': 'A time when drinking water was insane', 'kicker': 'A time when drinking water was insane', 'content': '<p>Today, drinking water is known to be a good thing; you may have heard that drinking two liters of water a day is good for your health. However, only about 200 years ago, there was big resistance to drinking water.</p>\r\n\r\n<p>Drinking water was insane and considered unhealthy. For instance, the English were world famous for their dislike of water. One of the reasons for this was the early modern superstition that drinking water causes fluid to build up under the skin, which can lead to edema.</p>\r\n\r\n<p>An 18th-century English physician is said to have said</p>\r\n\r\n<p>One of the reasons why is, in the past, water was not safe.  Stored water is easy to perishable without a refrigerator. A 17th-century Spanish botanist wrote,</p>\r\n\r\n<p>At that time, people who drank water risked being ostracized by society as eccentric. Many people, even if they were thirsty, drank as little water as possible and quenched their thirst with alcohol or other beverages.</p>\r\n\r\n<p>In spite of this, in modern times, scientists have gradually begun to understand the health benefits of water. Then scientists came up with the idea of flavoring water in order to popularize drinking water. That was a carbonated water.</p>\r\n\r\n<p>Scientists were not alone in their efforts to persuade people to drink water. As safe water became more readily available thanks to the research and technology of scientists, the idea that water was dangerous and that people should drink alcoholic beverages was no longer acceptable.</p>\r\n\r\n<p>This further fueled the old prohibitionist movement among the people. They wanted to stop people from becoming so addicted to alcohol that society collapsed.</p>\r\n\r\n<p>In Europe and the United States, temperance activists marched through towns and villages singing songs about the health benefits of water. This was one of the influences that led to the enactment of Prohibition in the United States from 1920 to 1933.</p>\r\n\r\n<p>During Prohibition, many pubs served sparkling water instead of alcohol, which led to the widespread consumption of sparkling water.</p>\r\n\r\n<p>If either the scientists or the prohibitionists had been missing, the number of people drinking water might not have increased as much as it has today.</p>\r\n\r\n<p>Water: A Global History by Ian Miller</p>\r\n\r\n<p>Vinícius Caricatte on Pexels</p>', 'references': '', 'rating': 0.0, 'rating_count': None, 'published_date': dateutil.parser.parse("2023-07-03T02:53:18.372662+00:00"), 'updated_date': dateutil.parser.parse("2023-07-03T02:53:18.393911+00:00")} ) 
    knowledge_knowledge_174.author =  importer.locate_object(UserAccount, "id", UserAccount, "id", 1, {'id': 1, 'password': 'pbkdf2_sha256$600000$Q9AwSzFqEXF1ueS21sGGfz$rZo+NVruXU5Zf5vp00wtuwLn0Z333sn5NtvS8VWKqds=', 'last_login': dateutil.parser.parse("2023-06-30T06:03:10.086511+00:00"), 'is_superuser': True, 'email': 'yurinakanishi33@gmail.com', 'name': 'yuri', 'is_active': True, 'is_staff': True} ) 
    knowledge_knowledge_174 = importer.save_or_locate(knowledge_knowledge_174)

    knowledge_knowledge_175 = Knowledge()
    knowledge_knowledge_175.name = '蚊とDDTと鷹と人間と'
    knowledge_knowledge_175.slug = 'a-hawk-and-a-mosquito-jp'
    knowledge_knowledge_175.language =  importer.locate_object(Language, "id", Language, "id", 2, {'id': 2, 'name': 'jp'} ) 
    knowledge_knowledge_175.genre_for_url =  importer.locate_object(GenreForURL, "id", GenreForURL, "id", 1, {'id': 1, 'name': 'knowledge'} ) 
    knowledge_knowledge_175.type = 'knowledge'
    knowledge_knowledge_175.notesite_url = 'https://note.com/argumented_world/n/n1beb5f8e4b10---https://alis.to/AugmentedWorld/articles/aw5WmGbqAMym'
    knowledge_knowledge_175.article =  importer.locate_object(Article, "id", Article, "id", 6274, {'id': 6274, 'excerpt': '蚊とDDTと鷹と人間と', 'kicker': '蚊とDDTと鷹と人間と', 'content': '<p>1950年代以降、黄熱病やマラリアを媒介する蚊を駆除するために、感染が広がっている地域には「DDT」と呼ばれる薬剤が大量に散布されました。DDTは、主に農薬、殺虫剤として使われる薬剤です。生物への毒性が強いのはもちろんですが、分解しにくいことでも知られています。</p>\r\n\r\n<p>DDTは分解しにくいので、生物がDDTを含んだ食べ物を食べてしまうと、その生物の中に長くとどまり、悪い影響を与えます。鷹は、食物連鎖の上位にいて、寿命も他の生物と比べて長い生き物です。なので、DDTがまかれた地域に住んでいる鷹にはDDTの生物濃縮が起こり、卵の殻がすぐ割れやすくなる病気にかかってしまいました。</p>\r\n\r\n<p>生物濃縮とは、物質が生態系での食物連鎖を経て生物の体内に濃縮されていく現象です。今回の事例では、DDTを含んだ草→虫→小動物や小鳥→鷹、というように濃縮されていっています。</p>\r\n\r\n<p>卵の殻が割れるということは、子孫を残せないということです。DDTが撒かれた地域の鷹の数はどんどん減っていきました。鷹や人体などへの影響を考えてDDTの散布を中止したこともありましたが、そうするとDDTのおかげで減っていた黄熱病、マラリアの感染者数は再び増えてしまいました。</p>\r\n\r\n<p>現在ではDDTの使用はほとんどの国で規制されていますが、DDTの代わりの殺虫剤を手に入れることが難しい場合は、DDTを使ってよいとしています。DDTに対する耐性を持った蚊もすでに確認されていて、「DDTをまくことは一時的な効果しかないのでは？」という声もあります。</p>\r\n\r\n<p>一方を解決したとしても、ほかの悪いことが起こってしまう。この葛藤は日常生活、仕事、人間関係、の中で私たちがいつも感じていることですし、大きな歴史の流れでもあてはまります。</p>\r\n\r\n<p>『図説 世界史を変えた50の動物 』</p>\r\n\r\n<p>エリック シャリーン (著)、甲斐 理恵子 (翻訳)</p>', 'references': '', 'rating': 0.0, 'rating_count': None, 'published_date': dateutil.parser.parse("2023-07-03T02:53:18.372662+00:00"), 'updated_date': dateutil.parser.parse("2023-07-03T02:53:18.393911+00:00")} ) 
    knowledge_knowledge_175.author =  importer.locate_object(UserAccount, "id", UserAccount, "id", 1, {'id': 1, 'password': 'pbkdf2_sha256$600000$Q9AwSzFqEXF1ueS21sGGfz$rZo+NVruXU5Zf5vp00wtuwLn0Z333sn5NtvS8VWKqds=', 'last_login': dateutil.parser.parse("2023-06-30T06:03:10.086511+00:00"), 'is_superuser': True, 'email': 'yurinakanishi33@gmail.com', 'name': 'yuri', 'is_active': True, 'is_staff': True} ) 
    knowledge_knowledge_175 = importer.save_or_locate(knowledge_knowledge_175)

    knowledge_knowledge_176 = Knowledge()
    knowledge_knowledge_176.name = 'A hawk and a mosquito'
    knowledge_knowledge_176.slug = 'a-hawk-and-a-mosquito'
    knowledge_knowledge_176.language =  importer.locate_object(Language, "id", Language, "id", 1, {'id': 1, 'name': 'en'} ) 
    knowledge_knowledge_176.genre_for_url =  importer.locate_object(GenreForURL, "id", GenreForURL, "id", 1, {'id': 1, 'name': 'knowledge'} ) 
    knowledge_knowledge_176.type = 'knowledge'
    knowledge_knowledge_176.notesite_url = 'https://note.com/argumented_world/n/n1beb5f8e4b10'
    knowledge_knowledge_176.article =  importer.locate_object(Article, "id", Article, "id", 6275, {'id': 6275, 'excerpt': 'A hawk and a mosquito', 'kicker': 'A hawk and a mosquito', 'content': '<p>Since the 1950s, a chemical called "DDT" has been sprayed in large quantities in areas where infections were spreading in order to control the mosquitoes that transmit yellow fever and malaria. DDT is a drug used primarily as a pesticide and insecticide. It is known for not only its high toxicity to organisms, but also for its resistance to decomposition.</p>\r\n\r\n<p>DDT is not easily degraded, so if an organism eats food containing DDT, it will stay in the organism for a long time and have a negative effect on it. Hawks are at the top of the food chain and have a longer life span than other organisms. Therefore, hawks living in areas where DDT has been sprayed have suffered from DDT bioaccumulation, a disease that causes their eggshells to crack easily. Eggshell breaking means that Hawks cannot produce offspring.</p>\r\n\r\n<p>Bioaccumulation is a phenomenon in which a substance is concentrated in the body of an organism through the food chain in an ecosystem. In this case, the DDT-containing grass to insects, to small, to animals and birds, to hawks, and so on. The number of hawks in the area where DDT was sprayed was rapidly decreasing.</p>\r\n\r\n<p>We had to stop spraying DDT because of its effects on hawks, human bodies, etc however, the number of people infected with yellow fever and malaria, which had decreased thanks to DDT, increased again. Today, the use of DDT is regulated in most countries, but if it is difficult to obtain an alternative insecticide to DDT, it may be used.</p>\r\n\r\n<p>Mosquitoes resistant to DDT have already been identified, and some people have asked, "Wouldn\'t spraying with DDT only have a temporary effect?".</p>\r\n\r\n<p>Even if one side is solved, other bad things will happen. This conflict is something we feel all the time in our daily life, work, and relationships, and it also applies to the larger course of history.</p>\r\n\r\n<p>Fifty Animals that Changed the Course of History by Eric Chaline</p>', 'references': '', 'rating': 0.0, 'rating_count': None, 'published_date': dateutil.parser.parse("2023-07-03T02:53:18.372662+00:00"), 'updated_date': dateutil.parser.parse("2023-07-03T02:53:18.393911+00:00")} ) 
    knowledge_knowledge_176.author =  importer.locate_object(UserAccount, "id", UserAccount, "id", 1, {'id': 1, 'password': 'pbkdf2_sha256$600000$Q9AwSzFqEXF1ueS21sGGfz$rZo+NVruXU5Zf5vp00wtuwLn0Z333sn5NtvS8VWKqds=', 'last_login': dateutil.parser.parse("2023-06-30T06:03:10.086511+00:00"), 'is_superuser': True, 'email': 'yurinakanishi33@gmail.com', 'name': 'yuri', 'is_active': True, 'is_staff': True} ) 
    knowledge_knowledge_176 = importer.save_or_locate(knowledge_knowledge_176)

    knowledge_knowledge_177 = Knowledge()
    knowledge_knowledge_177.name = ''
    knowledge_knowledge_177.slug = 'a-color-of-cheddar-cheese-jp'
    knowledge_knowledge_177.language =  importer.locate_object(Language, "id", Language, "id", 2, {'id': 2, 'name': 'jp'} ) 
    knowledge_knowledge_177.genre_for_url =  importer.locate_object(GenreForURL, "id", GenreForURL, "id", 1, {'id': 1, 'name': 'knowledge'} ) 
    knowledge_knowledge_177.type = 'knowledge'
    knowledge_knowledge_177.notesite_url = 'https://note.com/argumented_world/n/na44c5b9256af'
    knowledge_knowledge_177.article =  importer.locate_object(Article, "id", Article, "id", 6276, {'id': 6276, 'excerpt': '', 'kicker': '', 'content': '<p>問題です。「チェダーチーズ」と「フラミンゴ」の共通点はなんでしょう？</p>\r\n\r\n<p>チェダーチーズのオレンジ色とフラミンゴのピンクは、 どちらもカロチノイドという色素の色です。カロチノイドは全部で750種類以上ある、天然の色素で、黄色、オレンジ色、赤色などがあります。トマトやエビの鮮やかな色もカロチノイド色素の色です。</p>\r\n\r\n<p>チェダーチーズによく使われる着色料は、カロチノイド色素が何種類か混ざった「アナトー」という色素です。なので、アナトー色素は食品の原材料名のところには「カロチノイド色素」「カロテノイド」などと書かれていることもあります。機会があれば、白くないチェダーチーズの裏の原材料を見てみて下さい。「カロチノイド色素」と書かれていると思います。</p>\r\n\r\n<p>アナトー色素はチェダーチーズ以外にも多くの食品やに使われています。例えばマーガリン、キムチ、ハム、ベーコン．．．などなど。食べ物をおいしく見せるための工夫ですね。さらに「口紅」の鮮やかな赤色を出すのにも使われることがあります。</p>\r\n\r\n<p>アナトー色素は、ベニノキの種から抽出される色素です。ベニノキは、南アメリカが原産の木で、現地の人々はベニノキの種を化粧に使ったり、体に色を付けるために塗ったりしているそうです。現在はインドで多く栽培されています。サフランってありますよね？パエリアのライスを着色するのに使う香辛料です。けど、サフランって値段が高いので、熱帯アメリカなどではサフランの代用品として、ベニノキの種が使われているそうです。</p>\r\n\r\n<p>RODNAE Productions, Patrick Rasoanaivo from Pexels</p>\r\n\r\n<p>Dave Sandoval from Unsplash</p>\r\n\r\n<p>Other pictures</p>', 'references': '', 'rating': 0.0, 'rating_count': None, 'published_date': dateutil.parser.parse("2023-07-03T02:53:18.372662+00:00"), 'updated_date': dateutil.parser.parse("2023-07-03T02:53:18.393911+00:00")} ) 
    knowledge_knowledge_177.author =  importer.locate_object(UserAccount, "id", UserAccount, "id", 1, {'id': 1, 'password': 'pbkdf2_sha256$600000$Q9AwSzFqEXF1ueS21sGGfz$rZo+NVruXU5Zf5vp00wtuwLn0Z333sn5NtvS8VWKqds=', 'last_login': dateutil.parser.parse("2023-06-30T06:03:10.086511+00:00"), 'is_superuser': True, 'email': 'yurinakanishi33@gmail.com', 'name': 'yuri', 'is_active': True, 'is_staff': True} ) 
    knowledge_knowledge_177 = importer.save_or_locate(knowledge_knowledge_177)

    knowledge_knowledge_178 = Knowledge()
    knowledge_knowledge_178.name = 'What is the color of orange color of cheder chhese comes from?'
    knowledge_knowledge_178.slug = 'a-color-of-cheddar-cheese'
    knowledge_knowledge_178.language =  importer.locate_object(Language, "id", Language, "id", 1, {'id': 1, 'name': 'en'} ) 
    knowledge_knowledge_178.genre_for_url =  importer.locate_object(GenreForURL, "id", GenreForURL, "id", 1, {'id': 1, 'name': 'knowledge'} ) 
    knowledge_knowledge_178.type = 'knowledge'
    knowledge_knowledge_178.notesite_url = 'https://note.com/argumented_world/n/na44c5b9256af'
    knowledge_knowledge_178.article =  importer.locate_object(Article, "id", Article, "id", 6277, {'id': 6277, 'excerpt': 'What is the color of orange color of cheder chhese comes from?', 'kicker': 'What is the color of orange color of cheder chhese comes from?', 'content': '<p>Question.What do "cheddar cheese" and "flamingos" have in common ?</p>\r\n\r\n<p>The orange color of cheddar cheese and the pink color of flamingos are both the color of a pigment called carotenoids. Carotenoids are naturally-derived pigments, of which there are more than 750 in total. They include yellow, orange, and red. The bright colors of tomatoes and shrimp are also the color of carotenoid pigments.</p>\r\n\r\n<p>The coloring commonly used in cheddar cheese is a mixture of several types of carotenoid pigments. Which is a mixture of several different carotenoid pigments. Therefore, annatto coloring is often listed in the name of food ingredients as "Carotenoid pigment" or "Carotenoids". Please look at the ingredients on the back of non-white cheddar cheese and it should say "carotenoid pigment"</p>\r\n\r\n<p>Annatto coloring is used in many foods and products other than cheddar cheese.Margarine, kimchi, ham, bacon, etc. It is used to make food look tasty. It is also used in lipstick in order to bring out the attractive red color.</p>\r\n\r\n<p>Annatto pigment is extracted from the seeds of the achiote tree that is native to South America. Local people use achiote seeds for cosmetics and to apply color to their bodies. Today, it seems to be cultivated mostly in India.As you know saffron is a spice used to color rice in paella, but saffron is expensive. So in tropical America and other places, achiote seeds are used as a substitute for saffron.</p>\r\n\r\n<p>RODNAE Productions, Patrick Rasoanaivo from Pexels</p>\r\n\r\n<p>Dave Sandoval from Unsplash</p>\r\n\r\n<p>Other pictures</p>', 'references': '', 'rating': 0.0, 'rating_count': None, 'published_date': dateutil.parser.parse("2023-07-03T02:53:18.372662+00:00"), 'updated_date': dateutil.parser.parse("2023-07-03T02:53:18.393911+00:00")} ) 
    knowledge_knowledge_178.author =  importer.locate_object(UserAccount, "id", UserAccount, "id", 1, {'id': 1, 'password': 'pbkdf2_sha256$600000$Q9AwSzFqEXF1ueS21sGGfz$rZo+NVruXU5Zf5vp00wtuwLn0Z333sn5NtvS8VWKqds=', 'last_login': dateutil.parser.parse("2023-06-30T06:03:10.086511+00:00"), 'is_superuser': True, 'email': 'yurinakanishi33@gmail.com', 'name': 'yuri', 'is_active': True, 'is_staff': True} ) 
    knowledge_knowledge_178 = importer.save_or_locate(knowledge_knowledge_178)

    knowledge_knowledge_179 = Knowledge()
    knowledge_knowledge_179.name = ''
    knowledge_knowledge_179.slug = 'pony-express-mail-jp'
    knowledge_knowledge_179.language =  importer.locate_object(Language, "id", Language, "id", 2, {'id': 2, 'name': 'jp'} ) 
    knowledge_knowledge_179.genre_for_url =  importer.locate_object(GenreForURL, "id", GenreForURL, "id", 1, {'id': 1, 'name': 'knowledge'} ) 
    knowledge_knowledge_179.type = 'knowledge'
    knowledge_knowledge_179.notesite_url = ''
    knowledge_knowledge_179.article =  importer.locate_object(Article, "id", Article, "id", 6278, {'id': 6278, 'excerpt': '', 'kicker': '', 'content': '<p></p>', 'references': '', 'rating': 0.0, 'rating_count': None, 'published_date': dateutil.parser.parse("2023-07-03T02:53:18.372662+00:00"), 'updated_date': dateutil.parser.parse("2023-07-03T02:53:18.393911+00:00")} ) 
    knowledge_knowledge_179.author =  importer.locate_object(UserAccount, "id", UserAccount, "id", 1, {'id': 1, 'password': 'pbkdf2_sha256$600000$Q9AwSzFqEXF1ueS21sGGfz$rZo+NVruXU5Zf5vp00wtuwLn0Z333sn5NtvS8VWKqds=', 'last_login': dateutil.parser.parse("2023-06-30T06:03:10.086511+00:00"), 'is_superuser': True, 'email': 'yurinakanishi33@gmail.com', 'name': 'yuri', 'is_active': True, 'is_staff': True} ) 
    knowledge_knowledge_179 = importer.save_or_locate(knowledge_knowledge_179)

    knowledge_knowledge_180 = Knowledge()
    knowledge_knowledge_180.name = 'Pony Express Mail'
    knowledge_knowledge_180.slug = 'pony-express-mail'
    knowledge_knowledge_180.language =  importer.locate_object(Language, "id", Language, "id", 1, {'id': 1, 'name': 'en'} ) 
    knowledge_knowledge_180.genre_for_url =  importer.locate_object(GenreForURL, "id", GenreForURL, "id", 1, {'id': 1, 'name': 'knowledge'} ) 
    knowledge_knowledge_180.type = 'knowledge'
    knowledge_knowledge_180.notesite_url = ''
    knowledge_knowledge_180.article =  importer.locate_object(Article, "id", Article, "id", 6279, {'id': 6279, 'excerpt': 'Pony Express Mail', 'kicker': 'Pony Express Mail', 'content': '<p></p>', 'references': '', 'rating': 0.0, 'rating_count': None, 'published_date': dateutil.parser.parse("2023-07-03T02:53:18.372662+00:00"), 'updated_date': dateutil.parser.parse("2023-07-03T02:53:18.393911+00:00")} ) 
    knowledge_knowledge_180.author =  importer.locate_object(UserAccount, "id", UserAccount, "id", 1, {'id': 1, 'password': 'pbkdf2_sha256$600000$Q9AwSzFqEXF1ueS21sGGfz$rZo+NVruXU5Zf5vp00wtuwLn0Z333sn5NtvS8VWKqds=', 'last_login': dateutil.parser.parse("2023-06-30T06:03:10.086511+00:00"), 'is_superuser': True, 'email': 'yurinakanishi33@gmail.com', 'name': 'yuri', 'is_active': True, 'is_staff': True} ) 
    knowledge_knowledge_180 = importer.save_or_locate(knowledge_knowledge_180)

    knowledge_knowledge_181 = Knowledge()
    knowledge_knowledge_181.name = ''
    knowledge_knowledge_181.slug = 'american-butterbur-and-potatoes'
    knowledge_knowledge_181.language =  importer.locate_object(Language, "id", Language, "id", 1, {'id': 1, 'name': 'en'} ) 
    knowledge_knowledge_181.genre_for_url =  importer.locate_object(GenreForURL, "id", GenreForURL, "id", 1, {'id': 1, 'name': 'knowledge'} ) 
    knowledge_knowledge_181.type = 'knowledge'
    knowledge_knowledge_181.notesite_url = ''
    knowledge_knowledge_181.article =  importer.locate_object(Article, "id", Article, "id", 6280, {'id': 6280, 'excerpt': '', 'kicker': '', 'content': '<p>All human beings are 99.9 percent identical in their genetic makeup. Differences in the remaining 0.1 percent hold important clues about the causes of diseases.</p>\r\n\r\n<p>But as we know, from subjective point of view, we feel myself is different from others. One is selfish, and the other is altruistic etc.</p>', 'references': '', 'rating': 0.0, 'rating_count': None, 'published_date': dateutil.parser.parse("2023-07-03T02:53:18.372662+00:00"), 'updated_date': dateutil.parser.parse("2023-07-03T02:53:18.393911+00:00")} ) 
    knowledge_knowledge_181.author =  importer.locate_object(UserAccount, "id", UserAccount, "id", 1, {'id': 1, 'password': 'pbkdf2_sha256$600000$Q9AwSzFqEXF1ueS21sGGfz$rZo+NVruXU5Zf5vp00wtuwLn0Z333sn5NtvS8VWKqds=', 'last_login': dateutil.parser.parse("2023-06-30T06:03:10.086511+00:00"), 'is_superuser': True, 'email': 'yurinakanishi33@gmail.com', 'name': 'yuri', 'is_active': True, 'is_staff': True} ) 
    knowledge_knowledge_181 = importer.save_or_locate(knowledge_knowledge_181)

    knowledge_knowledge_182 = Knowledge()
    knowledge_knowledge_182.name = ''
    knowledge_knowledge_182.slug = 'grimms-fairy-tales-and-the-macrocosm,-microcosm-jp'
    knowledge_knowledge_182.language =  importer.locate_object(Language, "id", Language, "id", 2, {'id': 2, 'name': 'jp'} ) 
    knowledge_knowledge_182.genre_for_url =  importer.locate_object(GenreForURL, "id", GenreForURL, "id", 1, {'id': 1, 'name': 'knowledge'} ) 
    knowledge_knowledge_182.type = 'knowledge'
    knowledge_knowledge_182.notesite_url = ''
    knowledge_knowledge_182.article =  importer.locate_object(Article, "id", Article, "id", 6281, {'id': 6281, 'excerpt': '', 'kicker': '', 'content': '<p></p>', 'references': '', 'rating': 0.0, 'rating_count': None, 'published_date': dateutil.parser.parse("2023-07-03T02:53:18.372662+00:00"), 'updated_date': dateutil.parser.parse("2023-07-03T02:53:18.393911+00:00")} ) 
    knowledge_knowledge_182.author =  importer.locate_object(UserAccount, "id", UserAccount, "id", 1, {'id': 1, 'password': 'pbkdf2_sha256$600000$Q9AwSzFqEXF1ueS21sGGfz$rZo+NVruXU5Zf5vp00wtuwLn0Z333sn5NtvS8VWKqds=', 'last_login': dateutil.parser.parse("2023-06-30T06:03:10.086511+00:00"), 'is_superuser': True, 'email': 'yurinakanishi33@gmail.com', 'name': 'yuri', 'is_active': True, 'is_staff': True} ) 
    knowledge_knowledge_182 = importer.save_or_locate(knowledge_knowledge_182)

    knowledge_knowledge_183 = Knowledge()
    knowledge_knowledge_183.name = ''
    knowledge_knowledge_183.slug = 'grimms-fairy-tales-and-the-macrocosm,-microcosm'
    knowledge_knowledge_183.language =  importer.locate_object(Language, "id", Language, "id", 1, {'id': 1, 'name': 'en'} ) 
    knowledge_knowledge_183.genre_for_url =  importer.locate_object(GenreForURL, "id", GenreForURL, "id", 1, {'id': 1, 'name': 'knowledge'} ) 
    knowledge_knowledge_183.type = 'knowledge'
    knowledge_knowledge_183.notesite_url = ''
    knowledge_knowledge_183.article =  importer.locate_object(Article, "id", Article, "id", 6282, {'id': 6282, 'excerpt': '', 'kicker': '', 'content': '<p></p>', 'references': '', 'rating': 0.0, 'rating_count': None, 'published_date': dateutil.parser.parse("2023-07-03T02:53:18.372662+00:00"), 'updated_date': dateutil.parser.parse("2023-07-03T02:53:18.393911+00:00")} ) 
    knowledge_knowledge_183.author =  importer.locate_object(UserAccount, "id", UserAccount, "id", 1, {'id': 1, 'password': 'pbkdf2_sha256$600000$Q9AwSzFqEXF1ueS21sGGfz$rZo+NVruXU5Zf5vp00wtuwLn0Z333sn5NtvS8VWKqds=', 'last_login': dateutil.parser.parse("2023-06-30T06:03:10.086511+00:00"), 'is_superuser': True, 'email': 'yurinakanishi33@gmail.com', 'name': 'yuri', 'is_active': True, 'is_staff': True} ) 
    knowledge_knowledge_183 = importer.save_or_locate(knowledge_knowledge_183)

    knowledge_knowledge_184 = Knowledge()
    knowledge_knowledge_184.name = ''
    knowledge_knowledge_184.slug = 'fordlandia-and-rubber-trees-jp'
    knowledge_knowledge_184.language =  importer.locate_object(Language, "id", Language, "id", 2, {'id': 2, 'name': 'jp'} ) 
    knowledge_knowledge_184.genre_for_url =  importer.locate_object(GenreForURL, "id", GenreForURL, "id", 1, {'id': 1, 'name': 'knowledge'} ) 
    knowledge_knowledge_184.type = 'knowledge'
    knowledge_knowledge_184.notesite_url = ''
    knowledge_knowledge_184.article =  importer.locate_object(Article, "id", Article, "id", 6283, {'id': 6283, 'excerpt': '', 'kicker': '', 'content': '<p></p>', 'references': '', 'rating': 0.0, 'rating_count': None, 'published_date': dateutil.parser.parse("2023-07-03T02:53:18.372662+00:00"), 'updated_date': dateutil.parser.parse("2023-07-03T02:53:18.393911+00:00")} ) 
    knowledge_knowledge_184.author =  importer.locate_object(UserAccount, "id", UserAccount, "id", 1, {'id': 1, 'password': 'pbkdf2_sha256$600000$Q9AwSzFqEXF1ueS21sGGfz$rZo+NVruXU5Zf5vp00wtuwLn0Z333sn5NtvS8VWKqds=', 'last_login': dateutil.parser.parse("2023-06-30T06:03:10.086511+00:00"), 'is_superuser': True, 'email': 'yurinakanishi33@gmail.com', 'name': 'yuri', 'is_active': True, 'is_staff': True} ) 
    knowledge_knowledge_184 = importer.save_or_locate(knowledge_knowledge_184)

    knowledge_knowledge_185 = Knowledge()
    knowledge_knowledge_185.name = 'Fordlandia and Rubber Trees'
    knowledge_knowledge_185.slug = 'fordlandia-and-rubber-trees'
    knowledge_knowledge_185.language =  importer.locate_object(Language, "id", Language, "id", 1, {'id': 1, 'name': 'en'} ) 
    knowledge_knowledge_185.genre_for_url =  importer.locate_object(GenreForURL, "id", GenreForURL, "id", 1, {'id': 1, 'name': 'knowledge'} ) 
    knowledge_knowledge_185.type = 'knowledge'
    knowledge_knowledge_185.notesite_url = ''
    knowledge_knowledge_185.article =  importer.locate_object(Article, "id", Article, "id", 6284, {'id': 6284, 'excerpt': 'Fordlandia and Rubber Trees', 'kicker': 'Fordlandia and Rubber Trees', 'content': '<p></p>', 'references': '', 'rating': 0.0, 'rating_count': None, 'published_date': dateutil.parser.parse("2023-07-03T02:53:18.372662+00:00"), 'updated_date': dateutil.parser.parse("2023-07-03T02:53:18.393911+00:00")} ) 
    knowledge_knowledge_185.author =  importer.locate_object(UserAccount, "id", UserAccount, "id", 1, {'id': 1, 'password': 'pbkdf2_sha256$600000$Q9AwSzFqEXF1ueS21sGGfz$rZo+NVruXU5Zf5vp00wtuwLn0Z333sn5NtvS8VWKqds=', 'last_login': dateutil.parser.parse("2023-06-30T06:03:10.086511+00:00"), 'is_superuser': True, 'email': 'yurinakanishi33@gmail.com', 'name': 'yuri', 'is_active': True, 'is_staff': True} ) 
    knowledge_knowledge_185 = importer.save_or_locate(knowledge_knowledge_185)

    knowledge_knowledge_186 = Knowledge()
    knowledge_knowledge_186.name = ''
    knowledge_knowledge_186.slug = 'deforestation-leads-pollen-allergy'
    knowledge_knowledge_186.language =  importer.locate_object(Language, "id", Language, "id", 1, {'id': 1, 'name': 'en'} ) 
    knowledge_knowledge_186.genre_for_url =  importer.locate_object(GenreForURL, "id", GenreForURL, "id", 1, {'id': 1, 'name': 'knowledge'} ) 
    knowledge_knowledge_186.type = 'knowledge'
    knowledge_knowledge_186.notesite_url = ''
    knowledge_knowledge_186.article =  importer.locate_object(Article, "id", Article, "id", 6285, {'id': 6285, 'excerpt': '', 'kicker': '', 'content': '<p>we planted cedar tree orderly.</p>', 'references': '', 'rating': 0.0, 'rating_count': None, 'published_date': dateutil.parser.parse("2023-07-03T02:53:18.372662+00:00"), 'updated_date': dateutil.parser.parse("2023-07-03T02:53:18.393911+00:00")} ) 
    knowledge_knowledge_186.author =  importer.locate_object(UserAccount, "id", UserAccount, "id", 1, {'id': 1, 'password': 'pbkdf2_sha256$600000$Q9AwSzFqEXF1ueS21sGGfz$rZo+NVruXU5Zf5vp00wtuwLn0Z333sn5NtvS8VWKqds=', 'last_login': dateutil.parser.parse("2023-06-30T06:03:10.086511+00:00"), 'is_superuser': True, 'email': 'yurinakanishi33@gmail.com', 'name': 'yuri', 'is_active': True, 'is_staff': True} ) 
    knowledge_knowledge_186 = importer.save_or_locate(knowledge_knowledge_186)

    knowledge_knowledge_187 = Knowledge()
    knowledge_knowledge_187.name = ''
    knowledge_knowledge_187.slug = 'american-butterbur-and-potatoes-jp'
    knowledge_knowledge_187.language =  importer.locate_object(Language, "id", Language, "id", 2, {'id': 2, 'name': 'jp'} ) 
    knowledge_knowledge_187.genre_for_url =  importer.locate_object(GenreForURL, "id", GenreForURL, "id", 1, {'id': 1, 'name': 'knowledge'} ) 
    knowledge_knowledge_187.type = 'knowledge'
    knowledge_knowledge_187.notesite_url = ''
    knowledge_knowledge_187.article =  importer.locate_object(Article, "id", Article, "id", 6286, {'id': 6286, 'excerpt': '', 'kicker': '', 'content': '<p>American butterbur and potatoes</p>\r\n\r\n<p></p>', 'references': '', 'rating': 0.0, 'rating_count': None, 'published_date': dateutil.parser.parse("2023-07-03T02:53:18.372662+00:00"), 'updated_date': dateutil.parser.parse("2023-07-03T02:53:18.393911+00:00")} ) 
    knowledge_knowledge_187.author =  importer.locate_object(UserAccount, "id", UserAccount, "id", 1, {'id': 1, 'password': 'pbkdf2_sha256$600000$Q9AwSzFqEXF1ueS21sGGfz$rZo+NVruXU5Zf5vp00wtuwLn0Z333sn5NtvS8VWKqds=', 'last_login': dateutil.parser.parse("2023-06-30T06:03:10.086511+00:00"), 'is_superuser': True, 'email': 'yurinakanishi33@gmail.com', 'name': 'yuri', 'is_active': True, 'is_staff': True} ) 
    knowledge_knowledge_187 = importer.save_or_locate(knowledge_knowledge_187)

    knowledge_knowledge_188 = Knowledge()
    knowledge_knowledge_188.name = 'AAA'
    knowledge_knowledge_188.slug = 'you-shouldnt-jump-to-conclusions-by-trying-sudoku'
    knowledge_knowledge_188.language =  importer.locate_object(Language, "id", Language, "id", 1, {'id': 1, 'name': 'en'} ) 
    knowledge_knowledge_188.genre_for_url =  importer.locate_object(GenreForURL, "id", GenreForURL, "id", 1, {'id': 1, 'name': 'knowledge'} ) 
    knowledge_knowledge_188.type = 'blog'
    knowledge_knowledge_188.notesite_url = 'https://note.com/argumented_world/n/ne90ff2fc65fd'
    knowledge_knowledge_188.article =  importer.locate_object(Article, "id", Article, "id", 6287, {'id': 6287, 'excerpt': 'AAA', 'kicker': 'AAA', 'content': '<p>Recently, I played Sudoku.</p>\r\n\r\n<p>I was struggling to fill in the numbers one by one, and just when I thought I had filled in most of them, I discovered that there were two 7\'s in the same row....</p>\r\n\r\n<p>Ah! I did it. I had to start over almost from the beginning because I didn\'t know where I had made the mistake.</p>\r\n\r\n<p>The reason for my mistake was that I thought that only "7" could be in the same row, when in fact other numbers could be in the same row, and I jumped to a conclusion without looking around too much.</p>\r\n\r\n<p>This happens to me quite often when I play Sudoku. I am sure you have experienced this too.</p>\r\n\r\n<p>Later, I thought that this could also be said for decisions other than Sudoku.</p>\r\n\r\n<p>For example, it is one thing to think, "This is the only way! It is one thing to think, "This is the only way! If you think about it carefully and calmly, you can come up with other ways of doing things.</p>\r\n\r\n<p>It is another thing to be too hasty in coming to a conclusion, to say, "Oh, my God, I have no talent. If you look for it, you may find some talent, and in a sense, you may be able to say that you have the talent of worrying. LOL.</p>\r\n\r\n<p>If you try to make a decision in a hurry, you will lose your perspective.</p>\r\n\r\n<p>I decided to think slowly and make a decision.</p>\r\n\r\n<p></p>', 'references': '', 'rating': 0.0, 'rating_count': None, 'published_date': dateutil.parser.parse("2023-07-03T02:53:18.372662+00:00"), 'updated_date': dateutil.parser.parse("2023-07-03T02:53:18.410948+00:00")} ) 
    knowledge_knowledge_188.author =  importer.locate_object(UserAccount, "id", UserAccount, "id", 1, {'id': 1, 'password': 'pbkdf2_sha256$600000$Q9AwSzFqEXF1ueS21sGGfz$rZo+NVruXU5Zf5vp00wtuwLn0Z333sn5NtvS8VWKqds=', 'last_login': dateutil.parser.parse("2023-06-30T06:03:10.086511+00:00"), 'is_superuser': True, 'email': 'yurinakanishi33@gmail.com', 'name': 'yuri', 'is_active': True, 'is_staff': True} ) 
    knowledge_knowledge_188 = importer.save_or_locate(knowledge_knowledge_188)

    knowledge_knowledge_189 = Knowledge()
    knowledge_knowledge_189.name = ''
    knowledge_knowledge_189.slug = 'watching-unemployed-reincarnation-jp'
    knowledge_knowledge_189.language =  importer.locate_object(Language, "id", Language, "id", 2, {'id': 2, 'name': 'jp'} ) 
    knowledge_knowledge_189.genre_for_url =  importer.locate_object(GenreForURL, "id", GenreForURL, "id", 1, {'id': 1, 'name': 'knowledge'} ) 
    knowledge_knowledge_189.type = 'blog'
    knowledge_knowledge_189.notesite_url = ''
    knowledge_knowledge_189.article =  importer.locate_object(Article, "id", Article, "id", 6288, {'id': 6288, 'excerpt': '', 'kicker': '', 'content': '<p>I watched an anime called "Unemployed Reincarnation.</p>\r\n\r\n<p>The story is about an old man who was bullied and became a recluse, but was reincarnated in another world under the name of Rudeus and started over as a baby.</p>\r\n\r\n<p>He becomes active in the other world, but memories of his previous life come back to him and he has a hard time summoning up the courage to do so.</p>\r\n\r\n<p>I myself have been out of school because of relationships, so I understand how Rudeus (the old man) feels painfully well.</p>\r\n\r\n<p>Even though he is safe and away from threats, he is reminded of the past, and the world seems really awful. The words "I\'m not good enough" stick with me.</p>\r\n\r\n<p>I never tried, and in hindsight, I wish I had had the courage to try a little harder back then. And that depression makes me lose my energy even more, and it\'s a vicious cycle.</p>\r\n\r\n<p>It\'s a vicious cycle. I can cry just by seeing the old man from my previous life. I want to tell him, "I understand, I understand.</p>\r\n\r\n<p>I want to say, "Have fun in the other world! I watch them while cheering them on.</p>\r\n\r\n<p>Of course, there is no other world in the real world.</p>\r\n\r\n<p>But I will try to live like Rudeus, thinking that I am reborn every morning and reincarnated.</p>\r\n\r\n<p></p>', 'references': '', 'rating': 0.0, 'rating_count': None, 'published_date': dateutil.parser.parse("2023-07-03T02:53:18.372662+00:00"), 'updated_date': dateutil.parser.parse("2023-07-03T02:53:18.410948+00:00")} ) 
    knowledge_knowledge_189.author =  importer.locate_object(UserAccount, "id", UserAccount, "id", 1, {'id': 1, 'password': 'pbkdf2_sha256$600000$Q9AwSzFqEXF1ueS21sGGfz$rZo+NVruXU5Zf5vp00wtuwLn0Z333sn5NtvS8VWKqds=', 'last_login': dateutil.parser.parse("2023-06-30T06:03:10.086511+00:00"), 'is_superuser': True, 'email': 'yurinakanishi33@gmail.com', 'name': 'yuri', 'is_active': True, 'is_staff': True} ) 
    knowledge_knowledge_189 = importer.save_or_locate(knowledge_knowledge_189)

    knowledge_knowledge_190 = Knowledge()
    knowledge_knowledge_190.name = 'Watching "Unemployed Reincarnation'
    knowledge_knowledge_190.slug = 'watching-unemployed-reincarnation'
    knowledge_knowledge_190.language =  importer.locate_object(Language, "id", Language, "id", 1, {'id': 1, 'name': 'en'} ) 
    knowledge_knowledge_190.genre_for_url =  importer.locate_object(GenreForURL, "id", GenreForURL, "id", 1, {'id': 1, 'name': 'knowledge'} ) 
    knowledge_knowledge_190.type = 'blog'
    knowledge_knowledge_190.notesite_url = ''
    knowledge_knowledge_190.article =  importer.locate_object(Article, "id", Article, "id", 6289, {'id': 6289, 'excerpt': 'Watching "Unemployed Reincarnation', 'kicker': 'Watching "Unemployed Reincarnation', 'content': '<p>I watched an anime called "Unemployed Reincarnation.</p>\r\n\r\n<p>The story is about an old man who was bullied and became a recluse, but was reincarnated in another world under the name of Rudeus and started over as a baby.</p>\r\n\r\n<p>He becomes active in the other world, but memories of his previous life come back to him and he has a hard time summoning up the courage to do so.</p>\r\n\r\n<p>I myself have been out of school because of relationships, so I understand how Rudeus (the old man) feels painfully well.</p>\r\n\r\n<p>Even though he is safe and away from threats, he is reminded of the past, and the world seems really awful. The words "I\'m not good enough" stick with me.</p>\r\n\r\n<p>I never tried, and in hindsight, I wish I had had the courage to try a little harder back then. And that depression makes me lose my energy even more, and it\'s a vicious cycle.</p>\r\n\r\n<p>It\'s a vicious cycle. I can cry just by seeing the old man from my previous life. I want to tell him, "I understand, I understand.</p>\r\n\r\n<p>I want to say, "Have fun in the other world! I watch them while cheering them on.</p>\r\n\r\n<p>Of course, there is no other world in the real world.</p>\r\n\r\n<p>But I will try to live like Rudeus, thinking that I am reborn every morning and reincarnated.</p>\r\n\r\n<p></p>', 'references': '', 'rating': 0.0, 'rating_count': None, 'published_date': dateutil.parser.parse("2023-07-03T02:53:18.372662+00:00"), 'updated_date': dateutil.parser.parse("2023-07-03T02:53:18.410948+00:00")} ) 
    knowledge_knowledge_190.author =  importer.locate_object(UserAccount, "id", UserAccount, "id", 1, {'id': 1, 'password': 'pbkdf2_sha256$600000$Q9AwSzFqEXF1ueS21sGGfz$rZo+NVruXU5Zf5vp00wtuwLn0Z333sn5NtvS8VWKqds=', 'last_login': dateutil.parser.parse("2023-06-30T06:03:10.086511+00:00"), 'is_superuser': True, 'email': 'yurinakanishi33@gmail.com', 'name': 'yuri', 'is_active': True, 'is_staff': True} ) 
    knowledge_knowledge_190 = importer.save_or_locate(knowledge_knowledge_190)

    knowledge_knowledge_191 = Knowledge()
    knowledge_knowledge_191.name = ''
    knowledge_knowledge_191.slug = 'the-people-of-mali-wouldnt-leave-me-alone-jp'
    knowledge_knowledge_191.language =  importer.locate_object(Language, "id", Language, "id", 2, {'id': 2, 'name': 'jp'} ) 
    knowledge_knowledge_191.genre_for_url =  importer.locate_object(GenreForURL, "id", GenreForURL, "id", 1, {'id': 1, 'name': 'knowledge'} ) 
    knowledge_knowledge_191.type = 'blog'
    knowledge_knowledge_191.notesite_url = ''
    knowledge_knowledge_191.article =  importer.locate_object(Article, "id", Article, "id", 6290, {'id': 6290, 'excerpt': '', 'kicker': '', 'content': '<p>I was so impressed by the "Kokoro no Jidai - Religion and Life" broadcast on NHK the other day that I would like to introduce some of its contents.</p>\r\n\r\n<p>The person introduced in this episode was Usbi Sako. He is from the Republic of Mali in Africa and is the president of Kyoto Seika University in Kyoto Prefecture.</p>\r\n\r\n<p>Mr. Sako had a homestay program from Japan to Mali.</p>\r\n\r\n<p>One year, a girl who participated in the program was so nervous that she started crying after asking a few questions during the pre-departure interview. Saco thought it would be difficult for her to do well in a homestay in Mali.</p>\r\n\r\n<p>However, during the homestay, she became brighter and brighter. At the end of the homestay, when we had a party and performed a Japanese dance, she almost took the lead in dancing.</p>\r\n\r\n<p>Sako-san said, "What? What do you mean?" and asked her why.</p>\r\n\r\n<p>Mari\'s homestay people, even though she didn\'t want to, they all kept talking to her, asking her more and more questions, and forcing her to go shopping with them. She says that this changed her.</p>\r\n\r\n<p>Japan left me alone, but Mari did not leave me alone.</p>\r\n\r\n<p>So I faced myself and changed myself.</p>\r\n\r\n<p>That is why I changed myself.</p>\r\n\r\n<p>In an interview on the program, Sako said</p>\r\n\r\n<p>In Japan, when there is someone who cannot speak, people tend to say, "Oh, if he (she) cannot speak, let\'s leave him (her) alone. In the sense of respect and esteem, they leave the person as he (she) is, even though he (she) really wants to get over it.</p>\r\n\r\n<p>When I saw her dancing, I was so shocked that I cried.</p>\r\n\r\n<p>◇ ◇</p>\r\n\r\n<p>I saw this program and thought to myself that interfering with others is not as bad as it seems.</p>\r\n\r\n<p>(Of course, there is a limit to the amount of interference, as too much involvement by those around you can make the person feel more depressed or worse.)</p>\r\n\r\n<p>) I feel that the attitude of "others are strangers, so let\'s just leave them alone and not get involved" is an excuse to protect oneself. The mentality is that if you get involved and they reject you, or if they don\'t like you, it means that you are in denial. The truth is, however, that even if you are rejected or disliked, it does not mean that everything about you has been denied.</p>\r\n\r\n<p>Incidentally, an Indian acquaintance of mine told me that in India, strangers who have just met each other for the first time today are talking to each other on the train. In Japan, such a thing would be impossible (laughs).</p>\r\n\r\n<p>Among the people I have met, I have the impression that there are many people who are not good at socializing but really want to communicate with others (I am one of them). There\'s that feeling of, "I want to be left alone, but I don\'t want to be left alone."</p>\r\n\r\n<p>I think the kindness of not leaving someone who seems to want to be left alone can save someone\'s life.</p>\r\n\r\n<p></p>', 'references': '', 'rating': 0.0, 'rating_count': None, 'published_date': dateutil.parser.parse("2023-07-03T02:53:18.372662+00:00"), 'updated_date': dateutil.parser.parse("2023-07-03T02:53:18.410948+00:00")} ) 
    knowledge_knowledge_191.author =  importer.locate_object(UserAccount, "id", UserAccount, "id", 1, {'id': 1, 'password': 'pbkdf2_sha256$600000$Q9AwSzFqEXF1ueS21sGGfz$rZo+NVruXU5Zf5vp00wtuwLn0Z333sn5NtvS8VWKqds=', 'last_login': dateutil.parser.parse("2023-06-30T06:03:10.086511+00:00"), 'is_superuser': True, 'email': 'yurinakanishi33@gmail.com', 'name': 'yuri', 'is_active': True, 'is_staff': True} ) 
    knowledge_knowledge_191 = importer.save_or_locate(knowledge_knowledge_191)

    knowledge_knowledge_192 = Knowledge()
    knowledge_knowledge_192.name = 'AAA'
    knowledge_knowledge_192.slug = 'the-people-of-mali-wouldnt-leave-me-alone'
    knowledge_knowledge_192.language =  importer.locate_object(Language, "id", Language, "id", 1, {'id': 1, 'name': 'en'} ) 
    knowledge_knowledge_192.genre_for_url =  importer.locate_object(GenreForURL, "id", GenreForURL, "id", 1, {'id': 1, 'name': 'knowledge'} ) 
    knowledge_knowledge_192.type = 'blog'
    knowledge_knowledge_192.notesite_url = ''
    knowledge_knowledge_192.article =  importer.locate_object(Article, "id", Article, "id", 6291, {'id': 6291, 'excerpt': 'AAA', 'kicker': 'AAA', 'content': '<p>I was so impressed by the "Kokoro no Jidai - Religion and Life" broadcast on NHK the other day that I would like to introduce some of its contents.</p>\r\n\r\n<p>The person introduced in this episode was Usbi Sako. He is from the Republic of Mali in Africa and is the president of Kyoto Seika University in Kyoto Prefecture.</p>\r\n\r\n<p>Mr. Sako had a homestay program from Japan to Mali.</p>\r\n\r\n<p>One year, a girl who participated in the program was so nervous that she started crying after asking a few questions during the pre-departure interview. Saco thought it would be difficult for her to do well in a homestay in Mali.</p>\r\n\r\n<p>However, during the homestay, she became brighter and brighter. At the end of the homestay, when we had a party and performed a Japanese dance, she almost took the lead in dancing.</p>\r\n\r\n<p>Sako-san said, "What? What do you mean?" and asked her why.</p>\r\n\r\n<p>Mari\'s homestay people, even though she didn\'t want to, they all kept talking to her, asking her more and more questions, and forcing her to go shopping with them. She says that this changed her.</p>\r\n\r\n<p>Japan left me alone, but Mari did not leave me alone.</p>\r\n\r\n<p>So I faced myself and changed myself.</p>\r\n\r\n<p>That is why I changed myself.</p>\r\n\r\n<p>In an interview on the program, Sako said</p>\r\n\r\n<p>In Japan, when there is someone who cannot speak, people tend to say, "Oh, if he (she) cannot speak, let\'s leave him (her) alone. In the sense of respect and esteem, they leave the person as he (she) is, even though he (she) really wants to get over it.</p>\r\n\r\n<p>When I saw her dancing, I was so shocked that I cried.</p>\r\n\r\n<p>◇ ◇</p>\r\n\r\n<p>I saw this program and thought to myself that interfering with others is not as bad as it seems.</p>\r\n\r\n<p>(Of course, there is a limit to the amount of interference, as too much involvement by those around you can make the person feel more depressed or worse.)</p>\r\n\r\n<p>) I feel that the attitude of "others are strangers, so let\'s just leave them alone and not get involved" is an excuse to protect oneself. The mentality is that if you get involved and they reject you, or if they don\'t like you, it means that you are in denial. The truth is, however, that even if you are rejected or disliked, it does not mean that everything about you has been denied.</p>\r\n\r\n<p>Incidentally, an Indian acquaintance of mine told me that in India, strangers who have just met each other for the first time today are talking to each other on the train. In Japan, such a thing would be impossible (laughs).</p>\r\n\r\n<p>Among the people I have met, I have the impression that there are many people who are not good at socializing but really want to communicate with others (I am one of them). There\'s that feeling of, "I want to be left alone, but I don\'t want to be left alone."</p>\r\n\r\n<p>I think the kindness of not leaving someone who seems to want to be left alone can save someone\'s life.</p>\r\n\r\n<p></p>', 'references': '', 'rating': 0.0, 'rating_count': None, 'published_date': dateutil.parser.parse("2023-07-03T02:53:18.372662+00:00"), 'updated_date': dateutil.parser.parse("2023-07-03T02:53:18.410948+00:00")} ) 
    knowledge_knowledge_192.author =  importer.locate_object(UserAccount, "id", UserAccount, "id", 1, {'id': 1, 'password': 'pbkdf2_sha256$600000$Q9AwSzFqEXF1ueS21sGGfz$rZo+NVruXU5Zf5vp00wtuwLn0Z333sn5NtvS8VWKqds=', 'last_login': dateutil.parser.parse("2023-06-30T06:03:10.086511+00:00"), 'is_superuser': True, 'email': 'yurinakanishi33@gmail.com', 'name': 'yuri', 'is_active': True, 'is_staff': True} ) 
    knowledge_knowledge_192 = importer.save_or_locate(knowledge_knowledge_192)

    knowledge_knowledge_193 = Knowledge()
    knowledge_knowledge_193.name = ''
    knowledge_knowledge_193.slug = 'the-best-is-the-enemy-of-the-good-jp'
    knowledge_knowledge_193.language =  importer.locate_object(Language, "id", Language, "id", 2, {'id': 2, 'name': 'jp'} ) 
    knowledge_knowledge_193.genre_for_url =  importer.locate_object(GenreForURL, "id", GenreForURL, "id", 1, {'id': 1, 'name': 'knowledge'} ) 
    knowledge_knowledge_193.type = 'blog'
    knowledge_knowledge_193.notesite_url = 'https://note.com/argumented_world/n/n420eea9e03fa'
    knowledge_knowledge_193.article =  importer.locate_object(Article, "id", Article, "id", 6292, {'id': 6292, 'excerpt': '', 'kicker': '', 'content': '<p>There is a saying, "The best is the enemy of the good.</p>\r\n\r\n<p>When I was reading "Signal & Noise," I came across this saying and it really hit home.</p>\r\n\r\n<p>It means exactly what it says.</p>\r\n\r\n<p>It is an illusion to think that you can make the best choice. It is better not to aim for the best.</p>\r\n\r\n<p>It means something like this.</p>\r\n\r\n<p>Adriaan de Froot, a Dutch psychologist, in his book on chess players, writes about the difference between professionals and amateurs as follows</p>\r\n\r\n<p>In chess games, when faced with a problem, amateur players often get stuck, trying to make the perfect move.</p>\r\n\r\n<p>On the other hand, professionals know that in the limited time available to them, they cannot anticipate all of the many possible moves and find the best one. Therefore, they do not try to list all possible moves, but rather think about what move will give them the best possible situation.</p>\r\n\r\n<p>Of course, it is always best to do the best you can. But there is a limit to human ability. When we seek the best, we become impatient and forceful, and it becomes difficult for us to exert our true potential.</p>\r\n\r\n<p>And in our obsession with the best, we may end up missing even the good (as I have experienced many times).</p>\r\n\r\n<p>And we may regret what has already happened, saying, "If only I had done my best at that time.... I have experienced this many times. I know that what has already happened will never change, so if I have time to regret, I should move on to the next thing. (Laughter)</p>\r\n\r\n<p>Also, what seems best from one point of view may not only not be the best, but may not be that good from another point of view. What you think is just good or bad may be close to the best when you think about it later.</p>\r\n\r\n<p>The next time you find yourself looking for the best.</p>\r\n\r\n<p>I will say to myself, "Well, let\'s just calm down and take a deep breath.</p>\r\n\r\n<p>I will say to myself, "Well, let\'s just calm down and take a deep breath.</p>\r\n\r\n<p></p>', 'references': '', 'rating': 0.0, 'rating_count': None, 'published_date': dateutil.parser.parse("2023-07-03T02:53:18.372662+00:00"), 'updated_date': dateutil.parser.parse("2023-07-03T02:53:18.410948+00:00")} ) 
    knowledge_knowledge_193.author =  importer.locate_object(UserAccount, "id", UserAccount, "id", 1, {'id': 1, 'password': 'pbkdf2_sha256$600000$Q9AwSzFqEXF1ueS21sGGfz$rZo+NVruXU5Zf5vp00wtuwLn0Z333sn5NtvS8VWKqds=', 'last_login': dateutil.parser.parse("2023-06-30T06:03:10.086511+00:00"), 'is_superuser': True, 'email': 'yurinakanishi33@gmail.com', 'name': 'yuri', 'is_active': True, 'is_staff': True} ) 
    knowledge_knowledge_193 = importer.save_or_locate(knowledge_knowledge_193)

    knowledge_knowledge_194 = Knowledge()
    knowledge_knowledge_194.name = 'the-best-is-the-enemy-of-the-good'
    knowledge_knowledge_194.slug = 'the-best-is-the-enemy-of-the-good'
    knowledge_knowledge_194.language =  importer.locate_object(Language, "id", Language, "id", 1, {'id': 1, 'name': 'en'} ) 
    knowledge_knowledge_194.genre_for_url =  importer.locate_object(GenreForURL, "id", GenreForURL, "id", 1, {'id': 1, 'name': 'knowledge'} ) 
    knowledge_knowledge_194.type = 'blog'
    knowledge_knowledge_194.notesite_url = 'https://note.com/argumented_world/n/n420eea9e03fa'
    knowledge_knowledge_194.article =  importer.locate_object(Article, "id", Article, "id", 6293, {'id': 6293, 'excerpt': 'the-best-is-the-enemy-of-the-good', 'kicker': 'the-best-is-the-enemy-of-the-good', 'content': '<p>There is a saying, "The best is the enemy of the good.</p>\r\n\r\n<p>When I was reading "Signal & Noise," I came across this saying and it really hit home.</p>\r\n\r\n<p>It means exactly what it says.</p>\r\n\r\n<p>It is an illusion to think that you can make the best choice. It is better not to aim for the best.</p>\r\n\r\n<p>It means something like this.</p>\r\n\r\n<p>Adriaan de Froot, a Dutch psychologist, in his book on chess players, writes about the difference between professionals and amateurs as follows</p>\r\n\r\n<p>In chess games, when faced with a problem, amateur players often get stuck, trying to make the perfect move.</p>\r\n\r\n<p>On the other hand, professionals know that in the limited time available to them, they cannot anticipate all of the many possible moves and find the best one. Therefore, they do not try to list all possible moves, but rather think about what move will give them the best possible situation.</p>\r\n\r\n<p>Of course, it is always best to do the best you can. But there is a limit to human ability. When we seek the best, we become impatient and forceful, and it becomes difficult for us to exert our true potential.</p>\r\n\r\n<p>And in our obsession with the best, we may end up missing even the good (as I have experienced many times).</p>\r\n\r\n<p>And we may regret what has already happened, saying, "If only I had done my best at that time.... I have experienced this many times. I know that what has already happened will never change, so if I have time to regret, I should move on to the next thing. (Laughter)</p>\r\n\r\n<p>Also, what seems best from one point of view may not only not be the best, but may not be that good from another point of view. What you think is just good or bad may be close to the best when you think about it later.</p>\r\n\r\n<p>The next time you find yourself looking for the best.</p>\r\n\r\n<p>I will say to myself, "Well, let\'s just calm down and take a deep breath.</p>\r\n\r\n<p>I will say to myself, "Well, let\'s just calm down and take a deep breath.</p>\r\n\r\n<p></p>', 'references': '', 'rating': 0.0, 'rating_count': None, 'published_date': dateutil.parser.parse("2023-07-03T02:53:18.372662+00:00"), 'updated_date': dateutil.parser.parse("2023-07-03T02:53:18.410948+00:00")} ) 
    knowledge_knowledge_194.author =  importer.locate_object(UserAccount, "id", UserAccount, "id", 1, {'id': 1, 'password': 'pbkdf2_sha256$600000$Q9AwSzFqEXF1ueS21sGGfz$rZo+NVruXU5Zf5vp00wtuwLn0Z333sn5NtvS8VWKqds=', 'last_login': dateutil.parser.parse("2023-06-30T06:03:10.086511+00:00"), 'is_superuser': True, 'email': 'yurinakanishi33@gmail.com', 'name': 'yuri', 'is_active': True, 'is_staff': True} ) 
    knowledge_knowledge_194 = importer.save_or_locate(knowledge_knowledge_194)

    knowledge_knowledge_195 = Knowledge()
    knowledge_knowledge_195.name = ''
    knowledge_knowledge_195.slug = 'standing-on-the-shoulder-of-giants-jp'
    knowledge_knowledge_195.language =  importer.locate_object(Language, "id", Language, "id", 2, {'id': 2, 'name': 'jp'} ) 
    knowledge_knowledge_195.genre_for_url =  importer.locate_object(GenreForURL, "id", GenreForURL, "id", 1, {'id': 1, 'name': 'knowledge'} ) 
    knowledge_knowledge_195.type = 'blog'
    knowledge_knowledge_195.notesite_url = 'https://note.com/argumented_world/n/n7ce4e759f559'
    knowledge_knowledge_195.article =  importer.locate_object(Article, "id", Article, "id", 6294, {'id': 6294, 'excerpt': '', 'kicker': '', 'content': "<p>We now live in the most advanced civilization in the history of mankind, but in the course of our long history, many civilizations have fallen back or perished.</p>\r\n\r\n<p>In this article, we will consider how difficult it would be to recover if our civilization were to regress or perish!</p>\r\n\r\n<p>Table of Contents</p>\r\n\r\n<p>The Collapse of Roman Civilization</p>\r\n\r\n<p>What Our Predecessors Have Built Up</p>\r\n\r\n<p>Other articles, references, etc.</p>\r\n\r\n<p>The Collapse of Roman Civilization</p>\r\n\r\n<p>In Europe, from the fall of the Roman Empire in the 5th century until the Renaissance in the 14th century, there was a period known as the Dark Ages of the Middle Ages.</p>\r\n\r\n<p>For approximately 1,000 years after the fall of the Roman Empire, a civilization as advanced as Rome's could not be restored.</p>\r\n\r\n<p>During the Dark Ages of the Middle Ages, civilization was much more backward than in Roman times, and the advanced Roman culture represented by the public baths was gone. Even the aqueducts did not produce anything comparable to those built in the Roman era.</p>\r\n\r\n<p>Image 1</p>\r\n\r\n<p>This photo shows the Aqueduct of Segovia in Spain.</p>\r\n\r\n<p>And even in buildings and other structures, the Roman technique of stone arches and domes had been lost. Even for solid buildings, it was enough to put stone underneath and build a wooden hut on top of it.</p>\r\n\r\n<p>What our predecessors have built up</p>\r\n\r\n<p>For example, a civilization as low (for lack of a better word) as the pit dwelling, even if it recedes or collapses, it can be quickly rebuilt.</p>\r\n\r\n<p>However, if our current civilization were to regress, it would likely take many years to revive its technology.</p>\r\n\r\n<p>Especially in the field of machinery and electronics, what our predecessors have accumulated is too great. From the invention of the light bulb to the invention of the personal computer, our present lives are made possible by the accumulation of a tremendous number of inventions and discoveries.</p>\r\n\r\n<p>As proof of this, most of us cannot fix a broken phone by ourselves, even with the help of our relatives and acquaintances.</p>\r\n\r\n<p>We have to take it to a specialized repair shop, and even specialized repair shops do not fix it based on their understanding of the principles, but rather on a manual.</p>\r\n\r\n<p>This is despite the fact that smartphones are a necessity in our daily lives and are the most familiar thing to us. So our civilization has become so advanced that once it collapses, we are at a point where it will take quite a few years to bring it back.</p>\r\n\r\n<p>Like the advanced Roman civilization, I think that when our advanced civilization regresses, like the Dark Ages, we may not be able to recover our technology for a long period of time.</p>\r\n\r\n<p>This time we have been thinking about what happens when our current civilization regresses, and I can't really imagine what would cause such a thing to happen. What immediately comes to mind is when the world is at war again, but ... .</p>\r\n\r\n<p></p>", 'references': '', 'rating': 0.0, 'rating_count': None, 'published_date': dateutil.parser.parse("2023-07-03T02:53:18.372662+00:00"), 'updated_date': dateutil.parser.parse("2023-07-03T02:53:18.410948+00:00")} ) 
    knowledge_knowledge_195.author =  importer.locate_object(UserAccount, "id", UserAccount, "id", 1, {'id': 1, 'password': 'pbkdf2_sha256$600000$Q9AwSzFqEXF1ueS21sGGfz$rZo+NVruXU5Zf5vp00wtuwLn0Z333sn5NtvS8VWKqds=', 'last_login': dateutil.parser.parse("2023-06-30T06:03:10.086511+00:00"), 'is_superuser': True, 'email': 'yurinakanishi33@gmail.com', 'name': 'yuri', 'is_active': True, 'is_staff': True} ) 
    knowledge_knowledge_195 = importer.save_or_locate(knowledge_knowledge_195)

    knowledge_knowledge_196 = Knowledge()
    knowledge_knowledge_196.name = 'standing-on-the-shoulder-of-giants'
    knowledge_knowledge_196.slug = 'standing-on-the-shoulder-of-giants'
    knowledge_knowledge_196.language =  importer.locate_object(Language, "id", Language, "id", 1, {'id': 1, 'name': 'en'} ) 
    knowledge_knowledge_196.genre_for_url =  importer.locate_object(GenreForURL, "id", GenreForURL, "id", 1, {'id': 1, 'name': 'knowledge'} ) 
    knowledge_knowledge_196.type = 'blog'
    knowledge_knowledge_196.notesite_url = 'https://note.com/argumented_world/n/n7ce4e759f559'
    knowledge_knowledge_196.article =  importer.locate_object(Article, "id", Article, "id", 6295, {'id': 6295, 'excerpt': 'standing-on-the-shoulder-of-giants', 'kicker': 'standing-on-the-shoulder-of-giants', 'content': "<p>We now live in the most advanced civilization in the history of mankind, but in the course of our long history, many civilizations have fallen back or perished.</p>\r\n\r\n<p>In this article, we will consider how difficult it would be to recover if our civilization were to regress or perish!</p>\r\n\r\n<p>Table of Contents</p>\r\n\r\n<p>The Collapse of Roman Civilization</p>\r\n\r\n<p>What Our Predecessors Have Built Up</p>\r\n\r\n<p>Other articles, references, etc.</p>\r\n\r\n<p>The Collapse of Roman Civilization</p>\r\n\r\n<p>In Europe, from the fall of the Roman Empire in the 5th century until the Renaissance in the 14th century, there was a period known as the Dark Ages of the Middle Ages.</p>\r\n\r\n<p>For approximately 1,000 years after the fall of the Roman Empire, a civilization as advanced as Rome's could not be restored.</p>\r\n\r\n<p>During the Dark Ages of the Middle Ages, civilization was much more backward than in Roman times, and the advanced Roman culture represented by the public baths was gone. Even the aqueducts did not produce anything comparable to those built in the Roman era.</p>\r\n\r\n<p>Image 1</p>\r\n\r\n<p>This photo shows the Aqueduct of Segovia in Spain.</p>\r\n\r\n<p>And even in buildings and other structures, the Roman technique of stone arches and domes had been lost. Even for solid buildings, it was enough to put stone underneath and build a wooden hut on top of it.</p>\r\n\r\n<p>What our predecessors have built up</p>\r\n\r\n<p>For example, a civilization as low (for lack of a better word) as the pit dwelling, even if it recedes or collapses, it can be quickly rebuilt.</p>\r\n\r\n<p>However, if our current civilization were to regress, it would likely take many years to revive its technology.</p>\r\n\r\n<p>Especially in the field of machinery and electronics, what our predecessors have accumulated is too great. From the invention of the light bulb to the invention of the personal computer, our present lives are made possible by the accumulation of a tremendous number of inventions and discoveries.</p>\r\n\r\n<p>As proof of this, most of us cannot fix a broken phone by ourselves, even with the help of our relatives and acquaintances.</p>\r\n\r\n<p>We have to take it to a specialized repair shop, and even specialized repair shops do not fix it based on their understanding of the principles, but rather on a manual.</p>\r\n\r\n<p>This is despite the fact that smartphones are a necessity in our daily lives and are the most familiar thing to us. So our civilization has become so advanced that once it collapses, we are at a point where it will take quite a few years to bring it back.</p>\r\n\r\n<p>Like the advanced Roman civilization, I think that when our advanced civilization regresses, like the Dark Ages, we may not be able to recover our technology for a long period of time.</p>\r\n\r\n<p>This time we have been thinking about what happens when our current civilization regresses, and I can't really imagine what would cause such a thing to happen. What immediately comes to mind is when the world is at war again, but ... .</p>\r\n\r\n<p></p>", 'references': '', 'rating': 0.0, 'rating_count': None, 'published_date': dateutil.parser.parse("2023-07-03T02:53:18.372662+00:00"), 'updated_date': dateutil.parser.parse("2023-07-03T02:53:18.410948+00:00")} ) 
    knowledge_knowledge_196.author =  importer.locate_object(UserAccount, "id", UserAccount, "id", 1, {'id': 1, 'password': 'pbkdf2_sha256$600000$Q9AwSzFqEXF1ueS21sGGfz$rZo+NVruXU5Zf5vp00wtuwLn0Z333sn5NtvS8VWKqds=', 'last_login': dateutil.parser.parse("2023-06-30T06:03:10.086511+00:00"), 'is_superuser': True, 'email': 'yurinakanishi33@gmail.com', 'name': 'yuri', 'is_active': True, 'is_staff': True} ) 
    knowledge_knowledge_196 = importer.save_or_locate(knowledge_knowledge_196)

    knowledge_knowledge_197 = Knowledge()
    knowledge_knowledge_197.name = ''
    knowledge_knowledge_197.slug = 'solar-flare-and-electronic-devices-jp'
    knowledge_knowledge_197.language =  importer.locate_object(Language, "id", Language, "id", 2, {'id': 2, 'name': 'jp'} ) 
    knowledge_knowledge_197.genre_for_url =  importer.locate_object(GenreForURL, "id", GenreForURL, "id", 1, {'id': 1, 'name': 'knowledge'} ) 
    knowledge_knowledge_197.type = 'blog'
    knowledge_knowledge_197.notesite_url = 'https://note.com/argumented_world/n/n34b4fd899e89'
    knowledge_knowledge_197.article =  importer.locate_object(Article, "id", Article, "id", 6296, {'id': 6296, 'excerpt': '', 'kicker': '', 'content': '<p>In the current climate, it is said that "the IT industry is going to grow and grow and grow." In this article, we would like to discuss the possible future of the IT industry.</p>\r\n\r\n<p>In this issue, we would like to consider the possible future of the IT industry.</p>\r\n\r\n<p>Will the IT industry definitely grow in the future?</p>\r\n\r\n<p>I had vaguely thought that "IT will grow in the future. I will be working in the IT industry from next spring, so I need it to grow ... .</p>\r\n\r\n<p>But I was shocked when I saw a book titled "The Scientific Suitability of Jobs. In this book, the author says that you should not choose a job based on whether or not the industry is said to be growing in the future.</p>\r\n\r\n<p>It seems that social conditions three to five years from now are impossible to predict, even for experts. This means that people cannot know which industries will grow and which industries will decline in the next three to five years.</p>\r\n\r\n<p>Knowing this, I reflected on my own assumptions and asked myself, "If the IT industry is going to decline, what are the causes? One possible cause was solar flares.</p>\r\n\r\n<p>One possible cause was solar flares.</p>\r\n\r\n<p>Solar Flares</p>\r\n\r\n<p>A solar flare is an explosion that occurs in the sun.</p>\r\n\r\n<p>The explosions can be small or large, but the small ones occur several times a day.</p>\r\n\r\n<p>Solar flares release shockwaves and plasma at the same time as the explosion. Sometimes they reach the earth and cause a magnetic storm, resulting in communication problems.</p>\r\n\r\n<p>Most of the effects of solar flares, such as communication problems, are said to be temporary, but in the case of a very large solar flare, electronic equipment may be damaged by the powerful magnetism. However, in the case of a very large solar flare, the powerful magnetism could damage electronic equipment or even completely halt communications.</p>\r\n\r\n<p>In fact, a large solar flare occurred 150 years ago, but it did not cause much damage because electricity was not widespread at that time.</p>\r\n\r\n<p>Image 1</p>\r\n\r\n<p>If a large solar flare like the one that occurred 150 years ago were to occur today and cause a major communication failure, such as the loss of communication for several months, the concept of not knowing when data on electronic devices will become unusable would spread, and people would probably start using their smartphones and computers but writing important things down on paper. I think people will start to write down important things on paper while using smartphones and PCs.</p>\r\n\r\n<p>If so, the IT industry may not go into decline, but it may not grow. (Sorry. I just said earlier that human predictions are unreliable, and yet I am predicting so much. LOL)</p>\r\n\r\n<p>This solar flare story is, of course, a "believe it or not ..." kind of thing. ." kind of thing.</p>\r\n\r\n<p>But we don\'t know what is going to happen in the IT industry, even if it is not caused by solar flares, and this applies to industries other than IT as well.</p>\r\n\r\n<p>Who would have thought last year that everyone would be wearing masks in the middle of summer? It is good to keep in mind that anything can happen in any industry.</p>\r\n\r\n<p>Other articles, references, etc.</p>\r\n\r\n<p>Thank you for reading to the end!</p>\r\n\r\n<p>I have written many other articles!</p>\r\n\r\n<p>References</p>\r\n\r\n<p>How to Choose the Best Occupation, Based on 4021 Research Data from "The Scientific Suitability of Occupations</p>\r\n\r\n<p>Yu Suzuki (Author)</p>\r\n\r\n<p>https://www.discoverychannel.jp/0000004126/</p>\r\n\r\n<p>http://www.isee.nagoya-u.ac.jp/50naze/space_weather/19.html</p>\r\n\r\n<p>Images used</p>\r\n\r\n<p>Garik Barseghyan on Pixabay</p>\r\n\r\n<p>Gerd Altmann on Pixabay</p>\r\n\r\n<p></p>', 'references': '', 'rating': 0.0, 'rating_count': None, 'published_date': dateutil.parser.parse("2023-07-03T02:53:18.372662+00:00"), 'updated_date': dateutil.parser.parse("2023-07-03T02:53:18.410948+00:00")} ) 
    knowledge_knowledge_197.author =  importer.locate_object(UserAccount, "id", UserAccount, "id", 1, {'id': 1, 'password': 'pbkdf2_sha256$600000$Q9AwSzFqEXF1ueS21sGGfz$rZo+NVruXU5Zf5vp00wtuwLn0Z333sn5NtvS8VWKqds=', 'last_login': dateutil.parser.parse("2023-06-30T06:03:10.086511+00:00"), 'is_superuser': True, 'email': 'yurinakanishi33@gmail.com', 'name': 'yuri', 'is_active': True, 'is_staff': True} ) 
    knowledge_knowledge_197 = importer.save_or_locate(knowledge_knowledge_197)

    knowledge_knowledge_198 = Knowledge()
    knowledge_knowledge_198.name = 'The Future of the IT Industry and Solar Flares'
    knowledge_knowledge_198.slug = 'solar-flare-and-electronic-devices'
    knowledge_knowledge_198.language =  importer.locate_object(Language, "id", Language, "id", 1, {'id': 1, 'name': 'en'} ) 
    knowledge_knowledge_198.genre_for_url =  importer.locate_object(GenreForURL, "id", GenreForURL, "id", 1, {'id': 1, 'name': 'knowledge'} ) 
    knowledge_knowledge_198.type = 'blog'
    knowledge_knowledge_198.notesite_url = 'https://note.com/argumented_world/n/n34b4fd899e89'
    knowledge_knowledge_198.article =  importer.locate_object(Article, "id", Article, "id", 6297, {'id': 6297, 'excerpt': 'The Future of the IT Industry and Solar Flares', 'kicker': 'The Future of the IT Industry and Solar Flares', 'content': '<p>In the current climate, it is said that "the IT industry is going to grow and grow and grow." In this article, we would like to discuss the possible future of the IT industry.</p>\r\n\r\n<p>In this issue, we would like to consider the possible future of the IT industry.</p>\r\n\r\n<p>Will the IT industry definitely grow in the future?</p>\r\n\r\n<p>I had vaguely thought that "IT will grow in the future. I will be working in the IT industry from next spring, so I need it to grow ... .</p>\r\n\r\n<p>But I was shocked when I saw a book titled "The Scientific Suitability of Jobs. In this book, the author says that you should not choose a job based on whether or not the industry is said to be growing in the future.</p>\r\n\r\n<p>It seems that social conditions three to five years from now are impossible to predict, even for experts. This means that people cannot know which industries will grow and which industries will decline in the next three to five years.</p>\r\n\r\n<p>Knowing this, I reflected on my own assumptions and asked myself, "If the IT industry is going to decline, what are the causes? One possible cause was solar flares.</p>\r\n\r\n<p>One possible cause was solar flares.</p>\r\n\r\n<p>Solar Flares</p>\r\n\r\n<p>A solar flare is an explosion that occurs in the sun.</p>\r\n\r\n<p>The explosions can be small or large, but the small ones occur several times a day.</p>\r\n\r\n<p>Solar flares release shockwaves and plasma at the same time as the explosion. Sometimes they reach the earth and cause a magnetic storm, resulting in communication problems.</p>\r\n\r\n<p>Most of the effects of solar flares, such as communication problems, are said to be temporary, but in the case of a very large solar flare, electronic equipment may be damaged by the powerful magnetism. However, in the case of a very large solar flare, the powerful magnetism could damage electronic equipment or even completely halt communications.</p>\r\n\r\n<p>In fact, a large solar flare occurred 150 years ago, but it did not cause much damage because electricity was not widespread at that time.</p>\r\n\r\n<p>Image 1</p>\r\n\r\n<p>If a large solar flare like the one that occurred 150 years ago were to occur today and cause a major communication failure, such as the loss of communication for several months, the concept of not knowing when data on electronic devices will become unusable would spread, and people would probably start using their smartphones and computers but writing important things down on paper. I think people will start to write down important things on paper while using smartphones and PCs.</p>\r\n\r\n<p>If so, the IT industry may not go into decline, but it may not grow. (Sorry. I just said earlier that human predictions are unreliable, and yet I am predicting so much. LOL)</p>\r\n\r\n<p>This solar flare story is, of course, a "believe it or not ..." kind of thing. ." kind of thing.</p>\r\n\r\n<p>But we don\'t know what is going to happen in the IT industry, even if it is not caused by solar flares, and this applies to industries other than IT as well.</p>\r\n\r\n<p>Who would have thought last year that everyone would be wearing masks in the middle of summer? It is good to keep in mind that anything can happen in any industry.</p>\r\n\r\n<p>Other articles, references, etc.</p>\r\n\r\n<p>Thank you for reading to the end!</p>\r\n\r\n<p>I have written many other articles!</p>\r\n\r\n<p>References</p>\r\n\r\n<p>How to Choose the Best Occupation, Based on 4021 Research Data from "The Scientific Suitability of Occupations</p>\r\n\r\n<p>Yu Suzuki (Author)</p>\r\n\r\n<p>https://www.discoverychannel.jp/0000004126/</p>\r\n\r\n<p>http://www.isee.nagoya-u.ac.jp/50naze/space_weather/19.html</p>\r\n\r\n<p>Images used</p>\r\n\r\n<p>Garik Barseghyan on Pixabay</p>\r\n\r\n<p>Gerd Altmann on Pixabay</p>\r\n\r\n<p></p>', 'references': '', 'rating': 0.0, 'rating_count': None, 'published_date': dateutil.parser.parse("2023-07-03T02:53:18.372662+00:00"), 'updated_date': dateutil.parser.parse("2023-07-03T02:53:18.410948+00:00")} ) 
    knowledge_knowledge_198.author =  importer.locate_object(UserAccount, "id", UserAccount, "id", 1, {'id': 1, 'password': 'pbkdf2_sha256$600000$Q9AwSzFqEXF1ueS21sGGfz$rZo+NVruXU5Zf5vp00wtuwLn0Z333sn5NtvS8VWKqds=', 'last_login': dateutil.parser.parse("2023-06-30T06:03:10.086511+00:00"), 'is_superuser': True, 'email': 'yurinakanishi33@gmail.com', 'name': 'yuri', 'is_active': True, 'is_staff': True} ) 
    knowledge_knowledge_198 = importer.save_or_locate(knowledge_knowledge_198)

    knowledge_knowledge_199 = Knowledge()
    knowledge_knowledge_199.name = 'risk-aversion-jp'
    knowledge_knowledge_199.slug = 'risk-aversion-jp'
    knowledge_knowledge_199.language =  importer.locate_object(Language, "id", Language, "id", 2, {'id': 2, 'name': 'jp'} ) 
    knowledge_knowledge_199.genre_for_url =  importer.locate_object(GenreForURL, "id", GenreForURL, "id", 1, {'id': 1, 'name': 'knowledge'} ) 
    knowledge_knowledge_199.type = 'blog'
    knowledge_knowledge_199.notesite_url = ''
    knowledge_knowledge_199.article =  importer.locate_object(Article, "id", Article, "id", 6298, {'id': 6298, 'excerpt': '', 'kicker': '', 'content': '<p>https://note.com/argumented_world/n/na3519a38ddc6</p>\r\n\r\n<p>リスク回避</p>\r\n\r\n<p>risk aversion</p>\r\n\r\n<p></p>', 'references': '', 'rating': 0.0, 'rating_count': None, 'published_date': dateutil.parser.parse("2023-07-03T02:53:18.372662+00:00"), 'updated_date': dateutil.parser.parse("2023-07-03T02:53:18.410948+00:00")} ) 
    knowledge_knowledge_199.author =  importer.locate_object(UserAccount, "id", UserAccount, "id", 1, {'id': 1, 'password': 'pbkdf2_sha256$600000$Q9AwSzFqEXF1ueS21sGGfz$rZo+NVruXU5Zf5vp00wtuwLn0Z333sn5NtvS8VWKqds=', 'last_login': dateutil.parser.parse("2023-06-30T06:03:10.086511+00:00"), 'is_superuser': True, 'email': 'yurinakanishi33@gmail.com', 'name': 'yuri', 'is_active': True, 'is_staff': True} ) 
    knowledge_knowledge_199 = importer.save_or_locate(knowledge_knowledge_199)

    knowledge_knowledge_200 = Knowledge()
    knowledge_knowledge_200.name = 'risk-aversion'
    knowledge_knowledge_200.slug = 'risk-aversion'
    knowledge_knowledge_200.language =  importer.locate_object(Language, "id", Language, "id", 1, {'id': 1, 'name': 'en'} ) 
    knowledge_knowledge_200.genre_for_url =  importer.locate_object(GenreForURL, "id", GenreForURL, "id", 1, {'id': 1, 'name': 'knowledge'} ) 
    knowledge_knowledge_200.type = 'blog'
    knowledge_knowledge_200.notesite_url = ''
    knowledge_knowledge_200.article =  importer.locate_object(Article, "id", Article, "id", 6299, {'id': 6299, 'excerpt': '', 'kicker': '', 'content': '<p>https://note.com/argumented_world/n/na3519a38ddc6</p>\r\n\r\n<p>リスク回避</p>\r\n\r\n<p>risk aversion</p>\r\n\r\n<p></p>', 'references': '', 'rating': 0.0, 'rating_count': None, 'published_date': dateutil.parser.parse("2023-07-03T02:53:18.372662+00:00"), 'updated_date': dateutil.parser.parse("2023-07-03T02:53:18.410948+00:00")} ) 
    knowledge_knowledge_200.author =  importer.locate_object(UserAccount, "id", UserAccount, "id", 1, {'id': 1, 'password': 'pbkdf2_sha256$600000$Q9AwSzFqEXF1ueS21sGGfz$rZo+NVruXU5Zf5vp00wtuwLn0Z333sn5NtvS8VWKqds=', 'last_login': dateutil.parser.parse("2023-06-30T06:03:10.086511+00:00"), 'is_superuser': True, 'email': 'yurinakanishi33@gmail.com', 'name': 'yuri', 'is_active': True, 'is_staff': True} ) 
    knowledge_knowledge_200 = importer.save_or_locate(knowledge_knowledge_200)

    knowledge_knowledge_201 = Knowledge()
    knowledge_knowledge_201.name = 'queens-gambit-pleasantness-of-the-cut-split-jp'
    knowledge_knowledge_201.slug = 'queens-gambit-pleasantness-of-the-cut-split-jp'
    knowledge_knowledge_201.language =  importer.locate_object(Language, "id", Language, "id", 2, {'id': 2, 'name': 'jp'} ) 
    knowledge_knowledge_201.genre_for_url =  importer.locate_object(GenreForURL, "id", GenreForURL, "id", 1, {'id': 1, 'name': 'knowledge'} ) 
    knowledge_knowledge_201.type = 'blog'
    knowledge_knowledge_201.notesite_url = ''
    knowledge_knowledge_201.article =  importer.locate_object(Article, "id", Article, "id", 6300, {'id': 6300, 'excerpt': '', 'kicker': '', 'content': "<p>[Queen's Gambit] Pleasantness of the cut split</p>\r\n\r\n<p>https://note.com/argumented_world/n/n57d349217705</p>\r\n\r\n<p>【クイーンズギャンビット】カット割りの気持ちよさ</p>\r\n\r\n<p></p>", 'references': '', 'rating': 0.0, 'rating_count': None, 'published_date': dateutil.parser.parse("2023-07-03T02:53:18.372662+00:00"), 'updated_date': dateutil.parser.parse("2023-07-03T02:53:18.410948+00:00")} ) 
    knowledge_knowledge_201.author =  importer.locate_object(UserAccount, "id", UserAccount, "id", 1, {'id': 1, 'password': 'pbkdf2_sha256$600000$Q9AwSzFqEXF1ueS21sGGfz$rZo+NVruXU5Zf5vp00wtuwLn0Z333sn5NtvS8VWKqds=', 'last_login': dateutil.parser.parse("2023-06-30T06:03:10.086511+00:00"), 'is_superuser': True, 'email': 'yurinakanishi33@gmail.com', 'name': 'yuri', 'is_active': True, 'is_staff': True} ) 
    knowledge_knowledge_201 = importer.save_or_locate(knowledge_knowledge_201)

    knowledge_knowledge_202 = Knowledge()
    knowledge_knowledge_202.name = 'queens-gambit-pleasantness-of-the-cut-split'
    knowledge_knowledge_202.slug = 'queens-gambit-pleasantness-of-the-cut-split'
    knowledge_knowledge_202.language =  importer.locate_object(Language, "id", Language, "id", 1, {'id': 1, 'name': 'en'} ) 
    knowledge_knowledge_202.genre_for_url =  importer.locate_object(GenreForURL, "id", GenreForURL, "id", 1, {'id': 1, 'name': 'knowledge'} ) 
    knowledge_knowledge_202.type = 'blog'
    knowledge_knowledge_202.notesite_url = ''
    knowledge_knowledge_202.article =  importer.locate_object(Article, "id", Article, "id", 6301, {'id': 6301, 'excerpt': '', 'kicker': '', 'content': "<p>[Queen's Gambit] Pleasantness of the cut split</p>\r\n\r\n<p>https://note.com/argumented_world/n/n57d349217705</p>\r\n\r\n<p>【クイーンズギャンビット】カット割りの気持ちよさ</p>\r\n\r\n<p></p>", 'references': '', 'rating': 0.0, 'rating_count': None, 'published_date': dateutil.parser.parse("2023-07-03T02:53:18.372662+00:00"), 'updated_date': dateutil.parser.parse("2023-07-03T02:53:18.410948+00:00")} ) 
    knowledge_knowledge_202.author =  importer.locate_object(UserAccount, "id", UserAccount, "id", 1, {'id': 1, 'password': 'pbkdf2_sha256$600000$Q9AwSzFqEXF1ueS21sGGfz$rZo+NVruXU5Zf5vp00wtuwLn0Z333sn5NtvS8VWKqds=', 'last_login': dateutil.parser.parse("2023-06-30T06:03:10.086511+00:00"), 'is_superuser': True, 'email': 'yurinakanishi33@gmail.com', 'name': 'yuri', 'is_active': True, 'is_staff': True} ) 
    knowledge_knowledge_202 = importer.save_or_locate(knowledge_knowledge_202)

    knowledge_knowledge_203 = Knowledge()
    knowledge_knowledge_203.name = 'you-shouldnt-jump-to-conclusions-by-trying-sudoku-jp'
    knowledge_knowledge_203.slug = 'you-shouldnt-jump-to-conclusions-by-trying-sudoku-jp'
    knowledge_knowledge_203.language =  importer.locate_object(Language, "id", Language, "id", 2, {'id': 2, 'name': 'jp'} ) 
    knowledge_knowledge_203.genre_for_url =  importer.locate_object(GenreForURL, "id", GenreForURL, "id", 1, {'id': 1, 'name': 'knowledge'} ) 
    knowledge_knowledge_203.type = 'blog'
    knowledge_knowledge_203.notesite_url = 'https://note.com/argumented_world/n/ne90ff2fc65fd'
    knowledge_knowledge_203.article =  importer.locate_object(Article, "id", Article, "id", 6302, {'id': 6302, 'excerpt': '', 'kicker': '', 'content': '<p>未経験だと注目されるもの</p>\r\n\r\n<p>アイドル、アダルトビデオ、</p>\r\n\r\n<p>未経験イコール無価値</p>\r\n\r\n<p>アダルトビデオの監督</p>\r\n\r\n<p>エンジニア、仕事、料理</p>\r\n\r\n<p></p>', 'references': '', 'rating': 0.0, 'rating_count': None, 'published_date': dateutil.parser.parse("2023-07-03T02:53:18.372662+00:00"), 'updated_date': dateutil.parser.parse("2023-07-03T02:53:18.410948+00:00")} ) 
    knowledge_knowledge_203.author =  importer.locate_object(UserAccount, "id", UserAccount, "id", 1, {'id': 1, 'password': 'pbkdf2_sha256$600000$Q9AwSzFqEXF1ueS21sGGfz$rZo+NVruXU5Zf5vp00wtuwLn0Z333sn5NtvS8VWKqds=', 'last_login': dateutil.parser.parse("2023-06-30T06:03:10.086511+00:00"), 'is_superuser': True, 'email': 'yurinakanishi33@gmail.com', 'name': 'yuri', 'is_active': True, 'is_staff': True} ) 
    knowledge_knowledge_203 = importer.save_or_locate(knowledge_knowledge_203)

    knowledge_knowledge_204 = Knowledge()
    knowledge_knowledge_204.name = 'is-genetic-modification-unnatural-jp'
    knowledge_knowledge_204.slug = 'is-genetic-modification-unnatural-jp'
    knowledge_knowledge_204.language =  importer.locate_object(Language, "id", Language, "id", 2, {'id': 2, 'name': 'jp'} ) 
    knowledge_knowledge_204.genre_for_url =  importer.locate_object(GenreForURL, "id", GenreForURL, "id", 1, {'id': 1, 'name': 'knowledge'} ) 
    knowledge_knowledge_204.type = 'blog'
    knowledge_knowledge_204.notesite_url = ''
    knowledge_knowledge_204.article =  importer.locate_object(Article, "id", Article, "id", 6303, {'id': 6303, 'excerpt': '', 'kicker': '', 'content': '<p>Is genetic modification "unnatural"?</p>\r\n\r\n<p>遺伝子組み換えは「不自然」か？</p>\r\n\r\n<p>https://note.com/argumented_world/n/n6fbe7ecbf0cb</p>\r\n\r\n<p></p>', 'references': '', 'rating': 0.0, 'rating_count': None, 'published_date': dateutil.parser.parse("2023-07-03T02:53:18.372662+00:00"), 'updated_date': dateutil.parser.parse("2023-07-03T02:53:18.410948+00:00")} ) 
    knowledge_knowledge_204.author =  importer.locate_object(UserAccount, "id", UserAccount, "id", 1, {'id': 1, 'password': 'pbkdf2_sha256$600000$Q9AwSzFqEXF1ueS21sGGfz$rZo+NVruXU5Zf5vp00wtuwLn0Z333sn5NtvS8VWKqds=', 'last_login': dateutil.parser.parse("2023-06-30T06:03:10.086511+00:00"), 'is_superuser': True, 'email': 'yurinakanishi33@gmail.com', 'name': 'yuri', 'is_active': True, 'is_staff': True} ) 
    knowledge_knowledge_204 = importer.save_or_locate(knowledge_knowledge_204)

    knowledge_knowledge_205 = Knowledge()
    knowledge_knowledge_205.name = 'is-genetic-modification-unnatural'
    knowledge_knowledge_205.slug = 'is-genetic-modification-unnatural'
    knowledge_knowledge_205.language =  importer.locate_object(Language, "id", Language, "id", 1, {'id': 1, 'name': 'en'} ) 
    knowledge_knowledge_205.genre_for_url =  importer.locate_object(GenreForURL, "id", GenreForURL, "id", 1, {'id': 1, 'name': 'knowledge'} ) 
    knowledge_knowledge_205.type = 'blog'
    knowledge_knowledge_205.notesite_url = ''
    knowledge_knowledge_205.article =  importer.locate_object(Article, "id", Article, "id", 6304, {'id': 6304, 'excerpt': '', 'kicker': '', 'content': '<p>Is genetic modification "unnatural"?</p>\r\n\r\n<p>遺伝子組み換えは「不自然」か？</p>\r\n\r\n<p>https://note.com/argumented_world/n/n6fbe7ecbf0cb</p>\r\n\r\n<p></p>', 'references': '', 'rating': 0.0, 'rating_count': None, 'published_date': dateutil.parser.parse("2023-07-03T02:53:18.372662+00:00"), 'updated_date': dateutil.parser.parse("2023-07-03T02:53:18.410948+00:00")} ) 
    knowledge_knowledge_205.author =  importer.locate_object(UserAccount, "id", UserAccount, "id", 1, {'id': 1, 'password': 'pbkdf2_sha256$600000$Q9AwSzFqEXF1ueS21sGGfz$rZo+NVruXU5Zf5vp00wtuwLn0Z333sn5NtvS8VWKqds=', 'last_login': dateutil.parser.parse("2023-06-30T06:03:10.086511+00:00"), 'is_superuser': True, 'email': 'yurinakanishi33@gmail.com', 'name': 'yuri', 'is_active': True, 'is_staff': True} ) 
    knowledge_knowledge_205 = importer.save_or_locate(knowledge_knowledge_205)

    knowledge_knowledge_206 = Knowledge()
    knowledge_knowledge_206.name = 'is-a-longer-moratorium-better-jp'
    knowledge_knowledge_206.slug = 'is-a-longer-moratorium-better-jp'
    knowledge_knowledge_206.language =  importer.locate_object(Language, "id", Language, "id", 2, {'id': 2, 'name': 'jp'} ) 
    knowledge_knowledge_206.genre_for_url =  importer.locate_object(GenreForURL, "id", GenreForURL, "id", 1, {'id': 1, 'name': 'knowledge'} ) 
    knowledge_knowledge_206.type = 'blog'
    knowledge_knowledge_206.notesite_url = ''
    knowledge_knowledge_206.article =  importer.locate_object(Article, "id", Article, "id", 6305, {'id': 6305, 'excerpt': '', 'kicker': '', 'content': '<p>Is a longer moratorium better?</p>\r\n\r\n<p>モラトリアムは長い方がいい？</p>\r\n\r\n<p>https://note.com/argumented_world/n/ndfdd4959b2c0</p>\r\n\r\n<p></p>', 'references': '', 'rating': 0.0, 'rating_count': None, 'published_date': dateutil.parser.parse("2023-07-03T02:53:18.372662+00:00"), 'updated_date': dateutil.parser.parse("2023-07-03T02:53:18.410948+00:00")} ) 
    knowledge_knowledge_206.author =  importer.locate_object(UserAccount, "id", UserAccount, "id", 1, {'id': 1, 'password': 'pbkdf2_sha256$600000$Q9AwSzFqEXF1ueS21sGGfz$rZo+NVruXU5Zf5vp00wtuwLn0Z333sn5NtvS8VWKqds=', 'last_login': dateutil.parser.parse("2023-06-30T06:03:10.086511+00:00"), 'is_superuser': True, 'email': 'yurinakanishi33@gmail.com', 'name': 'yuri', 'is_active': True, 'is_staff': True} ) 
    knowledge_knowledge_206 = importer.save_or_locate(knowledge_knowledge_206)

    knowledge_knowledge_207 = Knowledge()
    knowledge_knowledge_207.name = 'is-a-longer-moratorium-better'
    knowledge_knowledge_207.slug = 'is-a-longer-moratorium-better'
    knowledge_knowledge_207.language =  importer.locate_object(Language, "id", Language, "id", 1, {'id': 1, 'name': 'en'} ) 
    knowledge_knowledge_207.genre_for_url =  importer.locate_object(GenreForURL, "id", GenreForURL, "id", 1, {'id': 1, 'name': 'knowledge'} ) 
    knowledge_knowledge_207.type = 'blog'
    knowledge_knowledge_207.notesite_url = ''
    knowledge_knowledge_207.article =  importer.locate_object(Article, "id", Article, "id", 6306, {'id': 6306, 'excerpt': '', 'kicker': '', 'content': '<p>Is a longer moratorium better?</p>\r\n\r\n<p>モラトリアムは長い方がいい？</p>\r\n\r\n<p>https://note.com/argumented_world/n/ndfdd4959b2c0</p>\r\n\r\n<p></p>', 'references': '', 'rating': 0.0, 'rating_count': None, 'published_date': dateutil.parser.parse("2023-07-03T02:53:18.372662+00:00"), 'updated_date': dateutil.parser.parse("2023-07-03T02:53:18.410948+00:00")} ) 
    knowledge_knowledge_207.author =  importer.locate_object(UserAccount, "id", UserAccount, "id", 1, {'id': 1, 'password': 'pbkdf2_sha256$600000$Q9AwSzFqEXF1ueS21sGGfz$rZo+NVruXU5Zf5vp00wtuwLn0Z333sn5NtvS8VWKqds=', 'last_login': dateutil.parser.parse("2023-06-30T06:03:10.086511+00:00"), 'is_superuser': True, 'email': 'yurinakanishi33@gmail.com', 'name': 'yuri', 'is_active': True, 'is_staff': True} ) 
    knowledge_knowledge_207 = importer.save_or_locate(knowledge_knowledge_207)

    knowledge_knowledge_208 = Knowledge()
    knowledge_knowledge_208.name = ''
    knowledge_knowledge_208.slug = 'how-to-recover-from-setbacks-jp'
    knowledge_knowledge_208.language =  importer.locate_object(Language, "id", Language, "id", 2, {'id': 2, 'name': 'jp'} ) 
    knowledge_knowledge_208.genre_for_url =  importer.locate_object(GenreForURL, "id", GenreForURL, "id", 1, {'id': 1, 'name': 'knowledge'} ) 
    knowledge_knowledge_208.type = 'blog'
    knowledge_knowledge_208.notesite_url = ''
    knowledge_knowledge_208.article =  importer.locate_object(Article, "id", Article, "id", 6307, {'id': 6307, 'excerpt': '', 'kicker': '', 'content': '<p>How to recover from setbacks</p>\r\n\r\n<p>挫折からどう立ち直るのか</p>\r\n\r\n<p>https://note.com/argumented_world/n/n6825979acca8</p>\r\n\r\n<p></p>', 'references': '', 'rating': 0.0, 'rating_count': None, 'published_date': dateutil.parser.parse("2023-07-03T02:53:18.372662+00:00"), 'updated_date': dateutil.parser.parse("2023-07-03T02:53:18.410948+00:00")} ) 
    knowledge_knowledge_208.author =  importer.locate_object(UserAccount, "id", UserAccount, "id", 1, {'id': 1, 'password': 'pbkdf2_sha256$600000$Q9AwSzFqEXF1ueS21sGGfz$rZo+NVruXU5Zf5vp00wtuwLn0Z333sn5NtvS8VWKqds=', 'last_login': dateutil.parser.parse("2023-06-30T06:03:10.086511+00:00"), 'is_superuser': True, 'email': 'yurinakanishi33@gmail.com', 'name': 'yuri', 'is_active': True, 'is_staff': True} ) 
    knowledge_knowledge_208 = importer.save_or_locate(knowledge_knowledge_208)

    knowledge_knowledge_209 = Knowledge()
    knowledge_knowledge_209.name = 'how-to-recover-from-setbacks'
    knowledge_knowledge_209.slug = 'how-to-recover-from-setbacks'
    knowledge_knowledge_209.language =  importer.locate_object(Language, "id", Language, "id", 1, {'id': 1, 'name': 'en'} ) 
    knowledge_knowledge_209.genre_for_url =  importer.locate_object(GenreForURL, "id", GenreForURL, "id", 1, {'id': 1, 'name': 'knowledge'} ) 
    knowledge_knowledge_209.type = 'blog'
    knowledge_knowledge_209.notesite_url = ''
    knowledge_knowledge_209.article =  importer.locate_object(Article, "id", Article, "id", 6308, {'id': 6308, 'excerpt': '', 'kicker': '', 'content': '<p>How to recover from setbacks</p>\r\n\r\n<p>挫折からどう立ち直るのか</p>\r\n\r\n<p>https://note.com/argumented_world/n/n6825979acca8</p>\r\n\r\n<p></p>', 'references': '', 'rating': 0.0, 'rating_count': None, 'published_date': dateutil.parser.parse("2023-07-03T02:53:18.372662+00:00"), 'updated_date': dateutil.parser.parse("2023-07-03T02:53:18.410948+00:00")} ) 
    knowledge_knowledge_209.author =  importer.locate_object(UserAccount, "id", UserAccount, "id", 1, {'id': 1, 'password': 'pbkdf2_sha256$600000$Q9AwSzFqEXF1ueS21sGGfz$rZo+NVruXU5Zf5vp00wtuwLn0Z333sn5NtvS8VWKqds=', 'last_login': dateutil.parser.parse("2023-06-30T06:03:10.086511+00:00"), 'is_superuser': True, 'email': 'yurinakanishi33@gmail.com', 'name': 'yuri', 'is_active': True, 'is_staff': True} ) 
    knowledge_knowledge_209 = importer.save_or_locate(knowledge_knowledge_209)

    knowledge_knowledge_210 = Knowledge()
    knowledge_knowledge_210.name = 'hidden-covid-positiveties-jp'
    knowledge_knowledge_210.slug = 'hidden-covid-positiveties-jp'
    knowledge_knowledge_210.language =  importer.locate_object(Language, "id", Language, "id", 2, {'id': 2, 'name': 'jp'} ) 
    knowledge_knowledge_210.genre_for_url =  importer.locate_object(GenreForURL, "id", GenreForURL, "id", 1, {'id': 1, 'name': 'knowledge'} ) 
    knowledge_knowledge_210.type = 'blog'
    knowledge_knowledge_210.notesite_url = ''
    knowledge_knowledge_210.article =  importer.locate_object(Article, "id", Article, "id", 6309, {'id': 6309, 'excerpt': '', 'kicker': '', 'content': '<p>hidden-covid-positiveties</p>\r\n\r\n<p>https://note.com/argumented_world/n/n2e1ac209c792</p>\r\n\r\n<p>No.1 「隠れコロナ患者」って響き、何かに似ている．．．！</p>\r\n\r\n<p></p>', 'references': '', 'rating': 0.0, 'rating_count': None, 'published_date': dateutil.parser.parse("2023-07-03T02:53:18.372662+00:00"), 'updated_date': dateutil.parser.parse("2023-07-03T02:53:18.410948+00:00")} ) 
    knowledge_knowledge_210.author =  importer.locate_object(UserAccount, "id", UserAccount, "id", 1, {'id': 1, 'password': 'pbkdf2_sha256$600000$Q9AwSzFqEXF1ueS21sGGfz$rZo+NVruXU5Zf5vp00wtuwLn0Z333sn5NtvS8VWKqds=', 'last_login': dateutil.parser.parse("2023-06-30T06:03:10.086511+00:00"), 'is_superuser': True, 'email': 'yurinakanishi33@gmail.com', 'name': 'yuri', 'is_active': True, 'is_staff': True} ) 
    knowledge_knowledge_210 = importer.save_or_locate(knowledge_knowledge_210)

    knowledge_knowledge_211 = Knowledge()
    knowledge_knowledge_211.name = 'hidden-covid-positiveties'
    knowledge_knowledge_211.slug = 'hidden-covid-positiveties'
    knowledge_knowledge_211.language =  importer.locate_object(Language, "id", Language, "id", 1, {'id': 1, 'name': 'en'} ) 
    knowledge_knowledge_211.genre_for_url =  importer.locate_object(GenreForURL, "id", GenreForURL, "id", 1, {'id': 1, 'name': 'knowledge'} ) 
    knowledge_knowledge_211.type = 'blog'
    knowledge_knowledge_211.notesite_url = ''
    knowledge_knowledge_211.article =  importer.locate_object(Article, "id", Article, "id", 6310, {'id': 6310, 'excerpt': '', 'kicker': '', 'content': '<p>hidden-covid-positiveties</p>\r\n\r\n<p>https://note.com/argumented_world/n/n2e1ac209c792</p>\r\n\r\n<p>No.1 「隠れコロナ患者」って響き、何かに似ている．．．！</p>\r\n\r\n<p></p>', 'references': '', 'rating': 0.0, 'rating_count': None, 'published_date': dateutil.parser.parse("2023-07-03T02:53:18.372662+00:00"), 'updated_date': dateutil.parser.parse("2023-07-03T02:53:18.410948+00:00")} ) 
    knowledge_knowledge_211.author =  importer.locate_object(UserAccount, "id", UserAccount, "id", 1, {'id': 1, 'password': 'pbkdf2_sha256$600000$Q9AwSzFqEXF1ueS21sGGfz$rZo+NVruXU5Zf5vp00wtuwLn0Z333sn5NtvS8VWKqds=', 'last_login': dateutil.parser.parse("2023-06-30T06:03:10.086511+00:00"), 'is_superuser': True, 'email': 'yurinakanishi33@gmail.com', 'name': 'yuri', 'is_active': True, 'is_staff': True} ) 
    knowledge_knowledge_211 = importer.save_or_locate(knowledge_knowledge_211)

    knowledge_knowledge_212 = Knowledge()
    knowledge_knowledge_212.name = 'do-not-compare-yourself-with-others-jp'
    knowledge_knowledge_212.slug = 'do-not-compare-yourself-with-others-jp'
    knowledge_knowledge_212.language =  importer.locate_object(Language, "id", Language, "id", 1, {'id': 1, 'name': 'en'} ) 
    knowledge_knowledge_212.genre_for_url =  importer.locate_object(GenreForURL, "id", GenreForURL, "id", 1, {'id': 1, 'name': 'knowledge'} ) 
    knowledge_knowledge_212.type = 'blog'
    knowledge_knowledge_212.notesite_url = ''
    knowledge_knowledge_212.article =  importer.locate_object(Article, "id", Article, "id", 6311, {'id': 6311, 'excerpt': '', 'kicker': '', 'content': '<p>https://note.com/argumented_world/n/n12bef03b1fc7</p>\r\n\r\n<p>Do not compare yourself with others</p>', 'references': '', 'rating': 0.0, 'rating_count': None, 'published_date': dateutil.parser.parse("2023-07-03T02:53:18.372662+00:00"), 'updated_date': dateutil.parser.parse("2023-07-03T02:53:18.410948+00:00")} ) 
    knowledge_knowledge_212.author =  importer.locate_object(UserAccount, "id", UserAccount, "id", 1, {'id': 1, 'password': 'pbkdf2_sha256$600000$Q9AwSzFqEXF1ueS21sGGfz$rZo+NVruXU5Zf5vp00wtuwLn0Z333sn5NtvS8VWKqds=', 'last_login': dateutil.parser.parse("2023-06-30T06:03:10.086511+00:00"), 'is_superuser': True, 'email': 'yurinakanishi33@gmail.com', 'name': 'yuri', 'is_active': True, 'is_staff': True} ) 
    knowledge_knowledge_212 = importer.save_or_locate(knowledge_knowledge_212)

    knowledge_knowledge_213 = Knowledge()
    knowledge_knowledge_213.name = 'do-not-compare-yourself-with-others'
    knowledge_knowledge_213.slug = 'do-not-compare-yourself-with-others'
    knowledge_knowledge_213.language =  importer.locate_object(Language, "id", Language, "id", 1, {'id': 1, 'name': 'en'} ) 
    knowledge_knowledge_213.genre_for_url =  importer.locate_object(GenreForURL, "id", GenreForURL, "id", 1, {'id': 1, 'name': 'knowledge'} ) 
    knowledge_knowledge_213.type = 'blog'
    knowledge_knowledge_213.notesite_url = ''
    knowledge_knowledge_213.article =  importer.locate_object(Article, "id", Article, "id", 6312, {'id': 6312, 'excerpt': '', 'kicker': '', 'content': '<p>https://note.com/argumented_world/n/n12bef03b1fc7</p>\r\n\r\n<p>Do not compare yourself with others</p>\r\n\r\n<p></p>', 'references': '', 'rating': 0.0, 'rating_count': None, 'published_date': dateutil.parser.parse("2023-07-03T02:53:18.372662+00:00"), 'updated_date': dateutil.parser.parse("2023-07-03T02:53:18.410948+00:00")} ) 
    knowledge_knowledge_213.author =  importer.locate_object(UserAccount, "id", UserAccount, "id", 1, {'id': 1, 'password': 'pbkdf2_sha256$600000$Q9AwSzFqEXF1ueS21sGGfz$rZo+NVruXU5Zf5vp00wtuwLn0Z333sn5NtvS8VWKqds=', 'last_login': dateutil.parser.parse("2023-06-30T06:03:10.086511+00:00"), 'is_superuser': True, 'email': 'yurinakanishi33@gmail.com', 'name': 'yuri', 'is_active': True, 'is_staff': True} ) 
    knowledge_knowledge_213 = importer.save_or_locate(knowledge_knowledge_213)

    knowledge_knowledge_214 = Knowledge()
    knowledge_knowledge_214.name = 'different-from-the-norm-does-not-mean-inferior-jp'
    knowledge_knowledge_214.slug = 'different-from-the-norm-does-not-mean-inferior-jp'
    knowledge_knowledge_214.language =  importer.locate_object(Language, "id", Language, "id", 2, {'id': 2, 'name': 'jp'} ) 
    knowledge_knowledge_214.genre_for_url =  importer.locate_object(GenreForURL, "id", GenreForURL, "id", 1, {'id': 1, 'name': 'knowledge'} ) 
    knowledge_knowledge_214.type = 'blog'
    knowledge_knowledge_214.notesite_url = ''
    knowledge_knowledge_214.article =  importer.locate_object(Article, "id", Article, "id", 6313, {'id': 6313, 'excerpt': '', 'kicker': '', 'content': '<p>different from the norm does not mean inferior.</p>\r\n\r\n<p>No.13 普通と違うだけで、劣っているわけではない。</p>\r\n\r\n<p>https://note.com/argumented_world/n/n15e9c894c2f9</p>\r\n\r\n<p></p>', 'references': '', 'rating': 0.0, 'rating_count': None, 'published_date': dateutil.parser.parse("2023-07-03T02:53:18.372662+00:00"), 'updated_date': dateutil.parser.parse("2023-07-03T02:53:18.410948+00:00")} ) 
    knowledge_knowledge_214.author =  importer.locate_object(UserAccount, "id", UserAccount, "id", 1, {'id': 1, 'password': 'pbkdf2_sha256$600000$Q9AwSzFqEXF1ueS21sGGfz$rZo+NVruXU5Zf5vp00wtuwLn0Z333sn5NtvS8VWKqds=', 'last_login': dateutil.parser.parse("2023-06-30T06:03:10.086511+00:00"), 'is_superuser': True, 'email': 'yurinakanishi33@gmail.com', 'name': 'yuri', 'is_active': True, 'is_staff': True} ) 
    knowledge_knowledge_214 = importer.save_or_locate(knowledge_knowledge_214)

    knowledge_knowledge_215 = Knowledge()
    knowledge_knowledge_215.name = 'different-from-the-norm-does-not-mean-inferior'
    knowledge_knowledge_215.slug = 'different-from-the-norm-does-not-mean-inferior'
    knowledge_knowledge_215.language =  importer.locate_object(Language, "id", Language, "id", 1, {'id': 1, 'name': 'en'} ) 
    knowledge_knowledge_215.genre_for_url =  importer.locate_object(GenreForURL, "id", GenreForURL, "id", 1, {'id': 1, 'name': 'knowledge'} ) 
    knowledge_knowledge_215.type = 'blog'
    knowledge_knowledge_215.notesite_url = ''
    knowledge_knowledge_215.article =  importer.locate_object(Article, "id", Article, "id", 6314, {'id': 6314, 'excerpt': '', 'kicker': '', 'content': '<p>different from the norm does not mean inferior.</p>\r\n\r\n<p>No.13 普通と違うだけで、劣っているわけではない。</p>\r\n\r\n<p>https://note.com/argumented_world/n/n15e9c894c2f9</p>\r\n\r\n<p></p>', 'references': '', 'rating': 0.0, 'rating_count': None, 'published_date': dateutil.parser.parse("2023-07-03T02:53:18.372662+00:00"), 'updated_date': dateutil.parser.parse("2023-07-03T02:53:18.410948+00:00")} ) 
    knowledge_knowledge_215.author =  importer.locate_object(UserAccount, "id", UserAccount, "id", 1, {'id': 1, 'password': 'pbkdf2_sha256$600000$Q9AwSzFqEXF1ueS21sGGfz$rZo+NVruXU5Zf5vp00wtuwLn0Z333sn5NtvS8VWKqds=', 'last_login': dateutil.parser.parse("2023-06-30T06:03:10.086511+00:00"), 'is_superuser': True, 'email': 'yurinakanishi33@gmail.com', 'name': 'yuri', 'is_active': True, 'is_staff': True} ) 
    knowledge_knowledge_215 = importer.save_or_locate(knowledge_knowledge_215)

    knowledge_knowledge_216 = Knowledge()
    knowledge_knowledge_216.name = 'considere-of-male-equal-blue-and-female-equal-red-through-pythics-jp'
    knowledge_knowledge_216.slug = 'considere-of-male-equal-blue-and-female-equal-red-through-pythics-jp'
    knowledge_knowledge_216.language =  importer.locate_object(Language, "id", Language, "id", 2, {'id': 2, 'name': 'jp'} ) 
    knowledge_knowledge_216.genre_for_url =  importer.locate_object(GenreForURL, "id", GenreForURL, "id", 1, {'id': 1, 'name': 'knowledge'} ) 
    knowledge_knowledge_216.type = 'blog'
    knowledge_knowledge_216.notesite_url = ''
    knowledge_knowledge_216.article =  importer.locate_object(Article, "id", Article, "id", 6315, {'id': 6315, 'excerpt': '', 'kicker': '', 'content': '<p>男性＝青、女性=赤を物理学的に考えてみる</p>\r\n\r\n<p>https://note.com/argumented_world/n/nb0872baa3ac0</p>\r\n\r\n<p>considere-of-male-equal-blue-and-female-equal-red-through-pythics</p>\r\n\r\n<p></p>', 'references': '', 'rating': 0.0, 'rating_count': None, 'published_date': dateutil.parser.parse("2023-07-03T02:53:18.372662+00:00"), 'updated_date': dateutil.parser.parse("2023-07-03T02:53:18.410948+00:00")} ) 
    knowledge_knowledge_216.author =  importer.locate_object(UserAccount, "id", UserAccount, "id", 1, {'id': 1, 'password': 'pbkdf2_sha256$600000$Q9AwSzFqEXF1ueS21sGGfz$rZo+NVruXU5Zf5vp00wtuwLn0Z333sn5NtvS8VWKqds=', 'last_login': dateutil.parser.parse("2023-06-30T06:03:10.086511+00:00"), 'is_superuser': True, 'email': 'yurinakanishi33@gmail.com', 'name': 'yuri', 'is_active': True, 'is_staff': True} ) 
    knowledge_knowledge_216 = importer.save_or_locate(knowledge_knowledge_216)

    knowledge_knowledge_217 = Knowledge()
    knowledge_knowledge_217.name = 'considere-of-male-equal-blue-and-female-equal-red-through-pythics'
    knowledge_knowledge_217.slug = 'considere-of-male-equal-blue-and-female-equal-red-through-pythics'
    knowledge_knowledge_217.language =  importer.locate_object(Language, "id", Language, "id", 1, {'id': 1, 'name': 'en'} ) 
    knowledge_knowledge_217.genre_for_url =  importer.locate_object(GenreForURL, "id", GenreForURL, "id", 1, {'id': 1, 'name': 'knowledge'} ) 
    knowledge_knowledge_217.type = 'blog'
    knowledge_knowledge_217.notesite_url = ''
    knowledge_knowledge_217.article =  importer.locate_object(Article, "id", Article, "id", 6316, {'id': 6316, 'excerpt': '', 'kicker': '', 'content': '<p>男性＝青、女性=赤を物理学的に考えてみる</p>\r\n\r\n<p>https://note.com/argumented_world/n/nb0872baa3ac0</p>\r\n\r\n<p>considere-of-male-equal-blue-and-female-equal-red-through-pythics</p>\r\n\r\n<p></p>', 'references': '', 'rating': 0.0, 'rating_count': None, 'published_date': dateutil.parser.parse("2023-07-03T02:53:18.372662+00:00"), 'updated_date': dateutil.parser.parse("2023-07-03T02:53:18.410948+00:00")} ) 
    knowledge_knowledge_217.author =  importer.locate_object(UserAccount, "id", UserAccount, "id", 1, {'id': 1, 'password': 'pbkdf2_sha256$600000$Q9AwSzFqEXF1ueS21sGGfz$rZo+NVruXU5Zf5vp00wtuwLn0Z333sn5NtvS8VWKqds=', 'last_login': dateutil.parser.parse("2023-06-30T06:03:10.086511+00:00"), 'is_superuser': True, 'email': 'yurinakanishi33@gmail.com', 'name': 'yuri', 'is_active': True, 'is_staff': True} ) 
    knowledge_knowledge_217 = importer.save_or_locate(knowledge_knowledge_217)

    # Re-processing model: knowledge.models.Knowledge


























































































































































































































